<!-- $Id$ -->
<chapter id="applikationer">
<title>Linux applikationer</title>

<para>
Til Linux findes der en stor mængde applikationer. Det går lige fra små
smarte tekstformateringsprogrammer med få linjers kode og op til
meget store tekstbehandlingssystemer. De allerfleste
programmer til Linux er gratis og beskyttet af en "Open Source"-lignende
licens. Men som man måske ikke skulle tro, kan der købes programmer
til Linux. Af hensyn til det frie og uafhængige grundlag for
Linux vil disse aldrig udgøre kernen i et Linux-system, men de vil altid
være mulige tilføjelser.
</para>

<para>
<indexterm><primary>Matlab</primary></indexterm>
<indexterm><primary>betalingsprogrammer</primary></indexterm>
Programmer som ApplixWare og Matlab er kommercielle og sælges kun i
binær form, som det kendes fra andre styresystemer. En variant af
denne salgsform findes for kontorpakken StarOffice. Den kan hentes
gratis fra Internettet, men det må ikke
videregives, og da det fylder ca. 100 MB, kan firmaet bag StarOffice (SUN)
tjene på at sælge den på cdrom. Det ændres dog den 13. oktober 2000, 
hvor kildeteksten frigives under Open Source-licensen GPL.
Database-firmaer som Oracle og
Informix har frigivet udgaver af deres systemer til Linux, og de er
ikke "Open Source". 
</para>

<para>
Corel meddelte i oktober 1998, at WordPerfect bliver frigjort til gratis
hentning i en næsten 100% fuld version (den er gratis for private, mens
firmaer må betale).  Programmet skal registreres inden for 3
måneder. Programmet findes kun i binær form, men det er et meget flot
træk af et firma, som har meldt ud, at Linux er en kerneplatform, som
skal understøttes. Lige før jul 1998 kom så den gratis version. Mere end
250.000 Linux brugere havde efter en uge hentet denne version af
WordPerfect. I dag kan du få hele WordPerfect Office Suite 2000 til 
Linux, men dog endnu ikke på dansk. Se mere på
<ulink url="http://linux.corel.com">http://linux.corel.com</ulink>.
</para>

<sect1 id="xterm">
<title>xterm</title>
<indexterm><primary>xterm</primary></indexterm>
<para>
Med Linux skal du hyppigt køre programmer med en stribe
parametre, som skal indtastes. Derfor er <command>xterm</command>
vigtig at kende. Programmet <command>xterm</command> er et simpelt
grafisk program, hvor du kan skrive kommandoer til den valgte kommandofortolker
(typisk shell'en<command>bash</command>).
</para>

<para>
Der er et par funktioner i <command>xterm</command>, som er uhyre
nyttige at kende. Tryk Ctrl og venstre/midterste museknap over en
<command>xterm</command> for at sætte en række indstillinger, f.eks. om
der skal være rullebjælke på vinduets kant og lignende. Ctrl og højre
musetast anvendes til at ændre skriftstørrelsen efter behov.
Du skal også vide, at du kan afslutte din kommandofortolker
(<command>bash</command>), dvs. den fortolker, som håndterer, hvad du
skriver af kommandoer, ved at trykke <command>Ctrl-D</command> eller
skrive <command>exit</command>.
</para>

<FIGURE ID="xterm-fig" FLOAT="1">
<TITLE>Eksempel på <command>xterm</command></TITLE>
<GRAPHIC FILEREF="xterm.&magic;"  SCALE="60"></GRAPHIC>
</FIGURE>

<para>
Både til Gnome og KDE findes der særlige programmer, som i
funktionalitet minder om <command>xterm</command>. Til Gnome findes
f.eks. <command>gnome-terminal</command>. Ved at benytte
<command>gnome-terminal</command>, når du bruger Gnome, får du en mere
ensartet brugergrænseflade. Du vil endvidere bemærke en række
menupunkter øverst i vinduet. Her kan du indstille din
<command>gnome-terminal</command> på mange forskellige måder,
f.eks. kan du have et grafikbillede som baggrund. Til KDE findes der
tilsvarende <command>kvt</command> og <command>konsole</command>.
</para>
</sect1>

<sect1 id="man">
<title>Programmerne man og info er vejen til hjælp</title> 
<indexterm><primary>man</primary></indexterm><para>
<indexterm><primary>info</primary></indexterm>
I UNIX-verdenen kan du ofte få hjælp ved at skrive programnavnet
efterfulgt af <filename>-h</filename> eller
<filename>--help</filename>, men det er mere normalt at læse manualen
ved at skrive <command>man</command> eller
<command>info</command> til at få hjælp til
programmerne. Info-systemet er en forløber for HTML-kode med henvisninger og
menuer, men det er rent tekstbaseret. Det er hurtigt at vise
dokumentation på denne måde, men det er ved at blive erstattet af HTML.
</para>

<para>
UNIX-programmet <command>man</command> er meget praktisk at kende
for at lære at bruge de mange options, der ofte findes til
programmerne. Som eksempel kan du se dokumentationen for
<command>man</command>-programmet ved at skrive <command>man
man</command> på en kommandolinje.
</para>

<screen>
NAME

man - format and display the on-line manual pages
manpath - determine user's search path for man pages

SYNOPSIS

man [-acdfhkKtwW] [-m system] [-p string] [-C config_file]
[-M path] [-P pager] [-S section_list] [section] name  ...

DESCRIPTION
man  formats  and displays the on-line manual pages.
</screen>

<para>
Dette viser, at brugeren kan skrive <command>man
PROGRAMNAVN</command> og få yderligere funktionalitet ved at tilføje
ekstra flag, såsom <command>man -w PROGRAMNAVN</command>, som viser,
hvilken fil der indeholder man-siden.
</para>

<para>
Under X kan du også bruge en grafisk udgave af
<command>man</command>. Dette program hedder
<command>xman</command>. Du behøver ikke fortælle
<command>xman</command> på kommandolinjen, hvilket program du ønsker
at læse manualen til. Endvidere kan Gnomes hjælpesystem også vise dig 
man-sider. Gnomes hjælpesystem finder du i menuen i panelet (den med
fodaftrykket).
</para>
</sect1>

<sect1 id="progtools">
<title>Programmeringsværktøjer</title>

<sect2 id="programmeringssprog">
<title>Programmeringssprog</title>
<indexterm><primary>Programmering</primary></indexterm>
<para>
Til Linux findes de førende programmeringssprog C og C++, hvor 32 bit
oversætteren GNU C/C++ compiler anvendes (<command>gcc</command> og
<command>g++</command>). <!--Der er givet flere eksempler på, hvordan du
kommer i gang med at programmere i xref linkend="programmering"-->
</para>

<para>
Udover C og C++ findes der bl.a. Lisp, Java, Ada, Scheme, assembler,
Smalltalk, Tcl/Tk, Python, Perl, awk, sed og oversættere fra Pascal
eller Fortran til C. Kommercielle C, C++ og Fortran 77/90 oversættere kan
også købes, f.eks. leverer Portland Group en hel række (se <ulink
url="http://www.pgroup.com">http://www.pgroup.com</ulink>).
</para>

<para>
Hvert af sprogene har sine stærke (og svage) sider og har fundet anvendelse
på en række områder. I dag ser det ud til, at Perl står meget
stærkt. Perl er et fortolket sprog, som ikke er effektivt til store
numeriske beregninger, men uovertruffent til at lave programmer, der
skal foretage reformattering af tekst. Med ret simple kommandoer kan
du hurtigt lave programmer, som i C ville fylde flere hundrede
linjer. <!-- Eksempler er givet i xref linkend="perl-sect1".-->
</para>

<para>
Til hurtigt at lave programmer med et grafisk brugergrænseflade
har Tcl/Tk og Python også fået stor udbredelse. Mere om disse i
programmeringsbogen "Linux - Friheden til at programmere", som kan
hentes fra <ulink url="http://www.sslug.dk/linuxbog">http://www.sslug.dk/linuxbog</ulink>.
</para>
</sect2>
</sect1>

<sect1 id="editorer">
<title>Teksteditorer</title>
<indexterm><primary>Teksteditorer</primary></indexterm>
<para>
I Linux er tekstbehandling ofte nødvendig. For eksempel når
konfigurationsfiler skal tilrettes. Derfor er det vigtigt at vide noget om,
hvordan tekster kan manipuleres med forskellige teksteditorer. Hvilke
muligheder giver de forskellige teksteditorer. Hvilke begrænsninger har
de enkelte teksteditorer. Hvornår skal jeg bruge <command>vi</command>?
Hvilke andre editorer kan benyttes?
</para>

<sect2 id="pico">
<title>pico</title>
<para>
Editoren <command>pico</command> installeres som en del af pine
RPM-pakken. Med <command>pico</command> får du en ret nem tekst-editor
som også er en integreret del af postprogrammet
<command>pine</command>. På <xref linkend="pico-fig"> er vist et
terminal-vindue, hvor <command>pico</command> er startet op med en tekst-fil.
</para>

<FIGURE ID="pico-fig" FLOAT="1">
<TITLE><command>pico</command></TITLE>
<GRAPHIC FILEREF="pico.&magic;"  SCALE="40"></GRAPHIC>
</FIGURE>

<para>
Du skal ikke lære ret mange kommandoer med <command>pico</command> og
de står endda i bunden af vinduet. Her betyder ^ at du skal holde
kontroltasten nede og samtidig trykke den efterfølgende tast.
</para>

</sect2>

<sect2 id="mcedit">
<title>mcedit</title>
<indexterm><primary>mcedit</primary></indexterm>
<para>

Programmet <command>mcedit</command> er teksteditoren som hører til
filhåndteringsprogrammet Midnight Commander (en Norton Commander
efterligning, som kaldes med <command>mc</command>, se <xref linkend="mc">).
For en tidligere DOS bruger er <command>mcedit</command> er let at gå
til og den har indbygget simpel syntaksfremhævning til en hel del sprog.
</para>

<para>
Hvis <command>mcedit</command> skal kunne skrive eller vise de danske
tegn æ, ø og å, skal det ikke konfigureres i
<command>mcedit</command>, men i selve Midnight Commander. I
<command>mc</command> vælges "F9, Options, Display Bits, Full 8 bits
output og Full 8 bits input". Derefter gemmes indstillingen med
"Options, Save setup".
</para>

<para>
Den naturlige måde at benytte <command>mcedit</command> er, at starte den
inde fra Midnight Commander. Dette gøres ved at placere markørbjælken på
den ønskede fil og trykke F4 (Edit).
</para>

</sect2>

<sect2 id="nedit">
<title>nedit</title>
<indexterm><primary>nedit</primary></indexterm>
<para>
Hvis du er ude efter en enkel editor, som ikke kræver ret meget
tilvænning, bør du se på <command>nedit</command>, som følger med
SuSE, men ikke Red Hat. (Begge kører RPM-format, så det er
ofte muligt at installere fra en SuSE cdrom på en Red Hat maskine).
</para>

<para>
Programmet <command>nedit</command> kan, som det er vist på <xref linkend="nedit-fig">, lave syntaks-visning (eng. highlight). Der er en del muligheder
i <command>nedit</command>, og alligevel er den nem at gå til, så vi
kan varmt anbefale den. Der er dog også grund til at lære
f.eks. <command>vi</command>, <command>pico</command> og/eller
<command>emacs</command> senere, idet <command>nedit</command> ikke
kan køre uden X-vinduessystemet. Med andre ord, hvis du skal redigere en
fil i Linux teksttilstand, er det godt at kunne lidt andet. Desuden er
<command>nedit</command> normalt ikke installeret på andre
UNIX-systemer, men <command>emacs</command> er ofte og
<command>vi</command> er altid.
</para>

<FIGURE ID="nedit-fig" FLOAT="1">
<TITLE><command>nedit</command> med en C-fil læst ind</TITLE>
<GRAPHIC FILEREF="nedit.&magic;"  SCALE="40"></GRAPHIC>
</FIGURE>

</sect2>


<sect2 id="emacs">
<title>Emacs</title>
<indexterm><primary>Emacs</primary></indexterm>
<para>
I en klasse for sig selv er Emacs (<command>emacs</command>) og
søster-programmet XEmacs (<command>xemacs</command>), som begge kan
utroligt mange ting, men kræver meget hukommelse (den eksekverbare fil
i X-udgave er på ca. 2,3 MB). XEmacs er relativt enkel at bruge, idet
der er både menuer og kommandoer - Emacs har ikke helt så smarte knapper,
men kun tekstmenuer. Desværre følger kun Emacs og ikke XEmacs med de
fleste udgaver af Red Hat, men XEmacs findes som Red Hat pakker, og
det er let at installere den.
</para>

<para>
Emacs og XEmacs har syntaksfremhævning til næsten alle
programmeringssprog (også Matlab og LaTeX), hvilket gør dem meget
lækre at arbejde med. Syntaksen i koden forstås, så indrykning af
f.eks. C-kode sker automatisk, og koder vises med enten forskellige
skrifttyper og/eller farver.
</para>

<para>
XEmacs og Emacs kan konfigureres gennem et meget slagkraftigt
makrosystem, så programmering eller tekstbehandling kan tilpasses ud
fra næsten alle ønsker. Hvis det måtte ønskes, kan Emacs styre næsten
alt. Du kan fra Emacs oversætte C-programmer, du har redigeret, og køre
en debugger direkte fra Emacs. Du kan sende og modtage elektronisk post
gennem Emacs. Der er endvidere mulighed for at starte en kommandofortolker
op i Emacs, hvorfra programmer kan udføres. Alt dette kan køres
samtidig med redigering af et vilkårligt antal filer.  Mange siger tit
"Emacs kan bl.a. alt", og pånær at lave kaffe er det ikke
modsagt. Til teksteditering og programmering er Emacs en Rolls Royce.
</para>

<FIGURE ID="Emacs-fig" FLOAT="1">
<TITLE>Emacs med to filer åbne</TITLE>
<GRAPHIC FILEREF="emacs.&magic;"  SCALE="40"></GRAPHIC>
</FIGURE>

<para>
<indexterm><primary>buffer</primary></indexterm>

Filer redigeres ikke direkte på harddisken, men arbejdes på i såkaldte
buffere, altså kopieres filens indhold til hukommelsen, hvor Emacs så
behandler den. Således forhindrer man de mest alvorlige fejl, der
skyldes at to programmer vil bruge samme fil samtidigt. Det er dog i
daglig brug ikke til at skelne fra anden redigering af tekstfiler, så
man taler normalt om buffere og åbne filer i flæng. En buffer er helt
speciel, nemlig minibufferen, der altid er åben. Den er altid den
nederste linie, og den bruges af Emacs til at vise dig forskellige
beskeder i, og det er den, man skriver kommandoer mv. i.
</para>

<para>
Start Emacs op ved at skrive <command>emacs</command>, hvad enten du
er i en tekst-tilstand eller i en grafisk brugerflade. Emacs har
menuer, hvorfra mange af funktionerne kan styres. Ud for hver funktion
står også en tastaturkode. Derfor lærer du hurtigt at styre Emacs,
også hvis du foretrækker tastaturkoder. Her gives en kort oversigt
over de mest anvendte tastaturkoder. Ctrl står for kontroltasten, og
Meta står for Meta-tasten, der i Linux er lig med Alt-tasten (eller
Escape).
</para>

<para>
<indexterm><primary>Emacs kommandoer</primary></indexterm>
<table>

<title>Oversigt over de mest anvendte emacs-kommandoer.</title>
<tgroup cols=2 align="char">
<thead>
<row>
<entry>Kommando
</entry>

<entry>
Forklaring
</entry>

</row>
</thead>

<tbody>
<row><entry>Ctrl-h ?</entry> <entry> Hjælp om hjælpesystemet. Den
indbyggede hjælp er enormt god, når man lige lærer at bruge
den.</entry></row>

<row><entry>Ctrl-x Ctrl-f</entry> <entry> Find fil (til
 indlæsning). Indtast navnet på den ønskede fil, eller
 anvend tabulator til at få fil-liste, og brug musen (midterste knap) til
 at vælge. Hvis filen ikke findes i forvejen, vil den blive
 oprettet. Bemærk, at <command>Ctrl-x f</command> er noget helt andet!
</entry></row>

<row><entry>Ctrl-x k</entry> <entry> Dræb buffer. Anvendes til at fjerne den
 indlæste fil.
</entry></row>

<row><entry>Ctrl-x Ctrl-s</entry> <entry> Gem fil med samme filnavn.
</entry></row>

<row><entry>Ctrl-x Ctrl-w</entry> <entry> Gem fil med nyt filnavn.
</entry></row>

<row><entry>Ctrl-s</entry> <entry> Søg efter det, du angiver. Der skal
 ikke trykkes return til sidst. Tryk Ctrl-s for at søge til næste
 fremkomst af det valgte mønster.
</entry></row>

<row><entry>Meta-%</entry> <entry> Søg og erstat (tryk Alt-Shift-5). Til de enkelte
 steder, hvor der kan
 erstattes, kan tastes y for erstat, n for spring videre og endelig kan
 tastes ! (udråbstegn) for at erstatte alle kommende forekomster.
</entry></row>

<row><entry>Markering af tekst</entry> <entry> Dette kan ske ved at
 trykke venstre museknap ned og trække ned over teksten. Teksten er nu
 i en redigerings-buffer.
</entry></row>

<row><entry>Ctrl-_</entry> <entry> Undo.
</entry></row>

<row><entry>Ctrl-x 1</entry> <entry>Vis kun en ramme i vindue.
</entry></row>

<row><entry>Ctrl-x 2</entry> <entry>Del aktuelle vindue i to rammer,
som kan bruges til at redigere forskellige filer.
</entry></row>

<row><entry>Ctrl-q TEGN</entry> <entry>Quote - bruges til at indtaste
f.eks. linieskift Ctrl-M (Skriv Ctrl-q Ctrl-M).
</entry></row>

<row><entry>Ctrl-w</entry> <entry> Klipper markeret tekst til
 redigeringsbuffer. Sker hurtigere med et dobbeltklik på højre museknap.
</entry></row>

<row><entry>Ctrl-y</entry> <entry> Yank text, dvs. indsæt
 tekst. Bemærk, at dette kan ske hurtigere med midterste museknap.
</entry></row>

<row><entry>Meta-q</entry> <entry> Formater tekst til at fylde
 linjerne ud. Meget anvendelig til almindelig tekst, hvis linjerne er
 delt meget skævt. Emacs kan også genkende formler, som ikke vil blive
 ombrudt.</entry></row>

<row><entry>Meta-x</entry> <entry> Kør en kommando. Man skriver
kommandoens navn i minibufferen og trykker enter.</entry></row>

</tbody>
</tgroup>
</table>
</para>

<para>
Det kan også nævnes, at Ctrl-venstre museknap giver en oversigt over
filer, der er indlæst. På den måde kan du hoppe mellem filerne, du har
indlæst. Med Ctrl-højre museknap kan der ændres skærmens skrift. Bemærk, at
Emacs kan og bør sættes op til brugeren. Dette gøres i en
<filename>.emacs</filename> fil, der gemmes i hjemmekataloget.  Her er
et eksempel på indholdet af en <filename>.emacs</filename>-fil. Du kan
nøjes med de første fire linjer til at begynde med. Senere kan du
bygge videre på standardindstillingerne - alt efter dine ønsker. 
</para>

<indexterm><primary>.emacs fil</primary></indexterm>

<screen>
<prompt>;De første fire linjer vil gøre, at de danske bogstaver virker rigtigt.</prompt>
(standard-display-european t)
(set-input-mode (car (current-input-mode))
  (nth 1 (current-input-mode))
  0)


<prompt>;Bind nogle gode funktioner til Ctrl- og musetasterne</prompt>
<prompt>;;Ctrl-venstre mus giver menu over åbne filer</prompt>
<prompt>;;Ctrl-midterste mus viser afsnit i filen som der kan hoppes til</prompt>
<prompt>;;    For C-filer er det alle funktioner (cool).</prompt>
<prompt>;;Ctrl-højre mus for at vælge skrifttype</prompt>
(global-set-key [\C-down-mouse-1] 'mouse-buffer-menu)
(global-set-key [\C-down-mouse-2] 'imenu)
(global-set-key [\C-down-mouse-3] 'mouse-set-font)

;; Praktiske genveje for home, end, Ctrl-left/right og delete tasterne
(define-key global-map [home]    'beginning-of-line)
(define-key global-map [end]     'end-of-line)
(define-key global-map [C-left]  'backward-sexp)
(define-key global-map [C-right] 'forward-sexp)
(define-key global-map [delete] 'delete-char

<prompt>;;Følgende kommando gør at emacs virker (dvs. backspace virker), i tekstmode</prompt> 
<prompt>;;(hvilket man i X kan opnå ved at skrive "emacs -nw").</prompt>

(keyboard-translate ?\C-h ?\C-?)
(define-key global-map "\C-x?" 'help)

<prompt>;Meta-g for goto linje nummer</prompt>
(global-set-key "\M-g" 'goto-line)

<prompt>;Vis linje og kolonne numre</prompt>
(setq line-number-mode t)
(setq column-number-mode t)

<prompt>;For C og HTML filer skal filerne vises med smart farvning</prompt>
(setq c-mode-hook 'font-lock-mode)
(setq html-mode-hook 'font-lock-mode)

<prompt>;Filer der ender på .c og .h er C-filer og .html er HTML-filer</prompt>
(setq auto-mode-alist
  (append '(("\\.c$"  . c-mode)
            ("\\.h$"  . c-mode)
            ("\\.html$" . html-mode)
            ) auto-mode-alist))
</screen>


<para>
<indexterm><primary>major mode</primary></indexterm>
Emacs kan som sagt alt på nær at lave kaffe (hvilket er forkert, da
adskillige i tidens løb har fået Emacs til netop dette). Det betyder
dog ikke, at Emacs kan alt samtidigt på samme buffer; hver buffer
tilpasser sig filtypen, således at hvis man redigerer en C-fil,
optimerer Emacs sig til sådan brug, og hvis man skriver et
LaTeX-dokument, tilpasser Emacs sig det. Ved at Emacs tilpasser sig
forstås, at menuerne, syntaksfarvning, tastaturbindinger (short-cut
keys i Windows-terminologi), tilgængelige kommandoer osv. ændres
således, at det, man skal bruge, altid er let tilgængeligt. Dette er
såkaldte major modes, altså tilstande der i væsentlig grad ændrer den
måde, hvorpå Emacs virker. Lige nu har jeg ca. 12 aktive buffere i
Emacs, hvor den, jeg netop nu skriver i bruger SGML major mode, en
anden dired major mode, nogle stykker fundamental mode (den allermest
grundlæggende, der ingen specielle muligheder har) osv. I denne
buffers nuværende tilstand, kunne jeg trykke Ctrl-c Ctrl-c, og Emacs
ville kalde et program, der validerer den nuværende buffer, men hvis
det havde været et LaTeX-dokument, jeg havde skrevet på, ville Ctrl-c
Ctrl-c have kaldt <command>latex</command> på bufferen. Prøv at trykke
Ctrl-h m i Emacs; det vil få en beskrivelse af den aktuelle major mode
frem.
</para>

<para>
Man skal normalt ikke bekymre sig om, hvordan man får fremkaldt en
ønsket major mode, da Emacs selv holder styr på filtyper
ved hjælp af "efternavne" eller specielt indhold (eksempelvis kan Emacs se, at
filer, der begynder med #!/bin/sh altid er shell scripts). Er man dog
ikke tilfreds med den major mode, man befinder sig i, kan man sagtens
ændre den. Dette gøres med <command>Meta-x
[tilstandsnavn]-mode</command> (f.eks. <command>Meta-x
sgml-mode</command>).
</para>

<para>
<indexterm><primary>minor mode</primary></indexterm>
Hvor major modes tilbyder funktionalitet, der er specielt rettet mod
visse filtyper, er der også minor modes, der er mere generelt
anvendelige, og virker på tværs af major modes. Altså kan en minor
mode som f.eks. <command>flyspell-mode</command>, der foretager løbende
stavekontrol, bruges i <command>sgml-mode</command>,
<command>LaTeX-mode</command> og så fremdeles. Når der foretages
automatisk liniebrydning og syntaksfarvning, er det faktisk en minor
mode, der laver arbejdet, om end mange minor modes virker lidt
forskelligt fra major mode til major mode. Syntaksfarvningen skal f.eks.
ikke farve de samme elementer i et LaTeX-dokument som i C-kode. Minor
modes kaldes på samme måde som major modes.
</para>

<para>
Nu et lille sidespring. Historien går, at der i 80-erne var mange
UNIX-folk, som var stærke <command>vi</command>-fanatikere, og der var
måske lige så mange <command>emacs</command>-fans. For at få
afklaret en gang for alle, hvilken editor der var bedst, blev der
afholdt en dyst i paintball, hvor <command>vi</command>-holdet 
fik en kneben sejr. Dette bør naturligvis efterprøves en dag, da
<command>emacs</command> har udviklet sig meget siden da.
</para>

<para>
Vi kan endvidere anbefale at købe en bog om Emacs, f.eks. <emphasis>SAMS Teach
yourself Emacs in 24 hours</emphasis> af Jesper Pedersen, fra forlaget
SAMS. 
</PARA>

<para>
I øvrigt kan det nævnes, at det ikke bare er i Emacs at de fleste
viste tastaturgenveje kan anvendes, men også i bash, tcsh,
tekstindtastningsfelter i Netscape mv.
</para>


</sect2>

<sect2 id="andreeditorer">
<title>Andre teksteditorer</title>
<indexterm><primary>joe</primary></indexterm>
<indexterm><primary>vim</primary></indexterm>
<indexterm><primary>gedit</primary></indexterm>
<para>
Til Linux findes også <command>vim</command>, som er en udvidelse af
<command>vi</command> bl.a. med farver, når du redigerer C-kode.  Lidt
større editorer er <command>joe</command>, <command>jed</command>.
Joe har et par aliases, når den er installeret, som hedder
<command>jstar</command>, <command>jpico</command> og
<command>jmacs</command>, og som standard er joe sat til at være
<command>jstar</command>.  Jstar er wordstar-kompatibel, og kommandoer
ligner dem som blandt andet Borland anvendte i TurboPascal/Turbo C
oversætternes IDE.  Jpico og Jmacs er selvfølgelig beregnet til at
ligne hhv. pico og jmacs i tastatur og funktioner.
</para>

<para>
En anden brugt editor som i øvrigt også findes i DOS udgave er JED.
Jed kan lave syntaksfremhævning og sættes til at emulere blandt andet emacs, 
wordstar, EDT og Brief.
</para>

<para>
Både Joe og Jed kan i øvrigt konfigures via
hhv. <filename>~/.joerc</filename> og <filename>~/.jedrc</filename> så de
mere eller mindre kan emulere ens foretrukne teksteditor.
</para>

<para>
Der er nok mange, som har vænnet sig til at bruge simple teksteditorer
til Windows  som WordPad, og installeres <command>nedit</command>, har
man næsten samme enkle brugerflade, men <command>nedit</command> kan
mere end WordPad, bl.a. oplysning af C kodesyntaks, så du nemt kan
finde rundt i dine programmer.I KDE findes KWrite (skriv
<command>kwrite</command>) som bl.a. har syntaks oplysning og er
meget enkel at bruge. Til Gnome findes
<command>gedit</command> og <command>gnp</command>. Sidstnævnte minder 
nok mest om Microsoft Windows notepad, men den er samtidig en simpel
HTML-editor.
</para>
</sect2>

</sect1>


<sect1 id="websideredigering">
<title>Redigér Internet hjemmesider</title>
<para>
Til at lave HTML hjemmesider har du flere muligheder. Du kan
selvfølgelig altid starte din favorit editor og skrive dine
hjemmesider med denne. De fleste editorer har ikke meget speciel
understøttelse af HTML, men Emacs kan forstå syntaks og farvekode
filerne (brug Alt-x html-mode og Alt-x font-lock-mode). Tilsvarende
har KWrite samme muligheder.
</para>

<para>
Ønsker du at kunne redigere HTML direkte i grafik tilstand, er der mulighed
for at bruge den indbyggede editor i <command>Netscape</command>.
WordPerfect8 og StarOffice har tilsvarende muligheder for at kunne
udskrive dokumenterne til HTML, men du har ikke samme fleksibilitet,
som hvis du skrev det med Netscape eller en
almindelig editor. Programmet Amaya fra World Wide Web Consortium
(W3C) er også en mulighed. W3C er den officielle organisation bag WWW,
og Amaya er deres browser og HTML-editor. Bruger du Amaya, er du sikker 
på, at dine hjemmesider følger de formelle standarder!
</para>

<para>
W3C udgiver også programmet "HTML Tidy", der kan rette de fleste
syntaksfejl i HTML-filer, og de kører webstedet 
<ulink url="http://validator.w3.org/">http://validator.w3.org/</ulink>, hvor
du kan få tjekket syntaksen på dine websider.
</para>


</sect1>

<sect1 id="palm">
<title>Palmpilot og Linux</title>
<indexterm><primary>Palm Pilot</primary></indexterm>
<para>
Har du en Palmpilot, så fik du sikkert kun programmer med til Windows.
Heldigvis er der en hel del programmer til Linux, så du kan styre din
Palm uden Windows. Et godt sted at starte mht. dokumentation er 
<ulink url="http://www.orbits.com/Palm/">http://www.orbits.com/Palm/</ulink>.
</para>

<itemizedlist mark="bullet">

<listitem> <para> J-pilot som kan ses på <xref linkend="J-pilot-fig">
kan bruges til at styre aftaler, kontakter, opgaver og notater.
<ulink url="http://jpilot.linuxave.net/">http://jpilot.linuxave.net/</ulink>. 
</para></listitem>

<listitem> <para> 
KPilot er en et KDE interface til at lave backup af din Palm. Denne
findes som selvstændig RPM-pakke (<filename>kpilot-*.i386.rpm</filename>).
</para></listitem>

<listitem> <para> 

Pose er en Palm emulator til bl.a. Linux, som anvendes f.eks. til at
teste Palm programmer under Linux før de kører i Palm. Se pose på
<xref linkend="pose-fig">, hvor den indbyggede kalender emuleres. Pose
kan hentes fra 
<ulink url="http://www.palm.com/devzone/pose/seed.html">http://www.palm.com/devzone/pose/seed.html</ulink>
</para></listitem>

<listitem> <para> 
Plucker er et rigtig godt Palm-program til at læse
HTML-filer off-line. Det har et Linux interface til at hente og
pakke HTML-filerne.  Smart at man kan læse sine nyheder etc. i toget
om morgenen :) Se mere på <ulink
url="http://plucker.gnu-designs.com">http://plucker.gnu-designs.com</ulink>
</para></listitem>

<listitem> <para> Pilot-link er den RPM-pakke du nok installerer først
og læs <command>man pilot-link</command>. Med
<command>pilot-xfer</command> kan du overføre databaser og programmer
til og fra din Palm.  Der er mange nyttige programmer i denne pakke,
se dem alle med <command>rpm -ql pilot-link</command>.
</para></listitem>

<listitem> <para> 
Der findes også et udviklingsværktøj
til at lave Palm programmer fra en Linux maskine.  
<ulink url="ftp://ivan.Harhan.ORG/pub/embedded/palmos/prc-tools-0.6.0beta.tgz">ftp://ivan.Harhan.ORG/pub/embedded/palmos/prc-tools-0.6.0beta.tgz</ulink> 
</para></listitem>
</itemizedlist>


<FIGURE ID="J-pilot-fig" FLOAT="1">
<TITLE>J-Pilot</TITLE>
<GRAPHIC FILEREF="J-Pilot.&magic;"  SCALE="30"></GRAPHIC>
</FIGURE>

<FIGURE ID="pose-fig" FLOAT="1">
<TITLE>pose</TITLE>
<GRAPHIC FILEREF="pose.&magic;"  SCALE="50"></GRAPHIC>
</FIGURE>

<para>
Se i øvrigt <ulink url="http://www.gnulinux.com/articles/pilot.shtml">http://www.gnulinux.com/articles/pilot.shtml</ulink>
for en artikel om Palm og Linux.
</para>

</sect1>

<sect1 id="filstyring">
<title>Filstyring</title>
<indexterm><primary>filstyring</primary></indexterm>
<para>
Til Linux findes forskellige filstyringsprogrammer med grafisk
brugergrænseflade som f.eks. dem GNOME og KDE har. 
</para>

<para>
Programmet <command>xfilemanager</command> giver mulighed for at se og
anvende programmer gennem ikoner. En tekstfil kan således trækkes over
på en editor, som så startes med den givne fil. En anden mulighed er
<command>xfm</command>, der har et lignende brugerflade. I øjeblikket
kommer en del nye filhåndteringsprogrammer i beta-test af langt højere
kvalitet. Blandt andet er en Linux-explorer lavet til KDE klar med
integreret fil-, web- og ftp-håndtering, svarende til Explorer i
Microsoft Windows 98. Et tilsvarende program har Corel Linux, GNOME og KDE.
</para>

<para>
XFTP (<command>xftp</command>) bør også nævnes. Programmet er perfekt
til at overføre filer fra en maskine til en anden via ftp. Svarende
til Midnight Commander har du de to maskiner i hhv. venstre og højre
side af vinduet og med musen vælges, hvad der skal kopieres. Programmet
kan også kopiere rekursivt. Desværre bliver programmet ikke længere
vedligeholdt og findes ikke normalt i de udbredte Linux-distributioner.
</para>

<sect2 id="mc">
<title>Midnight Commander</title>
<indexterm><primary>Midnight Commander</primary></indexterm>
<indexterm><primary>Norton Commander</primary></indexterm>
<indexterm><primary>mc</primary></indexterm>
<para>
For folk med DOS baggrund findes der en god Norton Commander klon,
Midnight Commander (<command>mc</command>).  Det kan dog nævnes, at
Midnight Commander har et par ekstra funktioner, f.eks. kan du
montere diske fra andre maskiner og kopiere frem og
tilbage. Tilsvarende er det nemt at koble op til en ftp-konti.
</para>

<FIGURE ID="mc-fig" FLOAT="1">
<TITLE>Midnight Commander</TITLE>
<GRAPHIC FILEREF="mc.&magic;"  SCALE="50"></GRAPHIC>
</FIGURE>

<para>
<indexterm><primary>Midnight Commander</primary></indexterm>
I <command>mc</command> har du farvekoder og symboler til at angive,
om filen kan eksekveres (grøn og *), et symbolsk link (reference til
anden fil angives med @), kataloger (fed skrift og /) eller en 
core fil (levn fra et program, der døde - rød skrifttype). Folkene bag 
Midnight Commander står også bag et filhåndteringsprogram til Gnome,
<command>gmc</command>.
</para>

<FIGURE ID="gmc-fig" FLOAT="1">
<TITLE>Gnomes Midnight Commander</TITLE>
<GRAPHIC FILEREF="gmc.&magic;"  SCALE="50"></GRAPHIC>
</FIGURE>
</sect2>

</sect1>

<sect1 id="data">
<title>Databehandling og visning</title>

<para>
GNU Plot (<command>gnuplot</command>) har i mange år været UNIX
programmet, der er blevet anvendt til at afbilde data grafisk. Der er
både mulighed for at afbilde egne data gemt i en ASCII fil samt få
vist grafer dannet ud fra de almindelige regneoperationer og en række
indbyggede matematiske funktioner. Grafer kan vises i 2D og i 3D. GNU
Plot har mulighed for at eksportere billeder i eps-format, hvorfor det
passer fint sammen med LaTeX. 
</para>

<para>
Grace er et 2D plotte program med et grafisk interface. Programmet
kan producere mange typer af grafer og man har stor kontrol med
hvordan grafen skal se ud. Programmet kan også bruges til databehandling
så som ikke lineære fits, Fourier transformation, feature extraction
m.m.
</para>

<para>
Har du (for mange) penge, kan du købe Mathematica, Maple eller Matlab til
Linux. Alle tre er meget gennemarbejdede og tilbyder et stabilt
udviklingsmiljø med alt inden for numeriske/symbolske metoder og
grafik. Grafikken er her helt i top og meget enkel at anvende.
</para>

<para>
MuPAD er måske også værd at hente. Det er gratis - dog ikke Open
Source. MuPAD kan findes på
<ulink url="http://www.mupad.de">http://www.mupad.de</ulink>. MuPAD er 
et meget avanceret matematik-program, som bl.a. kan regne symbolsk med
bogstaver. På mange områder er MuPAD en mindre kendt konkurrent til
Mathematica og Maple. På det seneste har en hollandsk gut arbejdet på
endnu en konkurrent. Navnet er Yacas (yet another computer algebra
system). Yacas er bestemt ikke modent til daglig brugt, men det er
sjovt at lege med!
</para>


<para>
De gratis Matlab-kloner, Scilab og Octave, er gode til numerisk
manipulation af matricer og vektorer samt anden databehandling. Til
præsentation af grafik er Octave baseret på GNU Plot, mens Scilab har
udviklet deres egne biblioteker til at vise grafer. Disse er
gratis, men ikke på højde med de kommercielle programmer. Pythons
numeriske udvidelser (NumPy) er værd at kigge nærmere på - lidt frækt
kan man sige at Python er en bedre Matlab end Matlab.
</para>

<para>
Vil du vide mere om programmer til matematik, fysik, biologi osv., bør 
du tjekke Scientific Application for Linux: <ulink
url="http://sal.jyu.fi">http://sal.jyu.fi</ulink>. 
</para>
</sect1>

<sect1 id="cad">
<title>CAD</title>
<indexterm><primary>CAD</primary></indexterm>

<para>
Der er flere CAD programmer til Linux og endda flere af dem er
gratis. Det kan anbefales at se mere til Cycas 
<ulink url="http://www.cycas.de">http://www.cycas.de</ulink>, 
Qcad <ulink url="http://www.qcad.org">http://www.qcad.org</ulink> og 
Octree <ulink url="http://www.octree.de">http://www.octree.de</ulink>. 
</para>


<FIGURE ID="cycas-fig" FLOAT="1">
<TITLE>CAD med Cycas</TITLE>
<GRAPHIC FILEREF="cycas.&magic;"  SCALE="40"></GRAPHIC>
</FIGURE>
 

<FIGURE ID="qcad-fig" FLOAT="1">
<TITLE>CAD med QCad</TITLE>
<GRAPHIC FILEREF="qcad.&magic;"  SCALE="40"></GRAPHIC>
</FIGURE>
 

</sect1>


</chapter>
