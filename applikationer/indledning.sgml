<chapter id="applikationer-indledning">
<title>Indledning</title>

<para>Denne bog henvender sig til personer der ønsker at anvende Linux
som en almindelig skrivebordscomputer (altså til forskel fra f.eks. en
server). Formålet med bogen er at introducere en række af de
programmer erfarne Linux brugere anvender til at løse de
arbejdsopgaver der falder inden for rammerne af en
skrivebordscomputer. Undervejs gives også en række tips til brug af
Linux i det hele taget. </para>

<para>Installation af Linux dækkes ikke i denne bog. Det antages at du
allerede har installeret en af de mere almindelige Linux
distributioner som omtalt i bogen 'Linux &ndash; Friheden til at vælge
installation'. <footnote><para>Kan fås fra <ulink
url="http://&linuxbogurl;/"> &linuxbogurl;</ulink></para></footnote>
Til gengæld dækkes installation af programmer i den udstrækning det
kan tænkes at give problemer.</para>

<!-- ====================================================================== -->
<!-- Bogens opbygning -->
<!-- ============================================================ -->

<sect1 id="applikationer-bogens-opbygning">
<title>Bogens opbygning</title>
<indexterm><primary>Grafisk grænsesnit</primary></indexterm>

<para>Nedenfor præsenteres bogens opbygning i grove træk. Der kan være
afvigelser fra dette og der kan især være lidt overlap mellem de
forskellige kapitler, men i det store hele passer
beskrivelserne.</para>

<para>
Da Linux kan betyde mange ting, er der mange forskellige måder at
installere programmer på, og afhængig af hvilken distribution man har
valgt, kan der være flere forskellige måder at installere et program
på. Resten af dette kapitel efter oversigten handler om dette.  </para>

<para>I <xref linkend="kontor"/> præsenteres "kontorprogrammer", som
f.eks. webbrowsere, emailprogrammer, tekstbehandlere, regneark,
mv.</para>

<para>I <xref linkend="tegnegrafik"/>, <xref linkend="digitalbillede"/>, <xref
linkend="lyd"/> og <xref linkend="av.sgml"/> omtales
multimedieprogrammer, altså programmer til f.eks. at høre lyd, se
billeder, bruge et digitalkamera, se video eller DVD'er og redigere
grafik eller video. <xref linkend="cdrombraending"/> handler om
software til at brænde CD rom'er med under Linux.</para>

<para>Programmer til brug på netværk omtales i <xref
linkend="naetvaerks-programmer"/> og det efterfølges af <xref
linkend="applikationer"/> om forskellige programmer der er lidt
vanskelige at putte i en kasse.</para>

<para>Spil er en vigtig klasse af programmer og også til Linux findes
der mange spil &ndash; både kommercielle og frie. Nogen enkelte af disse
omtales i <xref linkend="spil"/>. Beslægtet med dette er
<xref linkend="emulatorer"/> om emulatorer, selv om disse også kan
anvendes til at køre almindelige programmer, f.eks. onlinebanker eller
lignende.</para>

<para>Hovedvægten af de programmer vi omtaler er programmer med
grafisk brugergrænseflade. Imidlertid vil vi også i nogen udstrækning
omtale programmer der anvendes fra kommandolinieinterfacet i
Linux. Det skyldes dels at mange af disse programmer er rigtigt gode
og kan ganske mange ting og dels at disse programmer ofte er væsentligt
nemmere at automatisere end grafiske programmer. De er derfor gode at
kende i mange sammenhænge. Hvis du kun er vant til grafiske programmer
skal du ikke lade dig afskrække af kommandolinieprogrammer &ndash; du
behøver ikke at anvende dem, men vi føler os overbevist om at du også
vil opdage at mange af dem er rigtigt gode værktøjer at kende.</para>

<para>Hvis du efter at have læst alle disse kapitler stadig hungrer
efter programmer til Linux, vil vi godt henlede opmærksomheden på
bogen "Linux &ndash; Friheden til at vælge grafisk brugergrænseflade",
som kan findes på <ulink url="http://&linuxbogurl;/">&linuxbogurl;</ulink>. Denne
bog indeholder også en del beskrivelser af programmer til
Linux. Endeligt findes der 10000vis af programmer til Linux på internettet
&ndash besøg f.eks.
<ulink
url="http://www.freshmeat.net/">www.freshmeat.net</ulink> eller
<ulink
url="http://www.sourceforge.net/">www.sourceforge.net</ulink>
for at finde de første 30-50.000 Linux programmer.</para>

<para>En afsluttende bemærkning: Udviklingen af Linux programmer går
utroligt stærkt. Mange af de programmer vi omtaler vil have udviklet
sig meget siden vi skrev om dem. Ofte vil du derfor opleve
at et program har flere muligheder end dem vi beskriver. Det kan
derfor altid betale sig at besøge et programs hjemmeside og læse lidt
mere om det, hvis du tror programmet er noget for dig, men måske
alligevel er lidt i tvivl.</para>

</sect1>

<!-- ============================================================ -->
<!-- Installation af programmer -->
<!-- ============================================================ -->

<sect1 id="applikationer-installation">
<title>Installation af programmer</title>
<indexterm><primary>Installation af programmer</primary></indexterm>
<indexterm><primary>Installation af
programmer</primary><secondary>under forskellige linuxsystemer</secondary></indexterm>

<para>Da Linux kan betyde mange ting, er der mange forskellige måder
at installere programmer på, og afhængig af hvilken distribution man
har valgt, kan der være flere forskellige måder at installere et
program på. Resten af dette kapitel handler om dette. Du kan roligt
springe det over, indtil du rent faktisk har fundet et program du
gerne vil prøve. </para>

<indexterm><primary>source</primary></indexterm>
<indexterm><primary>kildetekst</primary></indexterm>
<indexterm><primary>src</primary></indexterm>
<indexterm><primary>binær</primary></indexterm>
<para>Overordnet set skelner vi imellem at installere noget fra
kildetekst (også kaldet "source" på engelsk, ofte forkortet "src") og
at installere en "binær" pakke. Kildetekst er det programmet er
skrevet i, som oftest af mennesker, mens "binær" er det format
computeren skal anvende for at kunne afvikle programmet. Man siger at
kildetekst oversætte til binær af en oversætter (compiler).</para>

<indexterm><primary>pakke systemer</primary></indexterm>
<para>Installation af programmer fra kildekode kræver som nævnt en
oversættelse til noget maskinen kan forstå. Dette kræver igen at en
oversætter (eller fortolker) for den pågældende kode er til stede i
systemet. Der kan også være afhængigheder til andre ting,
f.eks. specielle programbiblioteker, eller specielle versioner af
programbiblioteker. Dette kan være ret indviklet hvis man er ny i
Linux verdenen. Istedet kan man som regel få mere glæde af de
pakkesystemer som de fleste distributioner anvender. Derfor vil dette
kapitel først præsentere en oversigt over de mest gængse
pakkesystemer, dernæst de mest udbredte distributioner der bruger dem,
og ikke mindst, hvor man typisk kan finde programmer i det rigtige
pakkeformat til netop ens egen distribution. Afslutningsvis vil en
typisk installation fra kildekode blive gennemgået.</para>

<para>Bemærk at installation af programmer også er omtalt i bøgerne
"Linux &ndash; Friheden til systemadministration" og "Linux &ndash;
Friheden til at vælge installation". Begge kan findes på <ulink
url="http://&linuxbogurl;/">&linuxbogurl;</ulink>.</para>

<!-- =================================================================== -->
<!-- Pakkesystemer -->
<!-- =================================================================== -->
<indexterm><primary>pakke systemer</primary><secondary>hvad er et</secondary></indexterm>
<sect2 id="hvad-er-et-pakkesystem">
<title>Hvad er et pakkesystem</title>

<para>De forskellige programmer i Linux kommer mange steder
fra. Grafikserveren (programmet X11) laves af een gruppe, din
emaillæser af en anden, osv. Alle disse dele samles til et hele,
oftest kaldet en distribution (som f.eks. RedHat, Mandrake, Suse,
Debian, Gentoo, osv).</para>

<para>De enkelte dele bliver som regel lagt i det man kalder
pakker. En pakke indeholder det program man skal installere, samt de
filer programmet har brug for at kunne køre (f.eks. forskellige
ikoner, filer der er nødvendige for at understøtte flere forskellige
sprog, osv). Desuden indeholder pakken information om hvilke andre
pakker der er krævet for at pakken kan installeres. F.eks. kan det
være at et grafisk program til at brænde CD'er med kræver at et
bibliotek til at tale med CD brænder drevet er installeret. (Man siger
at det grafiske program afhænger af biblioteket).</para>

<para>En pakke indeholder også information om hvordan programmet (og
de filer der hører til det) kan afinstalleres. Således skulle man
aldrig komme i den situation at man har et system hvor der er noget
der "ikke virker", eller nogen systemfiler man ikke kan finde ud af
hvor kommer fra, for afhængighederne sikrer imod det første og
muligheden for at fjerne pakker og alle deres filer sikrer imod det
sidste. Ihvertfald i princippet.</para>

<indexterm><primary>RPM</primary></indexterm>

<para>Det mest kendte pakkeformat er formentlig RPM. Det blev
oprindeligt udviklet af RedHat, deraf navnet; "RedHat Packet
Manager". Dette format anvendes idag af mange forskellige
distributioner, blandt andet Mandrake og Suse. Det næstmest kendte er
formentlig DEB, et pakkeformat der blev udviklet til Debian. Dette
format anvendes også af flere forskellige distributioner, blandt andet
Knoppix. Andre formater findes også, men disse er de absolut mest
udbredte.</para>

<indexterm><primary>rpmdrake</primary><secondary>skærmskud
af</secondary></indexterm> <para>Til hvert format og til hver
distribution hører der som regel et eller flere værktøjer til at
administrere pakker. Det er nemlig sådan at pakker ikke, som
f.eks. under Microsoft Windows, kan installere sig selv. Istedet har
man et værktøj til at vise hvilke pakker der er tilgængelige,
installere pakker, vise hvilke der er installeret på systemet,
afinstallere pakker, mv. På <xref linkend="rpmdrakespil-fig"/> kan du
se et skærmskud af det værktøj der under Mandrake 9.1 bruges til at
installere pakker med &ndash; her er brugeren ved at overveje at
installere et spil.</para>

<figure id="rpmdrakespil-fig" float="1">
<title>En bruger overvejer at installere et spil under Mandrake 9.1</title>
<graphic fileref="rpmdrake.&magic;"  scale="80"></graphic>
</figure>

<indexterm><primary>apt-get</primary></indexterm> <para>Andre
distributioner og andre formater har deres egne værktøjer,
f.eks. hedder Debians kommandolinieværktøj
<command>apt-get</command>. Det kan betale sig at læse dokumentationen
til ens distribution og pakkeadministrationssystem. Som regel har
udviklerne gjort sig stor umage for at pakke mange, mange programmer
ned som man kan få stor nytte af at installere og bruge (og eventuelt
fjerne igen) og de værktøjer der følger med er som hovedregel gode til
at give overblik over pakkerne og de forskellige muligheder.</para>

<sect3 id="pakker-hvorfra">
<title>Hvor får man pakker fra</title>

<para>Alt det med pakker er meget godt, men hvor får man pakker fra?
Når man nu har læst om et eller andet fantastisk program i denne her
bog, og gerne vil teste det af på sit eget system, hvor finder man så
en pakke der indeholder det program?</para>

<para>Det første sted man kigger er den distribution man bruger på sit
system. Som nævnt indeholder de fleste distributioner i dag
værktøjer, der viser en liste over alle de pakker (som regel flere
tusinde) der følger med distributionen. Herfra har man som regel også
mulighed for at installere en pakke med et enkelt klik. (Og værktøjet
sørger så for at eventuelle andre pakker der er nødvendige, automatisk
installeres). Selve pakken kan så hentes fra f.eks. en CD rom, eller
fra internettet &ndash; afhængigt af hvordan man har installeret, og
hvilket værktøj der er tale om.</para>

<para>Typisk kan sådanne værktøjer også konfigureres til at hente
pakker fra andre kilder. Et eksempel er pakker der ikke kan
distribueres i alle lande, f.eks. pakker der indeholder stærk
kryptologi. Disse samler distributørerne typisk på f.eks. et website,
og man kan så senere (efter installation og relativt uproblematisk)
tilføje alle disse pakker til listen over pakker man kan
installere. En distributør kan også have pakker der ikke ligger på
installationsmediet (CDROM/DVD/mv) men kun er tilgængelig på
internettet. Disse kan så tilføjes på lignende vis. Fordelen ved disse
tilgange er at pakkerne passer perfekt sammen med de øvrige pakker på
systemet &ndash; hvilket desværre ikke altid er tilfældet med
tredjepartspakker. Eksempelvis er pakken "burgerspace" som brugeren
overvejer at installere på <xref linkend="rpmdrakespil-fig"/> er
faktisk en del af Mandrakes "contrib" arkiv for Mandrake 9.1.</para>

<para>Alternativt til distributørernes pakker kan man opleve at
programmørerne af et program selv har pakket deres program i et
pakkeformat der passer til ens system. Det mest mødte er RPM pakker
&ndash; formentlig fordi det er relativt let at få pakker ind i Debian
(i det mindste i forhold til mange andre distributioner) så
programmører der ønsker det har mulighed for at få deres pakker ind i
selve distributionen relativt let. Sådanne pakker kan man typisk
nedhente fra internettet, f.eks. fra programmernes hjemmesider.</para>


<sect4 id="pakker-kompatible">
<title>Pakkekompatibilitet</title>

<para>Som udgangspunkt skal en binær pakke passe ret præcist til ens
distribution for at man kan anvende den. Det kan være angivet i
navnet, men ellers må man forsøge at regne det ud fra omtalen af
pakken på f.eks. hjemmesiden. En RPM-pakke findes oversat til en eller
flere processor-arkitekturer. Formatet er typisk som følger:
NAVN-VERSION-PAKKETAG.PROCESSOR.rpm, hvor NAVN er navnet på programmet
eller program-pakken, f.eks. "mplayer". VERSION indikerer typisk hvor
langt man er i udviklingen, hvor 1.0 indikerer stabilt, og væsentligt
under 0.5 er meget tidligt i udviklingen. PAKKETAG kan forekomme, hvis
den der har lavet RPM-pakken vil vise at han eller hun har lavet den
&ndash; typisk ved at sætte PAKKETAG til ens egne initialer. PROCESSOR
er "i386" for alle Intel-kompatible 32-bit maskiner. Har man en
Alpha-maskine sætter man PROCESSOR til "alpha". Et eksempel på navn
for en RPM-pakke er "mplayer-0.90pre5-fr1.i386.rpm".  </para>

</sect4> <!-- Pakkekompatibilitet -->

<sect4 id="pakkesystemer-kompatible">
<title>Pakkesystemkompatibilitet</title>

<indexterm><primary>apt-get</primary><secondary>Til Mandrake, RedHat,
mv.</secondary></indexterm>
<indexterm><primary>freshrpm</primary></indexterm>

<para>Selv om RPM og Debian systemer som udgangspunkt ikke kan bruge
hinandens pakkesystemer, er det muligt at installere software der kan
gøre systemerne i stand til at bruge de samme værktøjer og i en vis
udstrækning de samme pakker. F.eks. kan man få værktøjet
<command>apt-get</command> til RedHat og Mandrake (fra <ulink
url="http://freshrpms.net/">http://freshrpms.net/</ulink>). </para>

<indexterm><primary>alien</primary></indexterm> <para>Endeligt findes
der et værktøj til at konvertere imellem forskellige pakkeformater,
herunder DEB og RPM, kaldet <command>alien</command>. (Det er en del
af Debian distributionen).</para>

</sect4> <!-- Pakkesystemkompatibilitet -->
</sect3> <!-- Pakker hvorfra -->

</sect2>

<!-- =================================================================== -->
<!-- RPM baserede systemer -->
<!-- =================================================================== -->
<sect2 id="rpm-baserede-systemer">
<title>RPM baserede systemer</title>
<indexterm><primary>RPM</primary><secondary>systemer der bruger</secondary></indexterm>

<para>RPM baserede systemer har alle værktøjet <command>rpm</command>
til fælles. Det er kommandoliniebaseret &ndash; og ikke specielt let
at komme igang med at bruge. Derfor indeholder alle distributioner
baseret på RPM også andre værktøjer til at håndtere pakker
med. Alligevel vil vi kort præsentere <command>rpm</command>
programmet.</para>

<para>Hvis du vil undersøge en pakke, kaldet
<filename>pakke.rpm</filename>, inden du installerer den, kan du bruge
kommandoen <command>rpm --query --info --package
pakke.rpm</command>. Det kan f.eks. se sådan her ud (hvor der bruges
korte parametre, --query = -q osv):</para>

<screen><prompt>[tyge@hven ~]$ </prompt><userinput>rpm -qip xarman-1.1.0-2.i686.rpm</userinput>
Name        : xarman                       Relocations: (not relocateable)
Version     : 1.1.0                             Vendor: (none)
Release     : 2                             Build Date: ons 20 feb 2002 12:18:51 CET
Install date: (not installed)               Build Host: ripley
Group       : Games/Arcade                  Source RPM: xarman-1.1.0-2.src.rpm
Size        : 321110                           License: GPL
Packager    : Mads Bondo Dydensborg &lt;madsdyd@challenge.dk&gt;
URL         : http://xarman.sf.net/
Summary     : SDL 2 player minesweeper-like action game
Description :
An addictive two player cross between Minesweeper and Dyna Blaster.
</screen>

<para>Det meste af informationen skulle være selvforklarende, men vi
kan nævne et par felter alligevel. "Name" er naturligvis pakkens navn,
her "xarman". "Version" og "Release" fortæller noget om hvilken udgave
af programmet der er tale om. "Group" fortæller i dette tilfælde at
der er tale om et spil ("Games") i undergruppen "Arcade". "Size" er
hvor meget programmet fylder hvis det bliver installeret, osv. Hvis du
er interesseret i at se hvilke filer der vil blive installeret,
såfremt pakken installeres, klares det med <command>rpm -qlp
pakke.rpm</command>:</para>

<screen><prompt>[tyge@hven ~]$ </prompt><userinput>rpm -qlp xarman-1.1.0-2.i686.rpm</userinput>
/usr
/usr/bin
/usr/bin/xarman
/usr/share
/usr/share/doc/xarman-1.1.0
/usr/share/doc/xarman-1.1.0/AUTHORS
/usr/share/doc/xarman-1.1.0/COPYING
/usr/share/doc/xarman-1.1.0/ChangeLog
/usr/share/doc/xarman-1.1.0/README
/usr/share/doc/xarman-1.1.0/TODO
/usr/share/games
/usr/share/games/xarman
/usr/share/games/xarman/graphics
/usr/share/games/xarman/graphics/BD1F1.png
/usr/share/games/xarman/graphics/BD1F2.png
...
/usr/share/games/xarman/sounds/rshow.wav
</screen>

<para>Den enste forskel fra før er at der istedet for "i" blev brugt
"l" som betyder at filerne fra pakken skal vises (--list).</para>

<para>Installation af en pakke foregår ret nemt, med <command>rpm -Uvh
pakke.rpm</command>. Her betyder "U" update (som også dækker
installation), "v" at du vil have information om fremgangen under
installation, og "h" at du vil have en tekstbar der viser
fremgangen. Hvis du vil se hvilke pakker der er installeret på dit
system, så brug <command>rpm -qa</command>, hvor "a" betyder "vis
alle". Dette vil vise en liste af pakker på systemet, som
f.eks:</para>

<screen><prompt>[tyge@hven ~]$ </prompt><userinput>rpm -qa</userinput>
libungif4-4.1.0-19mdk
libintl1-0.10.40-4mdk
libmng1-1.0.3-2mdk
...
openssh-server-3.6.1p2-1.2.91mdk
</screen>

<para>Hvis du vil fjerne en pakke, kan du nu gøre det med <command>rpm
-e pakkenavn</command> (-e = --erase), f.eks. <command>rpm -e
openssh-server</command>.</para>

<para>RPM systemet er virkeligt et stærkt system. Du kan læse mere om
hvad det kan i <citerefentry><refentrytitle>rpm</refentrytitle>
<manvolnum>8</manvolnum></citerefentry> manualsiden. Den kan være lidt
svær at overskue, men så er der hjælp at hente på <ulink
url="http://www.rpm.org/">www.rpm.org</ulink>.</para>

<para>Udover de distributionsspecifikke steder at hente RPM filer på,
kan du også finde en del på <ulink
url="http://www.rpmfind.net/">www.rpmfind.net</ulink>, hvor man blandt
andet kan søge efter RPM filer. En fiks detalje er at hvis du
f.eks. skriver "rf: openjade" i konqueror, (som er KDE systemets
webbrowser), vil den automatisk søge efter RPM filer på www.rpmfind.net.</para>


<!-- ============================================================ -->
<!-- RedHat -->
<!-- ============================================================ -->

<!--
<sect3 id="installation-redhat">
<title>RedHat</title>
<indexterm><primary>RedHat</primary></indexterm>
<para>RedHat er nok en af de mest kendte Linux distributioner. Vi
aner intet om de værktøjer RedHat har til at administrere.... TODO...</para>
</sect3> 
-->
<!-- RedHat -->

<!-- ============================================================ -->
<!-- Mandrake -->
<!-- ============================================================ -->

<sect3 id="installation-mandrake">
<title>Mandrake</title>
<indexterm><primary>Mandrake</primary></indexterm> 
<indexterm><primary>RPM</primary><secondary>systemer der bruger</secondary></indexterm>
<indexterm><primary>Pakkeadministration</primary><secondary>med
Mandrake</secondary> </indexterm> 

<para>Som beskrevet ovenfor, har Mandrake et grafisk
installationsprogram, kaldet <command>rpmdrake</command>. Dette
program kan enten startes fra kommandolinien, eller findes fra
Mandrakes kontrolpanel. Du kan se et skærmskud af dette program på
<xref linkend="rpmdrakespil-fig"/>.</para>

<para><command>rpmdrake</command> er en del af en programsuite til at
håndtere pakkekilder (altså steder at få RPM'er fra), updatere de
installerede pakker og afinstallere pakker. De andre programmer hedder
<command>edit-urpm-sources.pl</command> for programmet til at opsætte
kilder, <command>MandrakeUpdate</command> for at opdatere pakkerne på
systemet, og <command>rpmdrake-remove</command> for at afinstallere
pakker. Det er som hovedregel nemmest at køre disse programmer fra
Mandrakes kontrolpanel.</para>

<para>Af interessante kilder for Mandrake pakker skal især nævnes
MandrakeClub på <ulink
url="http://www.mandrakeclub.com/">www.mandrakeclub.com</ulink> og
"Penguin Liberation Front" på <ulink
url="http://plf.zarb.org/">plf.zarb.org</ulink>. MandrakeClub er en
klub hvor man for et årligt beløb får adgang til en lang række af
pakker, mv. Den anden er en række pakker der ikke kan distribueres med
Mandrake fordi der kan være problemer med deres lovlighed i visse
lande &ndash; det kan f.eks. være patentproblemer, eller problemer med
at stærk kryptering ikke er lovlig i alle lande. At få Mandrake til at
inkludere disse pakker er relativt let, men afhænger en smule af den
specifikke version af Mandrake du kører &ndash; besøg siderne for
flere instruktioner.</para>

</sect3> <!-- Mandrake -->

<!-- ============================================================ -->
<!-- Suse -->
<!-- ============================================================ -->

<!--
<sect3 id="installation-suse">
<title>Suse</title>
<indexterm><primary>Suse</primary></indexterm>
<para>Afsnit om Suse TODO: </para>
</sect3> 
-->
<!-- Suse -->


</sect2>


<!-- =================================================================== -->
<!-- DEB baserede systemer -->
<!-- =================================================================== -->
<sect2 id="deb-baserede-systemer">
<title>DEB baserede systemer</title>
<indexterm><primary>DEB</primary><secondary>systemer der bruger</secondary></indexterm>
<indexterm><primary>Pakkeadministration</primary><secondary>med
Debian</secondary> </indexterm> 

<para>Det basale værktøj til at installere deb-pakker hedder
<command>dpkg</command>. Ligesom <command>rpm</command> er
<command>dpkg</command> komandolinjebaseret. Står man med en deb-fil
skal man bruge <command>dpkg</command> og der er nogle informationer
om ens system der er nemmest at finde med <command>dpkg</command>. Derfor 
er det godt at kende dette værktøj.</para>

<para>Hvis du har en pakke kaldet <filename>pakke.deb</filename> kan du 
få vist nogle basale informationer om pakken med kommandoen
<command>dpkg --info pakke.deb</command>. Det kan se således ud:</para>

<screen>
<prompt>[tyge@hven ~]$ </prompt><userinput>dpkg --info sarien_0.7.0-3_powerpc.deb</userinput>
new debian package, version 2.0.
size 76030 bytes: control archive= 913 bytes.
17 bytes,     1 lines      conffiles
616 bytes,    16 lines      control
558 bytes,     9 lines      md5sums
Package: sarien
Version: 0.7.0-3
Section: games
Priority: extra
Architecture: powerpc
Depends: libc6 (&gt;= 2.3.1-1), libsdl1.2debian (&gt;&gt; 1.2.3)
Installed-Size: 212
Maintainer: Peter Makholm &lt;peter@makholm.net&gt;
Description: An interpreter for AGI resources
Sarien decodes and plays games written for the Sierra
On-Line Adventure Game Interpreter (AGI) system, such as Leisure Suit
Larry in the Land of the Lounge Lizards, Space Quest I and II, and
King's Quest I to IV. Currently AGI versions 2 and 3 are recognized;
support for older AGI v1 games is not available.
.
You need the files from the original games.
<prompt>[tyge@hven ~]$ </prompt>
</screen>

<para>De første par linjer fortæller at det er version 2 af pakke-formatet,
noget om størelsen af pakken og kontrolfilerne i pakken. Feltet "Package"
viser pakkens navn. Feltet "Depends" fortæller hvilket andre pakker man skal
have installeret for at pakken virker, her skal man bruge mindste version 
2.3.1-1 af libc6-pakken og større end version 1.2.3 af libsdl1.2debian-pakken.
"Installed-Size" fortæller hvor meget pakken vil fylde når man installerer den,
dette er angivet i kilobytes. Resten af felterne er nogenlunde selvforklarende.
</para>

<para>
Vil man se hvilke filer pakken installerer kan man bruge kommandoen 
<command>dpkg --contents pakke.deb</command>:
</para>

<screen>
<prompt>[tyge@hven ~]$ </prompt><userinput>dpkg --contents sarien_0.7.0-3_powerpc.deb</userinput>
drwxr-xr-x root/root         0 2003-04-30 03:32:46 ./
drwxr-xr-x root/root         0 2003-04-30 03:32:43 ./usr/
drwxr-xr-x root/root         0 2003-04-30 03:32:45 ./usr/games/
-rwxr-xr-x root/root    133056 2003-04-30 03:32:45 ./usr/games/sarien
drwxr-xr-x root/root         0 2003-04-30 03:32:44 ./usr/share/
drwxr-xr-x root/root         0 2003-04-30 03:32:43 ./usr/share/doc/
drwxr-xr-x root/root         0 2003-04-30 03:32:46 ./usr/share/doc/sarien/
-rw-r--r-- root/root      2155 2001-11-04 06:21:17 ./usr/share/doc/sarien/AUTHORS
-rw-r--r-- root/root       185 2001-09-02 04:37:58 ./usr/share/doc/sarien/BUGS
-rw-r--r-- root/root       638 2001-09-02 00:20:53 ./usr/share/doc/sarien/TODO
-rw-r--r-- root/root       703 2003-04-30 03:32:03 ./usr/share/doc/sarien/copyright
-rw-r--r-- root/root      3295 2001-09-02 04:37:58 ./usr/share/doc/sarien/README.agi.gz
-rw-r--r-- root/root      1180 2003-04-30 03:32:03 ./usr/share/doc/sarien/changelog.Debian.gz
drwxr-xr-x root/root         0 2003-04-30 03:32:44 ./usr/share/man/
drwxr-xr-x root/root         0 2003-04-30 03:32:46 ./usr/share/man/man6/
-rw-r--r-- root/root      3384 2003-04-30 03:32:42 ./usr/share/man/man6/sarien.6.gz
drwxr-xr-x root/root         0 2003-04-30 03:32:43 ./etc/
-rw-r--r-- root/root      3684 2003-04-30 03:32:43 ./etc/sarien.conf
<prompt>[tyge@hven ~]$ </prompt>
</screen>

<para>
Installation af pakker foregår med kommandoen <command>dpkg --install
pakke.deb</command>. Senere kan man så fjerne pakken igen med enten
<command>dpkg --remove pakke</command> der ikke fjerner pakkens
konfigurationsfiler, eller <command>dpkg --purge pakke</command> der fjerner
pakkens konfigurationsfiler. Bemærk at der her bruges pakkenavnet og ikke
navnet på den fil man installerede pakken fra.
</para>

<para>Vil man have information om pakker der er installeret kan man bruge
kommandoen <command>dpkg --status pakke</command> der giver de overordnede
informationer og <command>dpkg --listfiles pakke</command> der viser hvilke
filer der ligger i en pakke.</para>

<para>Det kan også være rart at finde ud af hvilken pakke en fil tilhører.
Dette gøres med <command>dpkg --search filnavn</command>. Filnavnet kan 
indeholde joker-tegn og <command>dpkg</command> vil så finde alle pakker
der matcher.</para>

<para>Ofte vil man dog slet ikke bruge <command>dpkg</command>. Istedet
vil man bruge <command>apt-get</command> eller et grafisk værktøj baseret
på APT som selv vil løse afhængigheder og hente pakker fra pakkearkiver.
</para>



<!-- ============================================================ -->
<!-- Debian -->
<!-- ============================================================ -->
<!--
<sect3 id="installation-debian">
<title>Debian</title>
<indexterm><primary>Debian</primary></indexterm>
<para>Afsnit om Debian, apt-get, TODO:</para>
</sect3>
-->
</sect2>

<!-- =================================================================== -->
<!-- Installation af programmer fra kildekode. -->
<!-- =================================================================== -->
<sect2 id="installation-fra-kildekode">
<title>Installation af programmer fra kildekode</title>
<indexterm><primary>Installation</primary><secondary>af programmer fra
kildekode</secondary></indexterm>

<para>Installation af programmer fra kildekode kan være en
vanskeligere opgave end at installere binære pakker. Det kan dog nogen gange
være nødvendigt at installere fra kildekode &ndash; enten fordi det
program du gerne vil have ikke findes som pakke, eller fordi du gerne
vil have den nyeste version, som frigivet af forfatterne.</para>

<para>Som regel downloader du programmet som det der kaldes en
<filename>tar.gz</filename> fil. Denne fil skal pakkes ud med <command>tar</command>
kommandoen (der findes også grafiske værktøjer til dette, men da du
alligevel skal bruge en konsol for at oversættes, kan du ligeså godt
bruge kommandolinie <command>tar</command>programmet):</para>

<screen><prompt>[tyge@hven ~]$ </prompt><userinput>tar -zxvf filelight-0.5.tar.gz</userinput>
filelight-0.5/
filelight-0.5/po/
filelight-0.5/po/Makefile.am
filelight-0.5/po/Makefile.in
filelight-0.5/filelight/
filelight-0.5/filelight/TODO
...
filelight-0.5/filelight.kdevses
</screen>

<para>Herefter kan du skifte til kataloget som er blevet lavet
(<filename>filelight-0.5</filename> i dette tilfælde), og oversætte
selve programmet. Hvordan det gøres afhænger af programmet og vil
blive berørt i de næste par afsnit.</para>


<!-- =================================================================== -->
<!-- Installation af programmer med autotools -->
<!-- =================================================================== -->
<sect3 id="applikationer-autotools">
<title>Autotools</title>

<para>I dag understøtter de fleste programmer heldigvis det der kaldes
"autotools", som er en måde at lette oversættelse af programmer på. I
det følgende vil dette værktøjssæt kort gennemgåes.</para>

<para>Efter at have udpakket programmet, kan du kigge efter et program
kaldet <command>configure</command> i det katalog programmets
kildekode ligger i. Hvis denne fil findes, er der en god chance for at
programmet bruger autotools. Du kan forsøge at køre denne fil:</para>

<screen><prompt>[tyge@hven filelight-0.5]$ </prompt><userinput>./configure --help</userinput>
`configure' configures this package to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...
...
</screen>

<para>Configure programmet bruges til at opsættes kildekoden til
oversættelse og installation på din computer. Typisk kan du give dette
program et antal parametre, som f.eks. kan angive hvor programmet skal
installeres i filsystemet. Som regel findes der en fil kaldet
<filename>INSTALL</filename> der forklarer hvordan programmet
anvendes. Man kan typisk blot køre programmet:</para>

<screen><prompt>[tyge@hven filelight-0.5]$ </prompt><userinput>./configure</userinput>
checking build system type... i686-pc-linux-gnu
checking host system type... i686-pc-linux-gnu
checking target system type... i686-pc-linux-gnu
checking for a BSD-compatible install... /usr/bin/install -c
checking for -p flag to install... yes
checking whether build environment is sane... yes
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking for style of include used by make... GNU
checking for gcc... gcc
...
fast creating filelight/Makefile
fast creating po/Makefile
config.status: creating config.h
</screen>

<para>Det <command>configure</command> programmet gør er at det
checker dit system for en masse forskellige egenskaber, f.eks. om du
har en virkende oversætter. Hvis nogle af disse tests fejler, vil
<command>configure</command> afbryde, og du må forsøge at finde ud af
hvordan problemet kan løses. Hvis <command>configure</command>
afslutter succesfuldt, kan du nu oversætte programmet</para>

<screen><prompt>[tyge@hven filelight-0.5]$ </prompt><userinput>make</userinput>
make  all-recursive
make[1]: Entering directory `/home/scratch/Compile/filelight-0.5'
Making all in filelight
make[2]: Entering directory `/home/scratch/Compile/filelight-0.5/filelight'
if g++ -DHAVE_CONFIG_H -I. -I. -I.. -I/usr/lib/qt3/include -I/usr/X11R6/include   -DQT_THREAD_SUPPORT  -D_REENTRANT  -O0  -MT filetree.o -MD -MP -MF ".deps/filetree.Tpo" \
  -c -o filetree.o `test -f 'filetree.cpp' || echo './'`filetree.cpp; \
then mv ".deps/filetree.Tpo" ".deps/filetree.Po"; \
else rm -f ".deps/filetree.Tpo"; exit 1; \
fi
...
Making all in po
make[2]: Entering directory `/home/scratch/Compile/filelight-0.5/po'
make[2]: Ingenting at gøre for 'all'.
make[2]: Leaving directory `/home/scratch/Compile/filelight-0.5/po'
make[2]: Entering directory `/home/scratch/Compile/filelight-0.5'
make[2]: Leaving directory `/home/scratch/Compile/filelight-0.5'
make[1]: Leaving directory `/home/scratch/Compile/filelight-0.5'
</screen>

<para>Bemærk at en oversættelse kan tage lang tid, afhængigt af
din maskine og hvad du oversætter. Det er ikke unormalt at vente 5-10
minutter, men nogen af de rigtigt store programmer kan tage mange
timer at oversætte, selv på et relativt hurtigt system.</para>

<para>Hvis <command>make</command> afslutter med succes, kan programmet nu
installeres. Det skal du som regel være root for at gøre.</para>

<screen><prompt>[tyge@hven filelight-0.5]$ </prompt><userinput>su</userinput>
Password:
<prompt>[tyge@hven filelight-0.5]# </prompt><userinput>make install</userinput>
make[1]: Entering directory `/home/scratch/Compile/filelight-0.5/filelight'
make[2]: Entering directory `/home/scratch/Compile/filelight-0.5/filelight'
/bin/sh ../admin/mkinstalldirs /usr/local/kde/bin
  /bin/sh ../libtool --silent --mode=install /usr/bin/install -c -p  filelight /usr/local/kde/bin/filelight
/bin/sh ../admin/mkinstalldirs /usr/local/kde/share/icons/crystalsvg/64x64/apps
mkdir -p -- /usr/local/kde/share/icons/crystalsvg/64x64/apps
/usr/bin/install -c -p -m 644 ./cr64-app-filelight.png /usr/local/kde/share/icons/crystalsvg/64x64/apps/filelight.png
make[2]: Leaving directory `/home/scratch/Compile/filelight-0.5/filelight'
...
make[1]: Leaving directory `/home/scratch/Compile/filelight-0.5'
</screen>

<para>Nu er programmet installeret, og du kan som almindelig bruger
afprøve det, typisk ved at skrive programmets navn. Det kan være
nødvendigt selv at installere programmet i din start menu, mv &ndash;
det afhænger af din distribution, hvordan du gør dette.</para>

<para>Hvis du senere vil afinstallere programmet, kan du som regel
gøre det med <command>make uninstall</command>. Det kræver dog at du
ikke har fjernet kildekoden.</para>
</sect3> <!-- autotools -->

<!-- =================================================================== -->
<!-- Installation af programmer uden autotools -->
<!-- =================================================================== -->
<sect3 id="applikationer-ikkeautotools">
<title>Programmer uden autotools</title>


<para>Heldigvis er det i dag de færreste Linux programmer der ikke
understøtter "autotools". De få der ikke gør er som hovedregel mindre
programmer der kan installeres blot ved at køre <command>make ; make
install</command>, eller programmer der har deres eget "auto" system,
som f.eks. mange python og perl programmer. Men, hvis et program ikke
bruger autotools, må du kigge i programmets
<filename>README</filename> der gerne skulle forklare hvordan man skal
installere programmet. Alternativt en fil kaldet
<filename>INSTALL</filename>. Hvis alt andet glipper, selve
<filename>Makefile</filename> filen.</para>

</sect3> <!-- installation uden autotools -->

</sect2> <!-- installation fra kildekode -->

</sect1>

</chapter>
