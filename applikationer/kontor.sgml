<chapter id="kontor">
<title>Tekstbehandling, regneark og præsentationer</title>

<para>Inden for tekstbehandling er der flere muligheder,
bl.a. fuld-grafiske kontorpakker som har alt hvad Microsoft Office
har, men der er alternativer til dig, hvis du foretrækker egentlige
tekstsætningssystemer &ndash; altså programmer beregnet til at skrive
professionelt og meget. Tekstsætningssystemer som TeX/LaTeX og SGML
DocBook er meget velegnede til store opgaver, men prisen er at du
redigerer tekst-filer som sidenhen oversættes for at kunne
udskrive/trykke dem eller overføre dem til f.eks. HTML. Dette kapitel
vil også præsentere flere regneark samt flere måder at lave
præsentationer, svarende til det som kan laves med f.eks. Microsoft
PowerPoint.</para>

<para>Det skal nævnes at bogen "Linux &ndash; Friheden til at vælge
kontorprogrammer" har direkte fokus på brugen af udvalgte
kontor-programmer, såsom OpenOffice.org/StarOffice og at den bog
formentlig vil være god at læse i tilgift til denne bog.</para>


<!-- =================================================================== -->
<!-- Tekstbehandling -->
<!-- =================================================================== -->

<sect1 id="office">
<title>Tekstbehandling</title>

<indexterm><primary>Word</primary></indexterm>
<indexterm><primary>Wordfiler</primary><secondary>konverter til
HTML</secondary></indexterm> <para> Ud over de store Office programmer
til Linux, så kan det være bekvemt at du nemt kan oversætte Microsoft
Word formatet til HTML, så en Word-fil kan læses på en
Linux-maskine. På <ulink
url="http://freshmeat.net/">freshmeat.net</ulink> kan du finde
<command>wvHtml</command> &ndash; eller gå direkte til <ulink
url="http://www.wvWare.com/">www.wvWare.com</ulink>. Installer denne
pakke og brug <command>wvHtml</command> til at konvertere med (bemærk
at vw indeholder oversættere til andet end blot HTML &ndash;
f.eks. <command>wvPDF</command> og <command>wvText</command>.  </para>

<para>En Office-pakke, der endnu ikke har fået meget omtale er Siag
&ndash; se mere på <ulink
url="http://siag.nu">http://siag.nu</ulink>.</para>


<!-- =================================================================== -->
<!-- Staroffice -->
<!-- =================================================================== -->

<sect2 id="openoffice">
<title>OpenOffice</title>
<indexterm><primary>StarOffice</primary></indexterm>
<indexterm><primary>StarWrite</primary></indexterm>
<indexterm><primary>OpenOffice.org</primary></indexterm>
<indexterm><primary>Office</primary></indexterm>
<indexterm><primary>oowriter</primary></indexterm>
<indexterm><primary>oocalc</primary></indexterm>
<indexterm><primary>oodraw</primary></indexterm>
<indexterm><primary>ooimpress</primary></indexterm>
<indexterm><primary>oomath</primary></indexterm>

<para>OpenOffice er et stykke imponerende software, der indeholder et
tekstbehandlingssystem (<command>oowriter</command>), regneark
(<command>oocalc</command>), tegneprogram (<command>oodraw</command>),
præsentationsprogram (<command>ooimpress</command>), og
formelredigeringsprogram (<command>oomath</command>).</para>

<para>OpenOffice findes som pakke til de fleste distributioner, typisk
under navnet "OpenOffice.org", eller "openoffice". Alternativt kan du
hente den nyeste version fra <ulink
url="http://www.openoffice.org/">www.openoffice.org</ulink>.</para>

<para>OpenOffice &ndash; og det afledte StarOffice &ndash; er dækket
omfattende i bogen "Linux &ndash; Friheden til at vælge
kontorprogrammer" som du kan finde på <ulink
url="http://&linuxbogurl;/"> &linuxbogurl;</ulink> og vil derfor ikke
blive omtalt yderligere her.</para>

</sect2>


<!-- =================================================================== -->
<!-- Abiword -->
<!-- =================================================================== -->

<sect2 id="abiword">
<title>AbiWord</title>
<indexterm><primary>AbiWord</primary></indexterm>
<indexterm><primary>WordPerfect filer</primary>
 <secondary>med AbiWord</secondary></indexterm>
<indexterm><primary>Word filer</primary>
 <secondary>med AbiWord</secondary></indexterm>

<para> Mangler du et godt, hurtigt og frit lille
 tekstbehandlingsprogram, som også kan køre på små maskiner, er
 Abiword et godt valg.  Abiword har alle basale funtioner et
 tekstbehandlingsprogram skal have og en rimelig understøttelse af de
 mest udbredte formater som f.eks. Microsoft Word formatet. Programmet
 har danske menutekster og stavekontrol. På <xref
 linkend="abiword-fig"/> kan du se et skærmskud af en ældre udgave af
 Abiword.</para>

<figure id="abiword-fig" float="1">
 <title>AbiWord fra Gnome</title>
 <graphic fileref="abiword.&magic;" scale="40"></graphic>
</figure>

<para> På Abiwords hjemmeside (<ulink url="http://www.abisource.com/">
 www.abisource.com</ulink>) er der en meget god dokumentation, især
 nogle gode OSS'er hvis der er problemer med skriftsnit og det danske
 sprog. Abiword findes som pakke til de fleste systemer, men dette kan
 ofte være lidt ældre pakker, så du bør nok besøge hjemmesiden og se
 om der er en nyere version, hvis du bliver glad for Abiword.</para>

<para>Det skal nævnes at ordbogen til dansk stavekontrol kan opdateres
 fra dataene til Ispell på <ulink url="http://da.speling.org/">
 da.speling.org</ulink>. Filen <filename>dansk.hash</filename> fra
 Ispell kopieres til kataloget hvor <filename>american.hash</filename>
 ligger, typisk
 <filename>&lt;Abiword_home_dir&gt;/AbiSuite/dictionary</filename>.
 Du kan se mere om stavekontrol i <xref
 linkend="stavekontrol"/>. </para> </sect2>
</sect1> <!-- tekstbehandling -->

<!-- ============================================================ -->
<!-- applikationer-regneark -->
<!-- ============================================================ -->

<sect1 id="applikationer-regneark">
<title>Regneark</title>

<para>I dette afsnit vil vi omtale et par applikationer til at arbejde
med regneark.</para>

<!-- =================================================================== -->
<!-- Gnumeric -->
<!-- =================================================================== -->

<sect2 id="sect-gnumeric">
<title>Gnumeric regneark</title>

<para>Gnumeric er et fornuftigt, flerdimensionalt regneark som
indlæser og skriver Microsoft <filename>.xls</filename> filer og som
ellers arbejder i et meget fornuftigt xml-format, som kan benyttes til
at generere regneark-opstillinger ud fra f.eks. et
databaseudtræk.</para>

<graphic fileref="gnumeric1.&magic;"  scale="50"></graphic>

<para>Gnumeric er skrevet med Gnome-toolkit, men på en måde, så den
ikke er nødt til at køre under Gnome-desktoppen. Den kan køre under
mange forskellige window-managere, også den effektive, men minimale,
<command>twm</command>, der følger med X-Window systemet.</para>

<para>Gnumeric kan stort set alle de ting, et regneark skal kunne. Det
er muligt at bruge store bogstaver, lave rammer og farver samt skille
afsnit med ekstra linjer, men det er noget, man selv skal
gøre. Microsoft Excels udmærkede "styles" er desværre ikke
implementeret som et fikst og færdigt klik.</para>

<para>Det går nemt at indtaste et simpelt regneark, trække lidt i
kanterne for at få plads til en stor overskrift, skifte kolonnebredde
og indtaste en formel &ndash; samt få hjælp til, hvordan en sådan kan
se ud.</para>

<graphic fileref="gnum_style.&magic;" scale="50"></graphic>
<graphic fileref="gnum_formula.&magic;" scale="50"></graphic>

<para>Ved indlæsning af et Excel-regneark, fås følgende
advarsel:</para>

<programlisting>
/attic/dax2/shelf/excel/Gibano-410.xls
Excel 97 +
FIXME: unicode support unimplemented: truncating
</programlisting>

<graphic fileref="gnumeric2.&magic;"  scale="50"></graphic>

<para>Når gnumeric er startet op, ligner den et pænt og nydeligt
regneark med indbydende funktionsmenu for oven, ca. 25 knapper på
toolbars og felt til input af tekst og formler. Altsammen meget
genkendeligt.  </para>

<graphic fileref="gnum_preview.&magic;"  scale="50"></graphic>

<para>Har man brug for hjælp, er help-menuen der, hvor den plejer at
være, længst til højre på menubjælken. Man kan hurtigt danne sig et
overblik over den hjælp, der er at få. Desværre er enkelte afsnit ikke
skrevet færdige.  </para>

<graphic fileref="gnum_help1.&magic;"  scale="40"></graphic>

<sect3>
 <title>Gnumerics filformater</title>

 <para>
  <emphasis>Kun for programmører!</emphasis> 

  Hvis man vil lade sine programmer generere regneark for at kunne
  vise brugeren en talsammenhæng, så må man bruge et regneark med et
  dokumenteret og fornuftigt filformat. Gnumeric kan bruges til den
  slags applikationer.
 </para>

 <para>
  Gnumerics standardfilformat er XML-baseret. Det gemmes i komprimeret
  form, via gzip, og derfor kan filen læses med
  f.eks. zless-programmet. Her er en listning af linje 23 i et
  regneark:
 </para>

<graphic fileref="gnum_22examp.&magic;"  scale="50"></graphic>

<programlisting>
        &lt;gmr:Cell col="0" row="22" valuetype="40">
          &lt;gmr:Content>9&lt;/gmr:Content>
        &lt;/gmr:Cell>
        &lt;gmr:Cell col="1" row="22" valuetype="60">
          &lt;gmr:Content>Sk&#230;rmkort:&lt;/gmr:Content>
        &lt;/gmr:Cell>
        &lt;gmr:Cell col="2" row="22" valuetype="60">
          &lt;gmr:Content>ASUS V3800 TNT2 32MB&lt;/gmr:Content>
        &lt;/gmr:Cell>
        &lt;gmr:Cell col="4" row="22" valuetype="60" valueformat="#,##0.00">
          &lt;gmr:Content> &lt;/gmr:Content>
        &lt;/gmr:Cell>
        &lt;gmr:Cell col="5" row="22" valuetype="40" valueformat="0">
          &lt;gmr:Content>1&lt;/gmr:Content>
        &lt;/gmr:Cell>
        &lt;gmr:Cell col="6" row="22" valuetype="40" valueformat="#,##0.00">
          &lt;gmr:Content>650&lt;/gmr:Content>
        &lt;/gmr:Cell>
</programlisting>

<para>
Dette er en listning af linje 23 i priskalkulationseksemplet. Den
bliver til linje 22, hvis man tæller fra 0, og det gør man jo
på en computer.  Der er 6 kolonner i linje 22, altså 6 felter.
Det andet felt indeholder 'ASUS V3800 TNT2 32MB', altså en tekst.
De andre felters indhold er nem at få øje på, når man lader øjet
glide ned.
</para>

<para>
Skal man nu generere andre priser eller felter, så kan man tage sådan
en Gnumeric-fil &ndash; husk at unzippe den først &ndash; og så bruge
den som model for et awk-program, typisk ved at sætte let genkendelige
koder ind, hvor man vil sætte indhold fra database eller andet ind. Så
kan man bagefter præsentere disse data som regneark. Desuden kan man
jo udskrive sine data pænt formateret.  </para>

<para>
XML-Formatet er dokumenteret og er ren ascii. Som det siges i
manualsiderne, er dette format designet til at være
menneske-læseligt og nemt at udvide.
</para>

</sect3>

</sect2>

<!-- ============================================================ -->
<!-- regneark -->
<!-- ============================================================ -->

<sect2 id="regneark">
<title>Andre regneark</title>
<indexterm>
 <primary>Regneark</primary>
 <secondary>xspread</secondary>
</indexterm>

<para>
XSpread (<command>xspread</command>) er et simpelt regneark, som
indeholder de fleste basale funktioner. Standarden er dog ikke som i
Excel eller lignende, men XSpread er bestemt anvendeligt.
</para>

<indexterm>
 <primary>Regneark</primary>
</indexterm>


<para>Andre regneark, med pæne brugerflader, findes også (men
kommercielle), f.eks.  på <ulink
url="http://www.xess.com">www.xess.com</ulink> og <ulink
url="http://www.wingz-us.com/wingz/index.html">www.wingz-us.com</ulink>,
som virker helt på højde med, hvad du kender fra Windows-verdenen.
</para>

</sect2>

</sect1> <!-- applikationer-regneark -->


<!-- ============================================================ -->
<!-- applikationer-praesentation -->
<!-- ============================================================ -->

<sect1 id="applikationer-praesentation">
<title>Præsentationsprogrammer</title>

<para>Vi omtaler i dette afsnit kort nogen programmer til at lave
præsentationer med. Disse programmer er ikke sædvanlige grafiske
programmer, men programmer der anvendes ved at redigere en tekst fil,
som man bagefter anvender som inddata til det egentlige
præsentationsprogram. Denne fremgangsmåde gør det nemt at integrere
programmerne med de traditionelle Unix/Linux programmer som LaTeX,
gnuplot, mv.</para>

<!-- ============================================================ -->
<!-- magicpoint -->
<!-- ============================================================ -->
<sect2 id="magicpoint">
 <title>Præsentationer med MagicPoint</title>

 <indexterm><primary>mgp</primary></indexterm>
 <indexterm><primary>præsentationer</primary>
            <secondary>MagicPoint-</secondary></indexterm>
 <indexterm><primary>MagicPoint</primary></indexterm>
 <indexterm><primary>PowerPoint</primary></indexterm>

 <para>
  En af de ting, der har være savnet længe til Linux, er ordentlige
  præsentationsprogrammer, svarende til PowerPoint til Windows. Ud over, hvad
  ApplixWare og StarOffice tilbyder, er MagicPoint også et interessant program
  til foredragspræsentationer. MagicPoint er et frit program og kan hentes
  gratis fra <ulink
  url="http://www.Mew.org/mgp/">http://www.Mew.org/mgp/</ulink>.
 </para>

 <para>
MagicPoint er ikke som PowerPoint et program, hvor du både redigerer og
præsenterer i en integreret pakke. I stedet skriver du en tekstfil
med præsentationen, f.eks. kan en side skrives som:
</para>

<programlisting>
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%page

Open Source (TM)
http://www.opensource.org

	Frigivelse af kildeteksten sammen med programmet
	Alle må anvende og ændre kildetekst efter behov
	Alle må videregive modificeret kode under samme licens

%center
%image "images/pingo.jpg" 1050x850
</programlisting>

<para>
Tekstfilen køres så af MagicPoint (<command>mgp</command>), og
tilsvarende præsentationsside ser ud som følger:
</para>


<figure id="magicpoint-fig" float="1">
<title>Præsentation med MagicPoint</title>
<graphic fileref="magicpoint.&magic;"  scale="40"></graphic>
</figure>

<para>
MagicPoint kan også bruge TrueType-skrifttyper <!--(se om installation i xref
linkend="truetype" )--> og resultatet er meget flottere end hvis du
bruger X-skrifttyper. Opsætningen er måske ikke oplagt; man skal have en
sti til TrueType-skrifttyperne i <filename>~/.mgprc</filename>:
</para>

<programlisting>
tfdir "/usr/X11R6/lib/X11/fonts/TrueType/"
</programlisting>

<para>
eller hvor du nu har lagt skrifttyperne. Tilsvarende skal din
<filename>default.mgp</filename> have linjer, hvor du lister dine
TTF-filer, f.eks.:
</para>

<programlisting>
%deffont "standard" tfont "arial.ttf"
%deffont "thick" tfont "helvetica.ttf"
%deffont "typewriter" tfont "courb.ttf"
</programlisting>

<para>
MagicPoint kan anbefales - det er nemt at arbejde med og har en del
gode muligheder, såsom at du kan lave en web-udgave af dit foredrag
ved at bruge <command>mgp -g 640x480 -D OUTDIR
MIT_FOREDRAG.mgp</command>, hvor 640x480 er den opløsning hvert
billede får, <filename>OUTDIR</filename> er det katalog hvor
foredraget gemmes og <filename>MIT_FOREDRAG.mgp</filename> er
magicPoint-filen med foredraget.
</para>
</sect2>

<!-- ============================================================ -->
<!-- pointless -->
<!-- ============================================================ -->

<sect2 id="pointless">
<title>Pointless</title>
<para>
Der findes et dansk alternativ til MagicPoint, som går under navnet
PointLess. Pointless er ligesom MagicPoint ikke et program, hvor du
både redigerer og præsenterer i en integreret pakke. I stedet skriver
du en tekstfil med præsentationen, f.eks. kan en side skrives som:
</para>

<screen>
=slide Open Source (TM)
=background_vertex_colors("blue", "blue", "white", "blue")
=par {=tiny =it http://www.opensource.org}

=item Frigivelse af kildeteksten sammen med programmet
=item Alle må anvende og ændre kildetekst efter behov
=item Alle må videregive modificeret kode under samme licens

=vskip(5)

=center =image("tux.png"
</screen>

<para>
Det tilsvarende resultat på skærmen ser således ud.
</para>


<figure id="pointless1-fig" float="1">
<title>Pointless</title>
<graphic fileref="pointless1.&magic;" scale="40"></graphic>
</figure>

<para>
Præsentationerne bliver, som vist ovenfor, skrevet i et særligt 
markup-sprog kaldet PLL. PLL er et meget simpelt sprog som bedst
beskrives som en blanding af TeX og Pod. Slideshowet bliver renderet 
ved brug af FreeType skrifttyper (http://www.nongnu.org/freefont/) 
og OpenGL, hvilket giver et flot resultat. Man kan godt køre
pointless, selvom man ikke har et OpenGL grafikkort, men så må man 
ikke forvente de samme bløde og pæne slide-skift, som pointless ellers
kan lave.
</para>

<para>
Pointless integrerer nemt med de værktøjer, som mange Unix folk er 
vant til at bruge, fx. latex, metapost, gnuplot. Nedenfor er et 
eksempel på hvordan det integrerer med latex og mange flere eksempler kan 
ses på hjemmesiden for pointless <ulink url="http://pointless.dk/">http://pointless.dk/</ulink>.
</para>

<screen>
=slide Entropi 

=import("tex")

=begin-par
Følgende sætning går under navnet AEP egenskaben for stationære 
ergodiske mål og den blev i sin tid bevist af Shannon, McMillan and Breiman.
=end-par

=medskip

{=it
=begin-par
{=bf Sætning:} Entropien af et stationært ergodisk mål er beskrevet ved:
=end-par

=medskip
=center =begin-latex 
$$h(\mu)=\lim_{n\rightarrow\infty}\frac{-\log\mu(x_1^n)}n,$$
=end-latex
=medskip

=par næsten sikkert.
}
</screen>

<para>
Det tilsvarende resultat på skærmen ser således ud.
</para>

<figure id="pointless2-fig" float="1">
<title>Pointless</title>
<graphic fileref="pointless2.&magic;" scale="40"></graphic>
</figure>

<para>
Det er nemt at lave en web-udgave af dit foredrag ved at bruge 
<command>./pointless --export html friheden.pll</command>. 
</para>

<para>
På trods af at pointless er et relativt nyt projekt er det rimeligt
vel-dokumenteret. Pointless er skrevet i C++ og Python distribueres 
under GPL licensen. Mere information om Pointless og links til hvorfra 
programmet kan hentes gratis kan ses på 
<ulink url="http://pointless.dk/">http://pointless.dk/</ulink>.
</para>
</sect2>

</sect1> <!-- applikationer-prasentioner -->


<!-- ============================================================ -->
<!-- kort-om-latex -->
<!-- ============================================================ -->

<sect1 id="kort-om-latex"><title>TeX/LaTeX</title>
<indexterm><primary>LaTeX</primary></indexterm>
<para>
Til tekstformatering af tekniske rapporter er WYSIWYG endnu ikke
normen, for i langt større udstrækning anvendes TeX
(<command>tex</command>) og LaTeX (<command>latex</command>). LaTeX
producerer professionelt udseende tekniske dokumenter. Specielt vil
matematiske tegn og formler blive sat meget flot op i forhold til alle
gængse WYSIWYG-programmer. Nedenfor ser du et eksempel på en LaTeX-fil.
</para>


<programlisting>
\documentclass[11pt,a4paper]{article}
\usepackage[latin1]{inputenc}
\usepackage[danish]{babel}

\begin{document}

\title{Linux og LaTeX}
\author{Hr. P. Rogram}
\date{5/9-99}
\maketitle

\section{Linux}
Dette afsnit skal omhandle Linux.

\subsection{Latex}
\LaTeX{} er super til tekniske rapporter med formler, såsom
$\sum_{i=0}^N i^2$.

\end{document}
</programlisting>

<para>
For at du kan få dansk understøttelse i LaTeX, skal du én gang for
alle køre <command>texconfig</command> som root, og vælg "hyphen"
(sørg for at din terminal kan vise mere end 80x24 tegn). Vælg
f.eks. "latex". Der kommer en tekst-editor op, hvor du skal vælge at
fjerne udkommenteringen foran "danish".
</para>

<para>
Oversæt Latex-filen <filename>linux.tex</filename> til
<filename>linux.dvi</filename> (skriv <command>latex
linux.tex</command> i en kommandofortolker). Dvi-filen kan vises med programmet
<command>xdvi</command>, som den vil komme til at se ud på
printeren. Et skærmaftryk svarende til eksemplet kan ses på <xref
linkend="xdvi-fig"/>.
</para>

<figure id="xdvi-fig" float="1">
<title>xdvi</title>
<graphic fileref="xdvi.&magic;"  scale="40"></graphic>
</figure>

<para>
En dvi-fil kan normalt ikke printes direkte ud. Du oversætter den til
PostScript-formatet med følgende kommando:
</para>

<screen>
<prompt>[tyge@hven ~]$ </prompt><userinput>dvips linux.dvi -t a4 -D 600 -o linux.ps</userinput></screen>

<indexterm><primary>Postscript filer</primary>
           <secondary>læse</secondary></indexterm>

<para>
Ud kommer i dette tilfælde filen <filename>linux.ps</filename>
med 600 dpi opløsning i A4-format. Denne fil kan udskrives på en
PostScript-printer.  Det kan nævnes, at selvom du ikke har en
PostScript-printer, kan du få Red Hats printerstyring til at
konvertere automatisk til printerens format ved hjælp af programmet
GhostScript (<command>gs</command>).
</para>

<para>
Vil du se en PostScript-fil, inden du printer den, kan du selv benytte
GhostScript, men de fleste vil nok hellere benytte den grafiske
brugergrænseflade <command>gv</command>, som vist på <xref
linkend="gv-fig"/>. På det følgende
billede ses pingvinen Tux, som er Linux' maskot.
</para>

<indexterm><primary>gv</primary></indexterm>
<indexterm><primary>Ghostscript</primary></indexterm>

<figure id="gv-fig" float="1">
<title>gv</title>
<graphic fileref="gv.&magic;"  scale="40"></graphic>
</figure>

<para>
Har du brug for at generere pdf-filer, så kan <command>dvipdfm
linux.dvi</command> gøre dette. Det kan også nævnes, at programmet
<command>gv</command> også kan læse pdf-filer. Tilsvarende kan du også
hente Adobe Acrobat Reader fra
<ulink url="http://www.adobe.com">http://www.adobe.com</ulink>
til Linux og få en 100% korrekt
pdf-læser. Det er ikke alt <command>gv</command> kan klare.
</para>

<!-- ============================================================ -->
<!-- lyx -->
<!-- ============================================================ -->

<sect2 id="lyx">
<title>LyX</title>
<indexterm><primary>Lyx</primary></indexterm>
<para>
Flere har igennem tiden tænkt, at det er synd, at man skal "kode"
LaTeX igennem en teksteditor, såsom Emacs (som er meget velegnet til
dette). Det er specielt synd, idet den endelige LaTeX-udskrift er
meget flottere end noget kontor-produkt kan fremstille. Derfor har nogle
dygtige programmører lavet en grafisk editor, hvor du skriver som i
et andet kontor-program, men der laves LaTeX-kode, eller rettere
LyX-kode, som kan konverteres af programmet selv til LaTeX. Du kan importere
eps-filer og vise dem uden problemer. Brugerfladen kunne være bedre,
men er absolut anvendelig.
</para>

<figure id="lyx-fig" float="1">
<title>lyx
</title>
<graphic fileref="lyx.&magic;"  scale="40"></graphic>
</figure>

<!-- KLyX bliver ikke længere vedligeholdt

<para>
Der er en KDE-variant af LyX, kaldet KLyX, som ser bedre ud end LyX. KLyX
kan hentes fra <ulink
url="http://www.devel.lyx.org/~ettrich/klyx.html">http://www.devel.lyx.org/~ettrich/klyx.html</ulink>.
</para>

-->

<para>
Vil du vide mere om LaTeX, kan vi anbefale dig bøgerne <emphasis>LaTeX 
- a document preparation system</emphasis> af Leslie Lamport og
<emphasis>The LaTeX Companion</emphasis> af Michel Gossens
m.fl. Endvidere er en gruppe danske LaTeX-brugere gået i gang med at
skrive en bog om LaTeX. Bogen kommer under samme licens som denne bog,
og du kan få mere at vide på <ulink
url="http://sunsite.auc.dk/latexbog/">http://sunsite.auc.dk/latexbog/</ulink>.
Du kan også læse mere i "Linux - Friheden til at skrive dokumentation".
</para>
</sect2> <!-- lyx -->

</sect1> <!-- Tex/Latex -->

<!-- ============================================================ -->
<!-- sgmldocbook -->
<!-- ============================================================ -->

<sect1 id="sgmldocbook">
<title>SGML og DocBook</title>
<indexterm><primary>SGML</primary></indexterm>
<indexterm><primary>DocBook</primary></indexterm>
<para>
Et alternativ til LaTeX er at skrive i DocBook-formatet.
Det ligner i syntaks HTML
og XML. SGML er et metasprog til at definere en syntaks for dokumenter.
Man kan definere sit eget dokument-sprog (DTD) med SGML.
Da dette er en meget omstændelig affære, 
bruger de fleste en af de DTD'er der findes i forvejen.
En meget brugt definition kaldes DocBook, som også er den
der bruges til HOWTO'er.
</para>

<para>
DocBook har ca. 250 "tags" defineret og er primært beregnet på at skrive
om EDB-relaterede emner.
I DocBook definerer man ikke hvordan teksten skal se ud,
men kun hvad teksten er for en type.
Når så DocBook-dokumentet oversættes til f.eks. HTML,
bliver teksten formateret på en bestemt måde.
Et "tag" er f.eks. <command>&lt;PARA&gt;</command> der bruges
til at starte et nyt afsnit.
Skal man angive en forfatters navn bruges
<command>&lt;AUTHOR&gt;</command>.
Ved at al tekstformatering er defineret i "tags", kan
man senere bestemme hvordan forskellige tekst-typer skal se ud.
</para>

<para>
Fordelen ved DocBook, er at man kan oversætte DocBook-koden til
mange forskellige formater, PostScript, PDF, RTF og HTML. Og man får
en god syntaksfortolker.  DocBook oversættes med
<command>docbook2html</command>, <command>db2pdf</command> og
<command>docbook2ps</command>, svarende til HTML, PDF og PS-output.
</para>

<para>
Denne bog er skrevet i DocBook og vi har skrevet om dette
i "Linux - Friheden til at skrive dokumentation", der kan
hentes fra <ulink url="&linuxbogurl;/">&linuxbogurl;</ulink>. Dokumentation (for de øvede) kan findes på <ulink
url="http://www.docbook.org">http://www.docbook.org</ulink>.
Er DocBook installeret findes dokumentationen på
<filename>/usr/doc/docbook/docbook.html</filename> (Red Hat).
</para>

</sect1>

<!-- =================================================================== -->
<!-- websideredigering -->
<!-- =================================================================== -->
<sect1 id="websideredigering">
<title>Redigering af HTML-sider</title>
<indexterm><primary>HTML</primary><secondary>programmer til at redigere</secondary></indexterm>

<para>
Til at lave HTML hjemmesider har du flere muligheder. Du kan
selvfølgelig altid starte din favoriteditor og skrive dine
hjemmesider med denne. De fleste editorer har ikke meget speciel
understøttelse af HTML, men Emacs kan forstå syntaks og farvekode
filerne (brug Alt-x html-mode og Alt-x font-lock-mode). Tilsvarende
har KWrite samme muligheder.
</para>

<para>
Ønsker du at kunne redigere HTML direkte i grafisk tilstand, er der mulighed
for at bruge den indbyggede editor i <command>Netscape</command>.
StarOffice har tilsvarende muligheder for at kunne
udskrive dokumenterne til HTML, men du har ikke samme fleksibilitet,
som hvis du skrev det med Netscape eller en
almindelig editor. Programmet Amaya fra World Wide Web Consortium
(W3C) er også en mulighed. W3C er den officielle organisation bag WWW,
og Amaya er deres browser og HTML-editor. Bruger du Amaya, er du sikker
på, at dine hjemmesider følger de formelle standarder!
</para>

<para>
W3C udgiver også programmet "HTML Tidy", der kan rette de fleste
syntaksfejl i HTML-filer, og de kører webstedet
<ulink url="http://validator.w3.org/">http://validator.w3.org/</ulink>, hvor
du kan få tjekket syntaksen på dine websider.
</para>


<indexterm><primary>Bluefish</primary></indexterm>
<indexterm><primary>Quanta plus</primary></indexterm>
<para> 
En anden god mulighed er at anvende Bluefish, der kan hentes
fra <ulink
url="http://bluefish.openoffice.nl/">http://bluefish.openoffice.nl/</ulink>. Den
kan syntaks-vise HTML, og endda også PHP3, PHP4, SSI-kode og meget
andet.  I samme kaliber er Quanta Plus, som har hjemmesiden
<ulink url="http://quanta.sourceforge.net/">http://quanta.sourceforge.net/</ulink>, som ses på <xref linkend="quanta-fig"/>.
</para>

<figure id="quanta-fig" float="1">
<title>Quanta kan redigere HTML-sider</title>
<graphic fileref="quanta.&magic;" scale="40"></graphic>
</figure>

</sect1>

<!-- =================================================================== -->
<!-- Stavekontrol -->
<!-- =================================================================== -->

<sect1 id="stavekontrol">
 <title>Stavekontrol</title>

 <indexterm><primary>stavekontrol</primary></indexterm>

 <para>
  Der er p.t. to udbredte stavekontrolprogrammer til Linux, og
  afhængig af hvilken type stavefejl man oftest laver bør man enten
  bruge det ene eller det andet.  Hvis man primært laver regulære
  tastefejl, hvor man får byttet om på to bogstaver eller glemmer
  eller indsætter et bogstav, vil Ispell nok være at foretrække.  Hvis
  det derimod ofte forekommer at man er usikker på hvordan et ord
  staves, har man nok mere fornøjele af Aspell, der kan sammenligne
  ord udfra deres omtrentlige udtale.
 </para>

 <para>
  Både Aspell og Ispell har en noget primitiv håndtering af
  sammensatte ord, der gør at man kun har de to muligheder at alle
  eller ingen sammensatte ord der ikke findes i ordbogen accepteres.
  Standardindstillingen for de danske ordlister til Aspell og Ispell
  er at alle konstruktioner af sammensatte ord accepteres.
 </para>

 <para>
  Begge stavekontrolprogrammer kan både snakke direkte med brugeren
  <emphasis>og</emphasis> fungere som stavekontrolmoduler for andre
  programmer.  For eksempel er det Aspell eller Ispell (alt efter
  installationen) man bruger, når man går ind på menupunktet "Tools"
  -&gt; "Spell Checking" i Emacs.
 </para>

 <para>
  De fleste nyere distributioner kommer med enten Aspell eller Ispell
  og en tilhørende dansk ordliste.  Kig efter pakker med navne som
  starter med "aspell-da-" eller "ispell-da-".  Pakkerne stammer fra
  <ulink url="http://da.speling.org/">"Den store danske
  ordliste"</ulink> som er et projekt under Skåne Sjælland Linux User
  Group.
 </para>

 <para>
  Dette projekt startede sommeren 1999, da Sprognævnet sagde nej til
  at lade os distribuere deres ordliste i en form, der kan bruges af
  Ispell.  Så måtte vi i gang med vores egen ordliste, som dengang var
  på ca. 300.000 ord, men indeholdt en del fejl.  <!-- I februar 2000
  fik vi sat en webgrænseflade til korrekturlæsningen af ordlisten op,
  så alle der har internetadgang kan hjælpe til. --> Du er meget
  velkommen til at besøge projektet på <ulink
  url="http://da.speling.org/">http://da.speling.org/</ulink>, hvor du
  kan hente den nyeste version af ordlisten og finde vejledning i at
  installere den.
 </para>

 <para>
  Bogen "Linux - Friheden til at lære Unix" kommer med et lille
  program til stavekontrol.  Det kan køres direkte på kommandolinjen
  og det skal bare have navnet på den fil der skal læses korrektur på
  som argument.  Det undersøger automatisk om man har Aspell
  (foretrukket) eller Ispell installeret, og giver én mulighed for at
  vælge hvilket sprog teksten er på.  Programmet hedder af historiske
  årsager <command>pine-spell</command> og kan hentes fra: <ulink
  url="&linuxbogurl;/unix/eksempler/pine-spell">&linuxbogurl;/unix/eksempler/pine-spell</ulink>
 </para>

 <sect2 id="stavekontrol-aspell">
 <title>Stavekontrol med aspell</title>
  <indexterm>
   <primary>Aspell</primary>
  </indexterm>

  <indexterm>
   <primary>stavekontrol med</primary>
   <secondary>Aspell</secondary>
  </indexterm>

  <para>
   Den enkleste måde at bruge Aspell på er at køre det med
   <literal>check</literal> og navnet på en fil som argumenter:

<screen>
<prompt>[tyge@hven ~]$ </prompt><userinput>aspell check en_tekstfil</userinput>
</screen>

   Så ser Aspell på hvilket sprog dine programmer er sat til at bruge
   (gennem systemvariablen <literal>LANG</literal>) og bruger den
   tilsvarende ordliste til korrekturlæsningen af filen.  Hvis du har
   brug for at bruge en anden ordliste skal du indsætte
   <literal>--master=</literal> og så det ønskede sprog foran
   <literal>check</literal>.  For eksempel:

<screen>
<prompt>[tyge@hven ~]$ </prompt><userinput>aspell --master=føroyskt check ein_tekstfíla</userinput>
</screen>
  </para>

  <para>
   Aspell kender filformaterne i listen nedenfor.  Det betyder at man
   kun bliver spurgt om filernes egentlige indhold og ikke om koder
   der hører til filformaterne.
  </para>

  <itemizedlist>
   <listitem>
    <para>URL</para>
   </listitem>

   <listitem>
    <para>
     e-post &ndash; så man ikke tjekker den tekst man citerer for
     stavefejl
    </para>
   </listitem>

   <listitem>
    <para>
     SGML &ndash; så man let kan tjekke sin hjemmeside for stavefejl
     uden også at blive belemret med HTML-koderne
    </para>
   </listitem>

   <listitem>
    <para>TeX</para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2 id="stavekontrol-ispell">
 <title>Stavekontrol med ispell</title>
  <indexterm>
   <primary>Ispell</primary>
  </indexterm>

  <indexterm>
   <primary>stavekontrol med</primary>
   <secondary>Ispell</secondary>
  </indexterm>

  <para>
   Ispell kan kaldes fra en kommandolinje, hvor du giver navnet på
   filen med teksten, der skal tjekkes igennem, som argument - se også
   <command>man ispell</command>.
  </para>

  <para>
   Ispell kender filformaterne i listen nedenfor.  Det betyder at man
   kun bliver spurgt om filernes egentlige indhold og ikke om koder
   der hører til filformaterne.
  </para>

  <itemizedlist>
   <listitem>
    <para>nroff (???)</para>
   </listitem>

   <listitem>
    <para>TeX</para>
   </listitem>
  </itemizedlist>
 </sect2>
</sect1>

<sect1 id="DTP">
<title>Desktop Publishing</title>
<indexterm><primary>DTP</primary></indexterm>
<indexterm><primary>scribus</primary></indexterm>

<para>
Der er ikke mange Desktop Publishing (DTP) programmer til Linux, men
iceSculptor er en kommerciel mulighed - se mere på <ulink
url="http://www.chillistore.net/icesculptor1.html">http://www.chillistore.net/icesculptor1.html</ulink>.
En anmeldelse kan læses på <ulink
url="http://linux.cnet.com/linux/0-2136890-7-5518912.html">http://linux.cnet.com/linux/0-2136890-7-5518912.html</ulink>
</para>

<para>
Et alternativ er <ulink
url="http://www.mediascape.com/linux.html">http://www.mediascape.com/linux.html</ulink>,
som både fås til Linux og IRIX.
</para>

<para>
Et Open Source DTP-program, der er i vækst er scribus som har
hjemmesiden <ulink
url="http://web2.altmuehlnet.de/fschmid/">http://web2.altmuehlnet.de/fschmid/</ulink>.
Indtil videre ser det meget lovende ud, men endnu er det lidt primitivt.
</para>

<para>
Det kræver en del biblioteker for at kunne oversættes, så den nemmeste
måde man kan få det installeret på er at finde en færdigoversat
version af scribus som RPM-pakke. Dette gøres under KDEs Konqueror ved
at skrive <literal>rf:scribus</literal> i adresse-feltet og trykke
retur (<literal>rf:</literal> står for "RPM find"). Med andre browsere
kan man gå til <ulink url="http://www.rpmfind.net/">www.rpmfind.net/</ulink>.
</para>

<para>
En (lidt gammel) oversigt over DTP-programmer kan findes på <ulink
url="http://desktoppub.about.com/compute/desktoppub/library/weekly/aa042199.htm">http://desktoppub.about.com/compute/desktoppub/library/weekly/aa042199.htm</ulink>.
Læs tilsvarende <ulink url="http://www.firstlinux.com/product/Office/">http://www.firstlinux.com/product/Office/</ulink>.
</para>
</sect1>

<sect1 id="ocr">
<title>OCR &ndash; billede til tekst</title>
<indexterm><primary>OCR</primary></indexterm>

<para>
Til Linux findes der ikke mange Open Source programmer der 
kan lave OCR - dvs. optisk tegngenkendelse. 
</para>

<itemizedlist mark="bullet">
<listitem>
 <para>
GOCR/JOCR : <ulink url="http://jocr.sourceforge.net/">http://jocr.sourceforge.net/</ulink> er et tekstbaseret system
 </para>
</listitem>
<listitem> 
 <para>
Clara: <ulink url="http://www.claraocr.org/">http://www.claraocr.org/</ulink> er et grafisk skanneprogram.
 </para>
</listitem>
</itemizedlist>

<para>
Begge er begrænsede. Vil man betale for det så findes der proprietære programmer, der er markant
bedre. En mulighed er <ulink url="http://www.vividata.com/ocrshop.html">http://www.vividata.com/ocrshop.html</ulink>.
</para>
</sect1>
</chapter>
