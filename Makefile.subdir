#
# Vi kræver SGML DocBook 3.1
# ImageMagick skal installeres
# tidy og Perl modulet Image::Size er ønskelige
##
#
# Peter Toft <pto@sslug.dk> 
# $Id$

# Lokalt katalog (fuld sti)

locdirname=$(shell pwd)

# Kort navn
targetshortname=$(notdir $(locdirname))

# Med linux- foran
targetname=linux-$(notdir $(locdirname))

# version
version=$(shell cat version.sgml)

# dato
dato=$(shell cat dato.sgml)

# Her er en liste af sgml-filer der ændres automatisk
badsgmlfiles=dato.sgml version.sgml magic.sgml stikord.sgml

# Her er  en liste af alle sgml
allesgmlfiles=$(wildcard *.sgml)

# Her er en liste af sgml-filer der skal checkes
sgmlfiler=$(filter-out $(badsgmlfiles),$(allesgmlfiles))

# Her er  en liste af alle eksempler
alleeksfiles=$(wildcard eksempler/*)

# Her er en liste af sgml-filer der skal checkes
eksfiler=$(filter-out eksempler/CVS,$(alleeksfiles))

# Har vi Perl-modulet Image::Size installeret
imagesize=$(wildcard /usr/lib/perl5/site_perl/5.005/Image/Size.pm)

# Har vi Plucker inde
plucker = $(wildcard /usr/bin/plucker-build)

# Har vi tidy installeret?
tidy=$(wildcard /usr/bin/tidy)

# Cygnus path
cygnusf=$(wildcard /usr/share/sgml/docbook/dsssl-stylesheets-cygnus/stylesheets/cygnus-both.dsl /usr/lib/sgml/stylesheets/cygnus-both.dsl )
cygnus = $(firstword $(cygnusf))

# Image Magick convert
ImageMagickconvertf=$(wildcard /usr/bin/convert /usr/X11R6/bin/convert)
ImageMagickconvert = $(firstword $(ImageMagickconvertf))

# her er det der skal laves
all:	starter gemversion html pspdf palmpilot sgml eksempelbackup exit

starter: gemversion
	@echo "---------------------------------------------"
	@echo "Starter oversættelser af " $(targetshortname)
	@echo "---------------------------------------------"

gemversion:
	@grep -A2 "<listitem>" apprevhist.sgml | head -n 2 | tail -n 1 | cut -d' ' -f2 > version.sgml
	version=$(shell cat version.sgml)

sgml: $(targetname)-$(version).sgml.tar.gz

$(targetname)-$(version).sgml.tar.gz: $(sgmlfiler)
	(cd ..;tar cvzf $(targetshortname)/$(targetname)-$(version).sgml.tar.gz README $(targetshortname)/*.sgml $(targetshortname)/Makefile $(targetshortname)/collateindex.pl)
	(cd ..;zip $(targetshortname)/$(targetname)-$(version).sgml.zip -r README $(targetshortname)/*.sgml $(targetshortname)/Makefile $(targetshortname)/collateindex.pl )

palmpilot: $(targetname)-$(version).palm.tar.gz

$(targetname)-$(version).palm.tar.gz: $(sgmlfiler)
ifneq   ("$(plucker)","")
	$(MAKE) html
	rm -f palm/*.prc palm/*.pdb
	(cd palm;plucker-build -v -P . -f $(targetname))
	cp ../misc/*.prc palm
	(cd ..;tar cvzf $(targetshortname)/$(targetname)-$(version).palm.tar.gz $(targetshortname)/palm/*.prc $(targetshortname)/palm/*.pdb README  )
else
	echo "Du bør installere plucker for at kunne lave palm-udgaven"
endif

statusfiler:
	@$(shell date +%d/%m-%Y> dato.sgml)
	@echo start på $(targetshortname)	
	@echo Version er $(version)
	@echo Dato sat til $(dato)
	@echo Checker $(sgmlfiler)

exit:
	@echo "---------------------------------------------"
	@echo slut på $(targetshortname)
	@echo "---------------------------------------------"
	@echo 

htmlfiler: 
	@echo "Target er HTML i" $(targetshortname)/bog
	rm -rf tempdir stikord.sgml magic.sgml $(targetname)-*.html.tar.gz bog
	echo '<!ENTITY magic "png">' > magic.sgml
	mkdir tempdir
	perl ./collateindex.pl -s Symboler  -t Stikordsregister -g -i stikord -N -o stikord.sgml
	cp *.sgml tempdir
	(cd tempdir; jade -t sgml -ihtml -d $(cygnus)\#html -V html-index bog.sgml)
	perl ./collateindex.pl -s Symboler -t Stikordsregister  -g -i stikord  -o stikord.sgml tempdir/HTML.index
	rm -rf tempdir
	db2html bog.sgml
	cp linuxbog.css bog
	cp images/*.png bog
	@echo "Done HTML (html)"
	@echo ""

reparerhtml:
ifneq   ("$(imagesize)","")
	(cd bog;perl ../../misc/insertimagesize)
else
	echo "Du bør installere Perl-modulet Image:Size"
endif
ifneq   ("$(tidy)","")
	(cd bog;tidy -latin1 -f err.txt -imu *html;rm -f err.txt)
else
	echo "Du bør installere tidy"
endif
	(cd bog;rm -f apprevhist.html;ln -sf *apprevhist.html apprevhist.html)


pakhtml:
	mv bog $(targetshortname)
	(cd ..;tar cvzf $(targetshortname)/$(targetname)-$(version).html.tar.gz $(targetshortname)/$(targetshortname) $(targetshortname)/eksempler README  )
	(cd ..;zip $(targetshortname)/$(targetname)-$(version)_html.zip -r $(targetshortname)/$(targetshortname) $(targetshortname)/eksempler)
	(cd ..;tar cvzf $(targetshortname)/$(targetname)-$(version).html-ub.tar.gz $(targetshortname)/$(targetshortname)/*.html $(targetshortname)/$(targetshortname)/*.css $(targetshortname)/eksempler README  )
	mv $(targetshortname) bog 
	mv images $(targetshortname)_images
	(cd ..;tar cvzf  $(targetshortname)/$(targetname)-$(version).png.tar.gz $(targetshortname)/$(targetshortname)_images/ README )
	mv $(targetshortname)_images images 
	@echo "Done HTML pakning (pakhtml)"
	@echo ""

bog/index.html: $(sgmlfiler)
	$(MAKE) clean
	$(MAKE) statusfiler
	$(MAKE) htmlfiler 
	$(MAKE) reparerhtml 
	$(MAKE) pakhtml

html: gemversion bog/index.html


bog/enfil.html: statusfiler html
	@echo "Target er HTML i" $(targetshortname)/bog1
	rm -rf tempdir stikord.sgml magic.sgml $(targetname)-*.html.tar.gz bog1
	echo '<!ENTITY magic "png">' > magic.sgml
	mkdir bog1
	perl ./collateindex.pl -s Symboler  -t Stikordsregister -g -i stikord -N -o stikord.sgml
	cp *.sgml bog1
	(cd bog1; jade -t sgml -ihtml -d $(cygnus)\#html -V html-index bog.sgml)
	(cd bog1; perl ../collateindex.pl -s Symboler -t Stikordsregister  -g -i stikord  -o stikord.sgml HTML.index)
	(cd bog1; jade -t sgml -ihtml -d /usr/lib/sgml/stylesheets/cygnus-both.dsl\#html -V nochunks bog.sgml > index.html)
	cp linuxbog.css bog1
#	cp images/*.png bog1
ifneq   ("$(imagesize)","")
	(cd bog1;perl ../../misc/insertimagesize)
else
	echo "Du bør installere Perl-modulet Image:Size"
endif
ifneq   ("$(tidy)","")
	(cd bog1;tidy -f err.txt -imu *html;rm -f err.txt)
else
	echo "Du bør installere tidy"
endif
	cp bog1/index.html bog/enfil.html
	rm -rf bog1

enhtmlfil: gemversion bog/enfil.html


pspdf:	gemversion $(targetname)-$(version)_pdf.zip

$(targetname)-$(version)_pdf.zip: $(sgmlfiler)
	$(MAKE) statusfiler
	rm -rf bogps bogpdf stikord.sgml tempdir magic.sgml
	rm -f $(targetname)-*.pdf*    
	rm -f $(targetname)-*_pdf.zip
	rm -f $(targetname)-*.ps.gz              
	rm -f $(targetname)-*.ps              
	mkdir tempdir

	echo '<!ENTITY magic "eps">' > magic.sgml
	perl ./collateindex.pl  -s Symboler -t Stikordsregister -g -i stikord -N -o stikord.sgml
	cp *.sgml tempdir
	(cd tempdir; jade -t sgml -ihtml -d $(cygnus)\#print -V html-index -V nochunks bog.sgml > ged.html)
	perl ./collateindex.pl -s Symboler -t Stikordsregister  -g -i stikord  -o stikord.sgml tempdir/HTML.index

	@echo "Target er" $(targetname).pdf
	echo '<!ENTITY magic "png">' > magic.sgml
	mkdir bogpdf
	cp *.sgml bogpdf
	rm -f $(targetname)-*.pdf
	cp images/*.png bogpdf
	(cd bogpdf; perl ../../httpsplit.pl *.sgml)
#	(cd bogpdf; jade -t tex -d $(cygnus)\#print -o bogpre.tex bog.sgml )
#	(cd bogpdf; cat bogpre.tex | sed 's#--#-{}-{}#g' > bog.tex)
#	(cd bogpdf; cat bogpre.tex > bog.tex)
#	(cd bogpdf; pdfjadetex bog;pdfjadetex bog;pdfjadetex bog ) > /dev/null
	(cd bogpdf; db2pdf bog.sgml )
	mv bogpdf/bog.pdf $(targetname)-$(version).pdf
	pdfinfo $(targetname)-$(version).pdf | grep Pages: | cut -d':' -f2 > sideantal.txt
	zip $(targetname)-$(version)_pdf.zip $(targetname)-$(version).pdf

	@echo "Done PDF (pspdf)"
	@echo ""

	echo '<!ENTITY magic "eps">' > magic.sgml
	mkdir bogps
	find images/*.png | sed 's/.png//' | sed 's=images/==' | xargs -i% $(ImageMagickconvert) -antialias images/%.png eps2:bogps/%.eps
	echo '<!ENTITY magic "eps">' > magic.sgml
	cp *.sgml bogps
	(cd bogps; perl ../../httpsplit.pl *.sgml)
	(cd bogps; db2ps bog.sgml )
	mv bogps/bog.ps $(targetname)-$(version).ps
	gzip -9 $(targetname)-$(version).ps
	@echo "Done PS (pspdf)"
	@echo ""

	rm -f $(targetname)-$(version).pdf
#	rm -f $(targetname)-*.ps              
	rm -rf bogps bogpdf


test:
	echo $(eksfiler)


eksempelbackup:  $(targetname)-$(version)_eksempler.tar.gz

$(targetname)-$(version)_eksempler.tar.gz : $(eksfiler)
ifneq    ("$(eksfiler)","")
	rm -f $(targetname)-$(version)_eksempler.tar.gz  
	touch $(targetname)-$(version)_eksempler.tar
	cat dato.sgml > eksempler/BACKUPDATO
	(cd ..;tar cvf  $(targetshortname)/$(targetname)-$(version)_eksempler.tar $(targetshortname)/eksempler/BACKUPDATO)
	rm -f eksempler/BACKUPDATO
	find eksempler -type f | grep -v "/CVS/" | xargs -l1 -i= -r tar rvf $(targetname)-$(version)_eksempler.tar =
	gzip -9 $(targetname)-$(version)_eksempler.tar
else
	echo "Bogen" $(targetname) "har ikke nogen eksempler";
endif


clean:
	rm -rf dato.sgml magic.sgml DBTOHTML_OUTPUT_DIR* bog.junk bog stikord.sgml tempdir bogps bogpdf $(targetname)-*.html.tar.gz $(targetname)*zip $(targetname)*.pdf $(targetname)*.ps  $(targetname)*.ps.gz $(targetname)*.zip $(targetname)-*.palm.tar.gz $(targetname)-*.png.tar.gz $(targetname)-*.sgml.tar.gz $(targetname)-*.tar.gz palm/*.prc palm/*.pdb sideantal.txt $(targetname)-*_eksempler.tar.gz
