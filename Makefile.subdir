#
# Vi kræver SGML DocBook 3.1
# ImageMagick skal installeres
# tidy og Perl modulet Image::Size er ønskelige
##
#
# Peter Toft <pto@sslug.dk> 
# $Id$

# Lokalt katalog (fuld sti)

locdirname:=$(shell pwd)

# Kort navn
targetshortname:=$(notdir $(locdirname))

# Med linuxbog- foran
targetname:=linuxbog-$(notdir $(locdirname))

# version
version:=$(shell grep -A2 "<listitem>" apprevhist.sgml | head -n 2 | tail -n 1 | cut -d' ' -f2 > version.sgml; cat version.sgml)

# dato
dato:=$(shell date +%d/%m-%Y> dato.sgml; cat dato.sgml)

# Her er en liste af sgml-filer der ændres automatisk
badsgmlfiles=dato.sgml version.sgml magic.sgml stikord.sgml bogoversigt.sgml ophavsret.sgml

# Her er  en liste af alle sgml
allesgmlfiles:=$(wildcard *.{sgml,xml})

# Her er en liste af sgml-filer der skal checkes
sgmlfiler:=$(filter-out $(badsgmlfiles),$(allesgmlfiles))

# Her er  en liste af alle eksempler
alleeksfiles:=$(wildcard eksempler/*)

# Lokal Makefile ?
lokmake:=$(wildcard Makefile_local)

# Her er en liste af sgml-filer der skal checkes
eksfiler:=$(filter-out eksempler/CVS,$(alleeksfiles))

# Har vi Perl-modulet Image::Size installeret
imagesize:=$(wildcard /usr/lib/perl5/site_perl/5.005/Image/Size.pm)

# Har vi Plucker inde
plucker:=$(wildcard /usr/bin/plucker-build)

# Har vi tidy installeret?
tidy:=$(wildcard /usr/bin/tidy)

# her er det der skal laves
all: start ekstra html pdf sgml eksempelbackup stop

start:
	@echo "-------------------------------------------"
	@echo "Starter oversættelser af $(targetshortname)"
	@echo "-------------------------------------------"
	@echo Version er $(version)
	@echo Dato sat til $(dato)

stop:
	@echo "-------------------------------------------"
	@echo "Slut på $(targetshortname) $(version)      "
	@echo "-------------------------------------------"
	@echo 

version:
	@echo $(targetshortname) $(version)

ekstra:
	make -f Makefile_local

# Build the sgml package
sgml: $(targetname)-sgml-$(version).tar.gz
$(targetname)-sgml-$(version).tar.gz: $(sgmlfiler)
	(cd ..;tar cvzf $(targetshortname)/$(targetname)-sgml-$(version).tar.gz $(targetshortname)/*.{sgml,xml} $(targetshortname)/linuxbog.css $(targetshortname)/Makefile $(targetshortname)/collateindex.pl)
	(cd ..;ln -sf $(targetshortname)/$(targetname)-sgml-$(version).tar.gz $(targetshortname)/$(targetname).sgml.tar.gz)
	(cd ..;zip $(targetshortname)/$(targetname)-sgml-$(version).zip -r $(targetshortname)/*.{sgml,xml} $(targetshortname)/linuxbog.css $(targetshortname)/Makefile $(targetshortname)/collateindex.pl )

# Build the Palm Pilot Package
palmpilot: $(targetname)-$(version).palm.zip
$(targetname)-$(version).palm.zip: $(sgmlfiler)
ifneq   ("$(plucker)","")
	rm -f $(targetname)-$(version).palm.zip $(targetname)-$(version).palm.tar.gz
	$(MAKE) html
	rm -f palm/*.prc palm/*.pdb
	(cd palm;plucker-build -v -P . -f $(targetname))
	cp ../misc/*.prc palm
	cp ../misc/*.pdb palm
	cp ../misc/gpl.txt palm
	cp ../misc/plucker.txt palm
	(zip $(targetname)-$(version).palm.zip palm/*.prc palm/*.pdb palm/*txt )
else
	@echo "Du bør installere plucker for at kunne lave palm-udgaven"
endif

pakhtml: 
	@echo %define buildname $(targetshortname) > bog/$(targetname).spec
	@echo Name: linuxbog-$(targetshortname) >> bog/$(targetname).spec
	@echo Summary: `grep -A2 "<title>" indhold.sgml | head -n 1 | cut -d '>' -f 2 | cut -d '<' -f 1` >> bog/$(targetname).spec
	@echo Version: `cat version.sgml` >> bog/$(targetname).spec
	@echo Release: 1mdk >>  bog/$(targetname).spec
	cat linuxbog.spec >> bog/$(targetname).spec
	mv bog $(targetshortname)
	(cd ..;tar cvzf $(targetshortname)/$(targetname)-html-$(version).tar.gz $(targetshortname)/$(targetshortname) $(targetshortname)/eksempler  )
	(cd ..;zip $(targetshortname)/$(targetname)-html-$(version).zip -r $(targetshortname)/$(targetshortname) $(targetshortname)/eksempler)
	(cd ..;tar cvzf $(targetshortname)/$(targetname)-htmlub-$(version).tar.gz $(targetshortname)/$(targetshortname)/*.html $(targetshortname)/$(targetshortname)/*.css $(targetshortname)/eksempler   )
	mv $(targetshortname) bog 
	mv images $(targetshortname)_images
	(cd ..;tar cvzf  $(targetshortname)/$(targetname)-png-$(version).tar.gz $(targetshortname)/$(targetshortname)_images/ )
	mv $(targetshortname)_images images 
	@@echo "Done HTML pakning (pakhtml)"
	@echo ""
	@echo ""

# Build the html
html: bog/index.html 
bog/index.html: $(sgmlfiler) 
	@@echo "Target er HTML i" $(targetshortname)/bog
	rm -rf $(targetname)*
	rm -rf stikord.sgml magic.sgml $(targetname)-*.html.tar.gz bog
	@echo '<!ENTITY magic "png">' > magic.sgml
	/usr/bin/collateindex.pl -s Symboler -t Stikordsregister -g -i stikord -N -o stikord.sgml
	jw -V html-index -f docbook -b html -o bog bog.sgml
	/usr/bin/collateindex.pl -s Symboler -t Stikordsregister -g -i stikord  -o stikord.sgml bog/HTML.index
#	cp stikord.sgml stikord.sgml-org
#	recode -d UTF-8..lat1 stikord.sgml
	rm -rf bog/
	mkdir bog
	db2html  -V  %use-id-as-filename% bog.sgml
	cp linuxbog.css bog
	cp images/*.png bog
ifeq	($(shell perl -e 'use Image::Size; print "1"' 2> /dev/null), 1)
	(cd bog;perl ../../misc/insertimagesize)
else
	@echo "Du bør installere Perl-modulet Image:Size"
endif
ifeq	($(shell if which tidy >/dev/null 2>&1; then echo -n 1; fi;), 1)
	(cd bog;tidy -latin1 -f err.txt -imu *html;rm -f err.txt)
else
	@echo "Du bør installere tidy"
endif
	(cd bog;rm -f apprevhist.html;ln -sf *apprevhist.html apprevhist.html)
	make pakhtml
	rm -rf tempdir 
	@echo "Done HTML (html)"
	@echo ""


# Build pdf package.
pdf: $(targetname)-$(version)_pdf.zip
$(targetname)-$(version)_pdf.zip: $(sgmlfiler)
	@echo '<!ENTITY magic "png">' > magic.sgml
	/usr/bin/collateindex.pl  -s Symboler -t Stikordsregister -g -i stikord -N -o stikord.sgml
	rm -rf tempdir
	mkdir tempdir
	cp *.{sgml,xml} tempdir
	cp images/*png tempdir
	(cd tempdir;jw -V html-index -V nochunks -f docbook -b html -o bog bog.sgml)
	(cd tempdir;/usr/bin/collateindex.pl -s Symboler -t Stikordsregister -g -i stikord  -o stikord.sgml bog/HTML.index)
	(cd tempdir; db2pdf bog.sgml; db2pdf bog.sgml)
	mv tempdir/bog.pdf $(targetname)-$(version).pdf
	rm -rf tempdir
	pdfinfo $(targetname)-$(version).pdf | grep Pages: | cut -d':' -f2 > sideantal.txt
	zip $(targetname)-$(version)_pdf.zip $(targetname)-$(version).pdf
	@echo "Done PDF (pdf)"
	@echo ""

test:
	@echo $(eksfiler)

eksempelbackup:  $(targetname)-eksempler-$(version).tar.gz
$(targetname)-eksempler-$(version).tar.gz : $(eksfiler)
ifneq    ("$(eksfiler)","")
	rm -f $(targetname)-eksempler-$(version).tar.gz  
	touch $(targetname)-eksempler-$(version).tar
	cat dato.sgml > eksempler/BACKUPDATO
	(cd ..;tar cvf  $(targetshortname)/$(targetname)-eksempler-$(version).tar $(targetshortname)/eksempler/BACKUPDATO)
	rm -f eksempler/BACKUPDATO
	find eksempler -type f | grep -v "/CVS/" | xargs -l1 -i= -r tar rvf $(targetname)-eksempler-$(version).tar =
	gzip -9 $(targetname)-eksempler-$(version).tar
else
	@echo "Bogen" $(targetname) "har ikke nogen eksempler";
endif


clean:
	@echo clean $(targetshortname)
	@rm -rf dato.sgml version.sgml magic.sgml DBTOHTML_OUTPUT_DIR* bog.junk bog stikord.sgml tempdir bogps bogpdf $(targetname)*  palm/*.prc palm/*.pdb sideantal.txt *~*~ .#*[0-9]
ifeq ($(lokmake),Makefile_local)
	@echo X $(lokmake) X
	@make -f Makefile_local clean
else
	@echo "Ingen lokal Makefile"
endif
	@echo "Færdig med clean $(targetshortname)"

