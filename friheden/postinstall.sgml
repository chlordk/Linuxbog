<chapter id="system-vedligeholdelse">
<title>Efterfølgende installation af programmer og systemvedligeholdelse</title>
<indexterm><primary>RPM</primary></indexterm>
<indexterm><primary>installation af programmer</primary></indexterm>
<indexterm><primary>systemvedligeholdelse</primary></indexterm>
	
<para>
Når du har fuldført installation af en Linux-distribution og har dit
system til at køre, så vil du sikkert på et tidspunkt overveje at
fjerne nogle programmer og/eller tilføje nye programpakker. I
bl.a. Red Hat, SuSE og Mandrake anvender man
<command>rpm</command>-programmet. Det er et tekstbaseret program som
er præsenteret i bogen "Linux - Friheden til systemadministration",
der kan findes på 
<ulink
url="http://www.sslug.dk/linuxbog">http://www.sslug.dk/linuxbog</ulink>).
Kortfattet er anvendelsen at med <command>rpm -U PAKKE.rpm</command>
installerer eller opgraderer man filen
<filename>PAKKE.rpm</filename>, og med <command>rpm -e PAKKE</command>
(bemærk at der ikke tilføjes <filename>.rpm</filename> her)
afinstallerer <literal>PAKKE</literal>. Et godt sted at finde nye eller
opdaterede RPM-pakker, er at begynde på 
<ulink url="http://rpmfind.net">http://rpmfind.net</ulink> eller 
<ulink url="http://freshmeat.net">http://freshmeat.net</ulink>.
</para>

<para>
I de følgende afsnit ser vi nærmere på nogle af de værktøjer som
følger med de enkelte distributioner til at installere programmer og
lave andet systemvedligeholdelse.
</para>

<sect1 id="system-vedligeholdelse-red-hat">
<title>Systemvedligeholdelse med Red Hat</title>

<para>
I Red Hat 7.2 er de fleste grafiske systemstyringsprogrammer lavet om. 
</para>

<itemizedlist mark="bullet">
<listitem>
 <para>
 <command>/usr/sbin/redhat-config-network</command> : Anvendes til
 at sætte netværket op.
 </para>
</listitem>
<listitem>
 <para>
 <command>/usr/bin/redhat-config-apache</command> : Program til 
 at sætte Apache webserver op (grafisk redigering af konfigurationsfilen
 <filename>/etc/httpd/conf/httpd.conf</filename>).
</para>
</listitem>
<listitem>
 <para>
 <command>/usr/bin/redhat-config-time</command> : Opsætning
 af dato, tid, tidszone, og evt. NTP (Netværks tidssynkronisering).
 </para>
</listitem>
<listitem>
 <para>
 <command>/usr/bin/redhat-config-services</command> : 
 Styring af start af server-funktioner.
 </para>
</listitem>
<listitem>
 <para>
 <command>/usr/bin/redhat-config-users</command> : Brugeradministration.
 </para>
</listitem>
</itemizedlist>


<figure id="redhat-printer-opsaetning1-fig" float="1">
 <title>Red Hat printeropsætning</title>
 <graphic fileref="redhat-printer-opsaetning1.&magic;"  scale="60"></graphic>
</figure>

<figure id="redhat-printer-opsaetning2-fig" float="1">
 <title>Red Hat printeropsætning</title>
 <graphic fileref="redhat-printer-opsaetning2.&magic;"  scale="60"></graphic>
</figure>

<figure id="redhat-printer-opsaetning3-fig" float="1">
 <title>Red Hat printeropsætning</title>
 <graphic fileref="redhat-printer-opsaetning3.&magic;"  scale="60"></graphic>
</figure>

<figure id="redhat-printer-opsaetning4-fig" float="1">
 <title>Red Hat printeropsætning</title>
 <graphic fileref="redhat-printer-opsaetning4.&magic;"  scale="60"></graphic>
</figure>

<figure id="redhat-printer-opsaetning5-fig" float="1">
 <title>Red Hat printeropsætning</title>
 <graphic fileref="redhat-printer-opsaetning5.&magic;"  scale="60"></graphic>
</figure>

<figure id="redhat-printer-opsaetning6-fig" float="1">
 <title>Red Hat printeropsætning</title>
 <graphic fileref="redhat-printer-opsaetning6.&magic;"  scale="60"></graphic>
</figure>


</sect1>

<sect1 id="system-vedligeholdelse-mandrake">
<title>Systemvedligeholdelse med Mandrake</title>

<indexterm><primary>Mandrake</primary></indexterm>

<para>
Mandrake 8.0 har to gode programmer som pt. er unikke for Mandrake -
ikonerne vil man i KDE finde som vist på <xref
linkend="mandrakesystem-fig">.
</para>

<FIGURE ID="mandrakesystem-fig" FLOAT="1">
<TITLE>Grafiske programmer til at lave systemadministration i Mandrake</TITLE>
<GRAPHIC FILEREF="mandrakesystem.&magic;"  SCALE="80"></GRAPHIC>
</FIGURE>

<para>
Det første program er <emphasis>Mandrake Control
Panel</emphasis> (eller <command>DrakConf</command>,
hvis man vil starte programmet via en kommandolinie). Som det ses på 
<xref linkend="DrakConf-fig">, så kan man styre store dele af
maskin-opsætningen, og en særlig ting med Mandrake er, at man kan angive
at man logger ind automatisk uden password. Dette er meget bekvemt for
hjemmemaskinen, men bør aldrig bruges til maskiner som andre personer
kan komme til.
</para>

<indexterm><primary>DrakConf</primary></indexterm>


<FIGURE ID="DrakConf-fig" FLOAT="1">
<TITLE>Med DrakConf kan man (af)installere RPM-pakker</TITLE>
<GRAPHIC FILEREF="DrakConf.&magic;"  SCALE="60"></GRAPHIC>
</FIGURE>

<para>
Skal du installere RPM-pakker grafisk med Mandrake 8.0 så vælg ikonet
"Software manager", (eller <command>rpmdrake</command>, hvis man
vil starte programmet via en kommandolinie). Programmet spørger en
enkelt gang efter dine cd-rom'er med Mandrake 8.0, så de kan blive
indekseret. Derefter kan du installere og afinstallere pakker efter
kategori eller efter pakke-navn (flad liste).
</para>

<indexterm><primary>rpmdrake</primary></indexterm>


<FIGURE ID="rpmdrake-fig" FLOAT="1">
<TITLE>Med rpmdrake kan man sætte systemet op</TITLE>
<GRAPHIC FILEREF="rpmdrake.&magic;"  SCALE="60"></GRAPHIC>
</FIGURE>

<para>
For at bruge de to programmer skal du kende root-password, som
anvendes ved opstart af programmet.
</para>

</sect1>

<sect1 id="systemvedligeholdelse-suse">
<title>Systemvedligeholdelse med SuSE</title>

<para>
YaST og YaST2 er langt mere end blot installationsprogrammer. De giver
adgang til automatisk opdatering af installerede pakker via FTP fra
SuSE, installation af andre pakker, gruppe- og brugerstyring, valg af
brugernavn og brugerflade under X og meget mere. Under KDE kan de enkelte
dele af YaST2 vælges enkeltvis, en ganske elegant løsning.
</para>

<sect2 id="yast-install-admin">
<title>YaST - tekstbaseret installations- og administrationsprogram</title>

<indexterm><primary>YAST</primary></indexterm>

<para>
Afbryder man installationen under YaST2, falder systemet tilbage til
den tekstbaserede version YaST. Det er nødvendigt, hvis man ønsker
en mere speciel installation, f.eks. med brug af LVM.  Under YaST får man
blandt meget andet mulighed for at ændre de enkelte partitioners type
til 8e (LVM), for derefter at oprette PhysicalVolume (PV),
VolumeGroups (VG) og LogicalVolumes (LV).  (Det er næppe det et tiårs
barn skal starte med, men efter et par år...)
</para>

<indexterm><primary>LVM</primary></indexterm>
<indexterm><primary>Logical Volume Management</primary></indexterm>


<para>
Billederne herunder viser en eksisterende opsætning af LVM på en anden
(ikke virtuel) maskine. Først vejen ind: 
</para>

<FIGURE ID="Yast1-1-fig" FLOAT="1">
<TITLE>YaST1</TITLE>
<GRAPHIC FILEREF="Yast1_1.&magic;"  SCALE="60"></GRAPHIC>
</FIGURE>


<para>
Konfigurationen startes med at oprette PV'er under "F6:
Partitionering". Alle eksisterende primære partitioner på alle
eksisterende drev kan lægges ind under LVM, men SuSE anbefaler (i
version 7.0) at holde boot ude.  
</para>

<FIGURE ID="Yast1-2-fig" FLOAT="1">
<TITLE>YaST1</TITLE>
<GRAPHIC FILEREF="Yast1_2.&magic;"  SCALE="60"></GRAPHIC>
</FIGURE>


<para>
Derefter oprettes en VG, og de ønskede PV'er sættes ind i den ved en
simpel afkrydsning.  
</para>

<FIGURE ID="Yast1-3-fig" FLOAT="1">
<TITLE>Yast1</TITLE>
<GRAPHIC FILEREF="Yast1_3.&magic;"  SCALE="60"></GRAPHIC>
</FIGURE>


<para> 
I eksemplet her har maskinen en lille IDE-disk mountet som
<filename>/boot,</filename> en stor IDE-disk (opdelt i swap,
<filename>/root</filename> og en stor partition til mount af diverse
sjældent brugte ting og sager).  
</para>

<para>
Der er 4 SCSI-drev i forskellig størrelse, alle koblet sammen i samme
VG. Denne VG optræder herefter som et enkelt fysisk drev på omkring
25 Gb, i det mindste indtil der kommer flere diske til eller tages
diske ud.  
</para>

<FIGURE ID="Yast1-4-fig" FLOAT="1">
<TITLE>YaST1</TITLE>
<GRAPHIC FILEREF="Yast1_4.&magic;"  SCALE="60"></GRAPHIC>
</FIGURE>


<para>
Den samlede VG kan nu benyttes til at oprette LV. I dette tilfælde er
16 af de 24 Gb lagt sammen i et enkelt LV, som derefter er mountet som
/home. Skulle behov opstå, kan der på de eksisterende diske udvides
med yderligere 8 Gb, eller de 8 Gb kan benyttes til fx /usr /opt eller
hvor behovet måtte vise sig.
</para>

<para>
Selve håndteringen af LVM skal ikke ske i YaST, men opsætning og
klargøringen håndteres fint.  En gennemlæsning af LVM-Howto giver et
godt udgangspunkt.
</para>
</sect2>

<sect2 id="suse-printer">
<!-- Skrevet af Jesper Laisen -->
<title>Opsætning af printer under SuSE</title>


<indexterm><primary>Printer</primary><secondary>Opsætning under SuSE</secondary></indexterm>
<indexterm><primary>Udskrivning</primary><secondary>Opsætning under SuSE</secondary></indexterm>

<para>
Du skal konfigurere din printer, inden du kan bruge den. Du vælger "Start
 application, Control Center". Når dit Control Center er startet, vælger du
"YaST2 modules, Hardware, Autodetect Printers"
</para>

<figure id="suse-printer-yast2-fig" float="1">
<title>Printerhåndtering under SuSE</title>
<graphic fileref="suse_printer_yast2.&magic;" scale="60"></graphic>
</figure>


<para>
Du skal være root for at konfigurere din printer. Klik på root og
skriv det password, som svarer til root.
</para>

<figure id="suse-printer-runsasroot-fig" float="1">
<title>Printerhåndtering under SuSE</title>
<graphic fileref="suse_printer_runasroot.&magic;" scale="60"></graphic>
</figure>


<para>
Hvis din printer blevet genkendt under installation, vil det fremgå af
"Printers to configure". I feltet nedenunder kan du se, at printeren
(en Lexmark 5700 i dette tilfælde) ikke allerede er konfigureret. Hvis
den ikke er genkendt, kan du prøve at klikke på "Restart
detection". Ellers klikker du på den genkendte printer og dernæst på
"Configure".
</para>

<figure id="suse-printer-setup-fig" float="1">
<title>Printerhåndtering under SuSE</title>
<graphic fileref="suse_printer_setup.&magic;" scale="60"></graphic>
</figure>


<para>
Du kan nu vælge mellem tre former for setup:
</para>
<itemizedlist mark="bullet">
<listitem>
 <para>
  Quick automatic setup
 </para>
</listitem>
<listitem>
 <para>
  Normal setup
 </para>
</listitem>
<listitem> 
 <para>
  Advanced setup
 </para>
</listitem>
</itemizedlist>

<figure id="suse-printer-configuration-fig" float="1">
<title>Printerhåndtering under SuSE</title>
<graphic fileref="suse_printer_configuration.&magic;" scale="60"></graphic>
</figure>


<para>
Hvis du ikke kender så meget til opsætning, er det nemmest blot at
vælge "Quick automatic setup". Klik dernæst på "Next".
</para>

<para>
I "Printer overvew" kan du nu se, hvordan printeren er konfigureret. Bemærk at
navnet på printerens kø er "lp".
</para>

<figure id="suse-printer-overview-fig" float="1">
<title>Printerhåndtering under SuSE</title>
<graphic fileref="suse_printer_overview.&magic;" scale="60"></graphic>
</figure>


<para>
Vælg nu at udskrive en testside ved at klikke på "Test".
</para>

<figure id="suse-printer-testpage-fig" float="1">
<title>Printerhåndtering under SuSE</title>
<graphic fileref="suse_printer_testpage.&magic;" scale="60"></graphic>
</figure>


<para>
Klik ok. Hvis testsiden kommer rigtigt ud, klikker du ok til følgende billede:
</para>

<figure id="suse-printer-testpage-ok-fig" float="1">
<title>Printerhåndtering under SuSE</title>
<graphic fileref="suse_printer_testpage_ok.&magic;" scale="60"></graphic>
</figure>


<para>
Din printer er nu være konfigureret, og du kan klikke på "Finish".
</para>

<figure id="suse-printer-ok-fig" float="1">
<title>Printerhåndtering under SuSE</title>
<graphic fileref="suse_printer_ok.&magic;" scale="60"></graphic>
</figure>


<para>
Hvis du nu i nogen af de andre KDE-programmer for eksempel KMail klikker på
print-ikonet, kan du nu se, at navnet på printerens kø - lp - er valgt.
</para>

<figure id="suse-printer-print-fig" float="1">
<title>Printerhåndtering under SuSE</title>
<graphic fileref="suse_printer_print.&magic;" scale="60"></graphic>
</figure>



<para>
Du kan nu udskrive ved at klikke på "Ok".
</para>

</sect2>
</sect1>


<sect1 id="kde-systemadm">
<title>KDE-værktøjer</title>
<para>
Med de nye KDE-udgaver følger en del gode værktøjer med som en
systemadministrator kan have glæde af. <command>KUser</command> er en
af dem. KDE 2 har dette i Menuen [Start] -> [System] -> [User Manager].
</para>

<para>
Med KDE User Manager har man et nemt grafisk program til at opsætte,
ændre og slette bruger-profiler på Linux-maskinen. Klikker man på en
bruger kommer man direkte til brugerens opsætning. 
</para>

<FIGURE ID="kuser" FLOAT="1">
<TITLE>Bruger-administration med KDE User Manager</TITLE>
<GRAPHIC FILEREF="kuser.&magic;"  SCALE="50"></GRAPHIC>
</FIGURE>


<para>
Med KDE 2.1 følger også et godt værktøj til at holde styr på de RPM-,
Slackware- og DEB-pakker, der er installeret. Find
<command>KPackage</command> via [Start] -> [System] -> [Package
Manager]. Til venstre på <xref linkend="kpackage-fig"> ses en del af
oversigten over de pakker som er installeret. Vælges en pakke viser
højresiden hvad pakken indeholder og man kan få en liste over filer, som
pakken indeholder.
</para>

<indexterm><primary>kpackage</primary></indexterm>

<FIGURE ID="kpackage-fig" FLOAT="1">
<TITLE>Pakke-administration med KDE Package Manager</TITLE>
<GRAPHIC FILEREF="kpackage.&magic;"  SCALE="50"></GRAPHIC>
</FIGURE>
</sect1>

<sect1 id="ximian-sysadm">
<title>Ximian setup tool</title>
<para>
Ximian Gnome (tidl. Helix Gnome, men har nu ændret navn,
pga. uoverensstemmelser med varemærkerettigheder) har lavet et
værktøj der - meget rammende - hedder Ximian Setup Tools. Dette
værktøj er meget nemt at bruge og giver grafisk styring af de fleste
grundlæggende ting i Linux.
</para>

<indexterm><primary>Ximian</primary></indexterm>

<FIGURE ID="ximianshares-fig" FLOAT="1">
<TITLE>Ximian fil-deling</TITLE>
<GRAPHIC FILEREF="ximianshares.&magic;"  SCALE="50"></GRAPHIC>
</FIGURE>


<para>
På <xref linkend="ximianshares-fig"> er vist hvordan
mapper/kataloger og printere deles, så andre kan se dem.  Som man
kan se er det nemt indstille deling af filer mellem Linux og
Windows-maskiner, eller mellem Linux-maskiner, via Samba eller NFS.
</para>

<para>
Da værktøjet endnu ikke er helt færdigt (stadig beta-kode) skal du selv hente
kildeteksten og oversætte den. Det gør du sådan her:
</para>

<para>
Åbn din favoritbrowser og gå til adressen:
<ulink url="http://www.ximian.com/desktop/setuptools.php3">http://www.ximian.com/desktop/setuptools.php3</ulink>.
Gå ned midt på siden, indtil du kommer til afsnittet "The latest
version of Ximian Setup Tools is" og tryk på versionsnummeret
nedenunder for at downloade <filename>.tar.gz</filename>-filen.
Når du har downloadet filen, skal du pakke den ud.
</para>

<screen>
<PROMPT>[root@linus /root]#</PROMPT> <USERINPUT>tar -xvzf helixcode-setup-tools*</USERINPUT>
<PROMPT>[root@linus /root]#</PROMPT> <USERINPUT>cd helixcode-setup-tools*</USERINPUT>
<PROMPT>[root@linus /root/helixcode-setup-tools]#</PROMPT> <USERINPUT>./configure --prefix=/usr --sysconfdir=/etc</USERINPUT>
<PROMPT>[root@linus /root/helixcode-setup-tools]#</PROMPT> <USERINPUT>make</USERINPUT>
<PROMPT>[root@linus /root/helixcode-setup-tools]#</PROMPT> <USERINPUT>make install</USERINPUT>
</screen>

<para>
Ifølge Ximian er det VIGTIGT at huske parametrene til
<command>./configure</command>-kommandoen, da programmet ellers ikke
vil oversætte korrekt.
</para>

<para>
Når du har gjort det, er programmet installeret og kan bruges enten
enkeltvis startet via kommandolinien, eller ved at vælge Gnome
konfigurationsværktøj (værktøjskassen på Gnomes menulinie). Du kan
også trykke på Gnome-fodspor-menu, og vælge Opsætning-kontrolcenter.
Værktøjer vil være at finde under punktet System. Programmerne kan også
køres enkeltvis, hvis man vil det, med kommandoerne:
<command>users-admin</command>, <command>shares-admin</command>,
<command>disks-admin</command>, <command>memory-admin</command>,
<command>networking-admin</command> og
<command>nameresolution-admin</command>. Lad os se på netværksopsætningen:
</para>

<FIGURE ID="ximiannet-fig" FLOAT="1">
<TITLE>Ximian netværksopsætning</TITLE>
<GRAPHIC FILEREF="ximiannet.&magic;"  SCALE="50"></GRAPHIC>
</FIGURE>

<para>
De omtalte programmer bliver deaktiveret for alle andre brugere end
root, da det kun er root der skal ændre systemet. Programmerne kan i
stedet startes op fra kommandolinien via <command>sudo</command> eller
ved først at skrive ID til root via <command>su</command>.
</para>

<para>
I skrivende stund kan værktøjet - eller rettere de 7 programmer -
bruges til at indstille følgende på din Linux-maskine:
</para>

<itemizedlist mark="bullet">
<listitem>
 <para>
Netværksopsætning: TCP/IP-opsætning.
 </para>
</listitem>
<listitem>
 <para>
Name Resolution: hostnavn, domæne, DNS, WINS, statiske hosts,
søgedomæner, arbejdsgruppe.
 </para>
</listitem>
<listitem>
 <para>
Hukommelse: Swap-partitioner og filer.
 </para>
</listitem>
<listitem>
 <para>
Tid: Systemuret, tidszone, tidsserver synkronisering.
 </para>
</listitem>
<listitem>
 <para>
Brugere: Brugere og grupper.
 </para>
</listitem>
<listitem>
 <para>
Diske: Mounte lokale harddiske og partitioner.
 </para>
</listitem>
<listitem> 
 <para>
Shares: NFS, SMB, eksport, detect og import.
 </para>
</listitem>
</itemizedlist>


<para>
Her er et billede af <command>disks-admin</command>-værktøjet:
</para>

<FIGURE ID="ximiandisk-fig" FLOAT="1">
<TITLE>Ximian diskstyring</TITLE>
<GRAPHIC FILEREF="ximiandisk.&magic;"  SCALE="50"></GRAPHIC>
</FIGURE>

<para>
I nær fremtid forventes det, at værktøjet vil blive udbygget med
funktioner til konfiguration af printer, login manager, skærm, lydkort
med mere.
</para>

<para>
Ydermere er der planlagt CORBA-integration,
således at fjernadministration af maskiner gennem
værktøjet/værktøjerne vil være muligt. Cluster/klynge-konfiguration -
dermed menes mulighed for at systemadministratorer kan konfigurere og
rekonfigurere store antal af arbejdsstationer gennem fjernopkobling.
</para>


<para>
Presets/Standardindstillinger: En anden smart (og meget relevant)
funktion vil være muligheden for - via en applet - at kunne ændre ens
netværksopsætning, standard-printer, alt efter hvor man fysisk
set har koblet sin computer op.  Derved vil man kunne have forskellige
"Presets" til forskellige fysiske placeringer (arbejde, hjemmenetværk,
netparty, etc.) Denne funktion er nok i sig selv en god grund til at
holde et vågent øje med udviklingen af dette værktøj.
</para>

<para>
Rollback/Tilbagerulning: Alle værktøjerne/værktøjet vil kunne lave et
periodisk snapshot af dit system, således at du vil kunne "rulle" din
systemkonfiguration tilbage til der, hvor den sidst virkede - denne
funktion kan sammenlignes med "Restore point"-funktionen fra Microsoft
Windows ME.
</para>

</sect1>

<!-- Skrevet af Tommy Olsen -->
<sect1 id="installer-debian">
<title>Debian</title>
<indexterm><primary>Debian</primary></indexterm>


<para>
En egentlig installationsvejledning i Debian er ikke her,
se da <ulink url="http://dkdg.sourceforge.net">http://dkdg.sourceforge.net</ulink>,
vi ser dog
nærmere på håndtering af DEB-pakker i Debian.
</para>

<sect2 id="debian-apt">
<title>Apt - Debians pakkehåndtering</title>
<indexterm><primary>apt</primary></indexterm>

<para>
Hvis man bruger Debian, eller overvejer at bruge det, og ikke kender
dens pakkesystem, så er denne lille guide en glimrende introduktion
til emnet.
</para>
 
<para>
Apt står for "Advanced Package Tool" og er det værktøj i Debian som
håndterer installerede software-pakker. Når man bruger Apt, eller
pakker generelt, så downloader man som regel et præ-oversat stykke
software og installerer det via sit pakke-håndteringsprogram. Fordelen
ved dette er så at uerfarne Linux-brugere kan installere en masse
software uden at skulle igennem en - nogen gange - vanskelig proces
med at oversætte programmet, hvilket sker ud fra kildekoden. En af
ulemperne ved kildekode er også at når et stykke software er blevet
opgraderet så skal man til at gen-oversætte hele programmet igen, og det
kan hurtigt blive en uoverskuelig opgave hvis man bare bruger XFree86
og nogle enkelte stykker software udover det. Men med f.eks. Apt kan
dette gøres rigtig nemt og hurtigt.
</para>

<para>
Med Apt kan man installere/opdatere/fjerne pakker med et
snuptag, fordi man ikke skal bruge selve pakken, men blot navnet på
pakken som input. Så sørger Apt selv for at hente pakken, om så det er
fra CD eller en http-server. Men for at få dette til at virke rigtigt
bruger Apt en simpel konfigurerings-fil kaldet sources.list og denne
fil ligger som standard i mappen <filename>/etc/apt</filename>. I
denne fil er der specificeret hvor Apt skal få pakkerne fra. Som
standard installerer man fra sin cd-rom-enhed, men dette kan nemt
ændres hvis man kører følgende kommando i konsollen eller i en
xterm/wterm/etc. som root:
</para>

<SCREEN>
<PROMPT>[root@linus /root]#</PROMPT> <USERINPUT>apt-setup</USERINPUT>
</SCREEN>

<para> 
Så skulle der gerne komme en menu hvori man kan vælge hvordan man vil
hente sine pakker. Her vælger man så f.eks.: http
</para>

<para>
Så spørger den om man vil bruge "Non-free software" -- Det vil jeg
lade op til brugeren selv at bestemme. Som standard i Debian er dette
"off", fordi det ikke følger ånden i GPL-licensen. Men man har her
muligheden for at sætte det til "on", hvis der er noget software som
man gerne vil have. Under "Non-free software" findes
bl.a. programpakken, der indeholder mail-klienten PINE og editoren
PICO.
</para>

<para>
Så spørger den om at bruge "Contrib software" -- Dette valg skal man
nok basere på det valg man lavede ovenfor.
</para>

<para>
Resten af spørgsmålene skulle gerne give sig selv. Og når man har
svaret på dem begynder den at downloade en "package-list", som Apt
skal bruge fremover når man vil installere pakker.
</para>

<para>
Nu er Apt søsat til at hente pakkerne fra Internettet, så nu vil
jeg introducere det program som man vil bruge for at håndtere
pakkerne: <command>apt-get</command>.
</para>

<para>
Apt-get fungerer ved at man sætter første parameter efter hvad man
gerne vil have gjort med pakken, f.eks. hvis man vil installere noget:
</para>

<SCREEN>
<PROMPT>[root@linus /root]#</PROMPT> <USERINPUT>apt-get install pakkenavn</USERINPUT>
</SCREEN>

<para>
Læg her mærke til at jeg skriver "pakkenavn" og ikke "pakkenavn.deb" -
Det gør jeg fordi pakkesystemet er bygget sådan op at man kun
skal bruge pakkens navn.
</para>

<para>
Når jeg udfører denne kommando, så søger den i den underliggende
"Package List" efter en pakke kaldet "pakke". Derudover søger den også
i "Dependency List", og hvis den pakke man vil installere kræver en
anden pakke så vil Apt også hente den.  Nu vil Apt så begynde at hente
pakken fra Internettet og når det er gjort vil den installere og
derefter opsætte pakken.
</para>

<para>
Hvis man vil fjerne/afinstallere en pakke fra systemet skriver man så:
</para>

<SCREEN>
<PROMPT>[root@linus /root]#</PROMPT> <USERINPUT>apt-get remove pakkenavn</USERINPUT>
</SCREEN>

<para>
Her vil Apt afinstallere "pakkenavn" fra systemet.
</para>

<para>
Alt dette er jo meget godt, men man kan også lave mere avancerede ting,
f.eks. kan man opgradere alle pakker på sit system, ved først at
skrive:
</para>

<SCREEN>
<PROMPT>[root@linus /root]#</PROMPT> <USERINPUT>apt-get update</USERINPUT>
</SCREEN>

<para>
Dette vil opdatere "Package Lists" og "Dependency Lists", så man vil
hente de nyeste pakker fra Internettet.
</para>

<para>
Herefter kører man:
</para>

<SCREEN>
<PROMPT>[root@linus /root]#</PROMPT> <USERINPUT>apt-get upgrade</USERINPUT>
</SCREEN>

<para>
Denne kommando vil sammenligne "Package List" med de installerede
pakker og så opdatere de pakker på systemet, som er nyere i "Package
List". Denne kommando er utrolig fiks til at opdatere alle installerede
pakker med. Udover 'apt-get upgrade' findes der også: 'apt-get
dist-upgrade' og som navnet antyder opgraderer den
distributionen. Forskellen mellem 'upgrade' og 'dist-upgrade' er at
'dist-upgrade' vil prøve at opdatere "Dependency List" med nye
versioner af pakkerne.
</para>

<para>
Når Apt har downloadet en pakke bliver den lagt i
<filename>/var/cache/apt/archives</filename> og der bliver den faktisk
liggende, også efter at pakken er installeret. For at slette pakkerne
man har liggende skriver man:
</para>


<SCREEN>
<PROMPT>[root@linus /root]#</PROMPT> <USERINPUT>apt-get clean</USERINPUT>
</SCREEN>

<para>
Dette var en kort indledning til 'apt-get' - Men tro ikke at de
funktioner jeg har nævnt her er det eneste den kan. Den kan faktisk en
masse andet, f.eks. downloade sourcen til et program for derefter at
kompilere det. Alle disse smarte features kan man finde i Man-siden
til <filename>apt-get(8)</filename>.
</para>

<para>
Nogle gange når man skal installere en pakke kan det være svært at
gennemskue hvad pakken hedder i Apt fordi der kan være versions-numre
og lignende i navnet. I sådanne situationer hvor man ønsker at finde
det præcise navn på en pakke kan man bruge programmet
<command>apt-cache</command>. Hvis man f.eks. gerne vil vide hvad
pakkenavnet for IRC-klienten EPIC4 hedder, kan man skrive:
</para>

<SCREEN>
<PROMPT>[root@linus /root]#</PROMPT> <USERINPUT>apt-cache search epic</USERINPUT>
</SCREEN>

<para>
Programmet vil så svare om der findes nogle pakker med det
søgekriterium man har skrevet. I dette tilfælde vil den bl.a. komme
med følgende linie:
</para>

<screen>
epic4 - epic irc client, version 4
</screen>

<para>
Fra denne oplysning kan jeg se at pakken jeg er interesseret i, hedder
"epic4", og for at lette brugen udskriver den også en lille
beskrivelse af pakken. Hvis man så ønsker at installere den kan man bare
fodre <command>apt-get</command> med pakkens præcise navn og den vil
så begynde at downloade og installere pakken.
</para>

<para>
Dette var en lettere kort introduktion til det efterhånden ret geniale
værktøj Apt, som gør brugen af Debian meget god og nem at
vedligeholde. Hvis man vil kompilere alle sine programmer selv, så er
Debian nok ikke distribution for én.  Hvis man vil have mere info
omkring de forskellige parametre, som man kan smide på programmerne
kan Man-siderne godt anbefales: apt-cache(8), apt-get(8), sources.list(5)
</para>

<para>
Som en slutreplik kan nævnes at hvis man editerer
<filename>/etc/apt/sources.list</filename> så kan man opsætte
forskellige ting i denne fil, bl.a. om man vil have stable-, unstable-
eller testingpakker installeret. I denne fil kan man også indsætte
flere entries til Apt, som man så kan bruge. Man skal blot huske at
køre en <command>apt-get update</command> efter man har opdateret
<filename>sources.list</filename>. Se mere om dette i næste afsnit.
</para>
</sect2>

<sect2 id="debian-unstable"> <!-- Herfra og frem er Makholm den skyldige -->
<title>At bruge en lettere ustabil Debian</title>

<para>
Debian er ikke særlig hurtig til at udgive nye stabile udgaver, så derfor
ønsker mange at bruge dele af en af udviklingsudgaverne af Debian for
at få nyere versioner af nogle programmer.
</para>

<para>
Debian Unstable hedder ikke unstable for sjov, og der er en grund til
at Debian Testing ikke officielt er erklæret for en stabil udgave
endnu. Følger man vejledningerne i dette afsnit kommer man til at
bruge programmer, der ikke er fuldstændigt testet og hvis ens maskine
pludselig ikke virker er det bare synd! (Tag dette som en advarsel, I
får ikke flere)
</para>

<para>
Når en udvikler har lavet en ny Debian-pakke ryger den direkte ind i
Unstable. Man kan derfor let komme ud for at pakker i unstable har
nogle ret kritiske fejl. Når en pakke har været i unstable i mindst 14
dage, ikke har nogle kritiske fejl og er oversat til alle platforme, så
bliver pakken automatisk installeret i Testing. Der skulle derfor ikke
være ret mange kritiske fejl i Debian Testing, men det er som sagt
ikke fuldt ud gennemprøvet.
</para>

<sect3 id="debian-fuldt-unstable">
<title>At lave en fuld opdatering</title>

<para>
Hvis man ønsker at bruge en ren Testing eller Unstable kan det
anbefales at begynde med at installere i Debian Stable og så opdatere
over netværket.
</para>

<para>
Når man har installeret Debian har man en fil, der hedder
<filename>/etc/apt/sources.list</filename>. Denne fil bestemmer hvor
Debian henter pakker fra. Formodentligt, har den to linier, der ligner
følgende:
</para>

<screen>
deb http://http.us.debian.org/debian stable main contrib non-free
deb http://non-us.debian.org/debian-non-US stable/non-US main contrib non-free
</screen>

<para>
For fuldt ud at skifte til testing eller unstable, skal disse filer
ændres, så de nævner henholdsvis testing eller unstable i stedet for
stable. Det vil sige at linierne skal se således ud:
</para>

<screen>
deb http://http.us.debian.org/debian testing main contrib non-free
deb http://non-us.debian.org/debian-non-US testing/non-US main contrib non-free
</screen>

<para>
Dernæst skal man opdatere sin pakkeliste og så er det bare at
opgradere (til en ny distribution):
</para>

<screen>
<prompt>[root@linux /root]#</prompt> <userinput>apt-get update</userinput>
<prompt>[root@linux /root]#</prompt> <userinput>apt-get dist-upgrade</userinput>
</screen>

<para>
Fremover holder man sin maskine opdateret ved med jævne mellemrum at
opdatere sin pakkeliste og opgradere (samme distribution):
</para>

<screen>
<prompt>[root@linux /root]#</prompt> <userinput>apt-get update</userinput>
<prompt>[root@linux /root]#</prompt> <userinput>apt-get upgrade</userinput>
</screen>

<para>
Kalder man <command>apt-get upgrade</command> med en -u option, altså
<command>apt-get -u upgrade</command> fortæller den om alle de pakker
den opgraderer.
</para>

<para>
En række pakker vil apt-get fortælle at den ikke vil opdatere ("The
following packages have been kept back"). Dette betyder at pakkerne
ikke kan opgraderes uden enten at installere flere pakker eller ved
at fjerne pakker fra systemet. Disse pakker kan så opgraderes ved at
skrive:
</para>

<screen>
<prompt>[root@linux /root]#</prompt> <userinput>apt-get install &lt;pakke&gt;</userinput>
</screen>
</sect3>

<sect3 id="debian-enkelte-unstable">
<title>At opdatere udelukkende enkelte pakker</title>

<para>
Ofte er det kun enkelte pakker man virkelig har brug for at skulle
have i en nyere version. Det kan derfor være smart kun at opdatere de
pakker man har brug for at opdatere. Det kan man gøre hvis man
bruger en nogenlunde ny version af apt (den der ligger i testing).
</para>

<para>
Først skal man fortælle apt at den skal hente pakkelisterne for både
stable, testing og unstable (eller bare to af dem). Det gøres ved at
skrive begge distributioner ind i <filename>/etc/apt/sources.list</filename>:
</para>

<screen>
deb http://http.us.debian.org/debian stable main contrib non-free
deb http://http.us.debian.org/debian testing main contrib non-free
deb http://http.us.debian.org/debian unstable main contrib non-free
deb http://non-us.debian.org/debian-non-US stable/non-US main contrib non-free
deb http://non-us.debian.org/debian-non-US testing/non-US main contrib non-free
deb http://non-us.debian.org/debian-non-US unstable/non-US main contrib non-free
</screen>

<para>
Dernæst skal pakkelisten opdateres:
</para>

<screen>
<prompt>[root@linux /root]#</prompt> <userinput>apt-get update</userinput>
</screen>

<para>
Vi skal nu fortælle apt at selv om der findes nyere versioner af en
pakke, skal den altid bruge pakken fra stable, med mindre den
eksplicit får fortalt andet. Det gøres ved at lave en fil
<filename>/etc/apt/preferences</filename>, der indeholder følgende:
</para>

<screen>
Package: *
Pin: release a=stable
Pin-Priority: 600
</screen>

<para>
Dermed ved apt at den skal give alle pakker, der kommer fra stable, en
prioritet på 600. (standardprioriteten er 500). Når apt skal vælge
hvilke pakker den skal installere (opgradere til) vælger den de pakker
med højst prioritet (før den ser på versionsnumre).
</para>

<para>
Det er nu muligt at installere enkelte pakker direkte fra testing ved
at skrive:
</para>

<screen>
<prompt>[root@linux /root]#</prompt> <userinput>apt-get install slashem/testing</userinput>
</screen>

<para>
Dette installerer pakken slashem fra testing. Hvis pakken er afhængig
af andre pakker, der ikke er i stable, skal disse angives
eksplicit. Hvis man ønsker at opfylde alle afhængigheder ved at
installere pakker fra testing kan man skrive følgende:
</para>

<screen>
<prompt>[root@linux /root]#</prompt> <userinput>apt-get --target-release testing install slashem</userinput>
</screen>

<para>
Hvormed apt vil give prioriteten 990 til alle pakker i testing.
</para>

<para>
Hvis man altid vil følge pakken slashem fra testing, kan man skrive
følgende i sin <filename>/etc/apt/preferences</filename>:
</para>

<screen>
Package: slashem
Pin: release a=testing
Pin-Priority: 700

Package: *
Pin: release a=stable
Pin-Priority: 600
</screen>

<para>
Så vil slashem fra testing have en højere prioritet en slashem fra
stable (600) og slashem fra unstable (500).
</para>

<para>
Den fulde dokumentation af hvad man kan med /etc/apt/preferences
findes i manualsiden apt_preferences(8)
</para>
</sect3>

<sect3 id="debian-unstable-tips">
<title>Lidt andre gode råd</title>

<para>
Hvis man følger udviklingen af Debian kan det værer en god ide at
installere pakken apt-listchanges. Denne pakke giver mulighed for at
læse changelog-filerne for de pakker apt ønsker at opdatere. Dermed
kan man kyllinge ud hvis der er sket for store ændringer i en pakke.
</para>

<para>
<emphasis>Og husk:</emphasis> Debian Unstable bliver udviklet
aktivt. At opdatere centrale pakker som glibc eller perl kan let gøre
dit system ubrugligt. Brug derfor kun Debian Testing og Debian
Unstable på produktionsmaskiner, du ikke kan tåle at miste, når du er
absolut sikker på at det vil virke.
</para>

<para>
Et projekt som en Debian-interesseret bruger bør følge er
<ulink url="http://dkdg.sourceforge.net">http://dkdg.sourceforge.net</ulink>.
</para>

</sect3>
</sect2>
</sect1>

<sect1 id="fdisk">
<title>Anvendelse af fdisk</title>

<para> Hvis du har brug for at partitionere en disk på et tidspunkt
efter installation, så er <command>fdisk</command> et stabilt værktøj.
Skriv som "root" <command>fdisk</command> og du kan få hjælp ved at trykke
<filename>m</filename>.
</para>

<para>
Advarsel: Hvis du ikke har forstået, hvordan diskpartitioner fungerer,
skal du passe meget på. Kommer du til at lave ulykker med fdisk,
kan du komme til at miste kontakten med andre partitioner på din
harddisk. Er du i tvivl, er det meget klogt, at du starter med at trykke
<filename>p</filename> og skrive ned (ja, på papir som i gamle dage),
hvad du får vist på skærmen.
</para>


<para>
I <command>fdisk</command>: Tryk <filename>p</filename> for at se, hvordan din
partitionstabel ser ud. Hvis du har været igennem <command>fips</command>,
har du en ny partition <filename>/dev/hda2</filename>, som er af typen
"DOS 16-bit >=32M". Du skal tilsvarende have en partition
<filename>/dev/hda1</filename> af typen "DOS 16-bit >=32M", som
indeholder din gamle Windows-partition - tjek om størrelsen stemmer!
Du skal starte med at slette den ekstra partition - sikkert
<filename>/dev/hda2</filename> - tryk <command>d</command> og 
<command>2</command>, hvis du er sikker på, hvad du laver. 
Ellers spørg i din nærmeste Linux-brugergruppe.</para>

<para>
Skab mindst to nye Linux-partitioner ved at trykke
<filename>n</filename> og partitionsnummer. Dette skal du gøre to
gange med partition 2 hhv. 3 (hvis du kun har en enkelt Windows-partition i
forvejen). Lav partition 2 stor og partition 3 på måske 40 Mb til swap.
Default type er "Linux native". En af partitionerne (nummer 3) skal have
ændret type til Linux swap, hvilket gøres ved at trykke
<filename>t</filename> og vælge type 82 (Linux swap). Tryk
<filename>p</filename> for at verificere at disken har den ønskede
opbygning. Den simpleste partitionsopbygning er som følger (ikke
alle dele af harddisken er udnyttet i eksemplet):
</para>

<screen>
Command (m for help): <userinput>p</userinput>

Disk /dev/hda: 16 heads, 63 sectors, 4092 cylinders
Units = cylinders of 1008 * 512 bytes

Device   Boot  Begin Start   End Blocks   Id  System
/dev/hda1   *      1     1  1016 512032+   6  DOS 16-bit >=32M
/dev/hda2       1017  1017  1626 307440   83  Linux native
/dev/hda3       3072  3960  4092  67000+  82  Linux swap
</screen>



<para>
Et eksempel på en mere avanceret partitionstabel kan være det
følgende. Det skal bemærkes, at den fortløbende nummerering af
partitionerne ikke er nødvendig. Desuden kan det bemærkes, at
<filename>hda1</filename> til <filename>hda4</filename>
er numrene for primære eller udvidede partitioner, og at partitioner i
den udvidede partition får numrene 5 og opefter. Der kan maksimalt
være 4 partitioner, hvoraf én kan være udvidet. Linux kan i
princippet placeres på en vilkårlig partition. Bemærk, at enkelte
laptops bryder med dette.
</para>

<screen>
Command (m for help): <userinput>p</userinput>

Disk /dev/hda: 16 heads, 63 sectors, 4092 cylinders
Units = cylinders of 1008 * 512 bytes

Device   Boot  Begin Start   End Blocks   Id  System
/dev/hda1   *      1     1  1016 512032+   6  DOS 16-bit >=32M
/dev/hda2       1017  1017  1626 307440    6  DOS 16-bit >=32M
/dev/hda3       1024  1627  2439 409752   83  Linux native
/dev/hda4       2048  2440  4092 833112    5  Extended
/dev/hda5       2048  2440  3700 635512+  83  Linux native
/dev/hda6       3072  3701  3959 130504+  83  Linux native
/dev/hda7       3072  3960  4092  67000+  82  Linux swap
</screen>

<para> Her er to DOS-partitioner (<filename>/dev/hda1,2</filename>), tre
Linux-partitioner (<filename>/dev/hda3,5,6</filename>) og en Linux swap-partition
 (<filename>/dev/hda7</filename>), og extended partitionstabel er
anvendt (<filename>/dev/hda4</filename>). Du kan nøjes med at have et
antal DOS (vfat) partitioner og så en Linux-partition, samt en Linux swap-partition.
</para>

<para>
Afslut <command>fdisk</command> med at trykke <filename>w</filename>
for "write to disk". (Du kan i øvrigt altid afslutte uden at gemme i
<command>fdisk</command> ved at trykke
<filename>q</filename>). Derefter vælges <filename>Done</filename>.
</para>
</sect1>


</chapter>
