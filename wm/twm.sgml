<?xml encoding="ISO-8859-1" ?>

<!-- Originalfil http://www.sslug.dk/julekalender/5.php3 -->

<chapter id="twm">
 <title>TWM</title>

 <indexterm>
  <primary>TWM</primary>
 </indexterm>

 <indexterm>
  <primary>Windowmanager</primary>
  <secondary>TWM</secondary>
 </indexterm>

 <para>
  Twm er en meget gammel og klassisk windowmanager, der stadig lever
  hist og her som et "alternativ der altid virker", og det kan derfor
  være godt at have et vist kendskab til den.
 </para>

<!--  Nedenstående er mig bekendt noget vrøvl.  Den er i det mindste
      med i Red Hat 9.
 <para>
  Den mangler mange features i forhold til nyere alternativer og er
  derfor udeladt fra mange nyere distributioner.
 </para>
-->

 <para>
  I nogle distributioner kan man være nødt til selv at oversætte den,
  hvis man vil prøve den.  Det nærmeste man kommer på en hjemmeside
  med screenshots er <ulink
  url="http://www.plig.org/xwinman/vtwm.html">http://www.plig.org/xwinman/vtwm.html</ulink>.
 </para>

 <para>
  TWM er en del af X11 projektet og vedligeholdes derfor
  (nødtørftigt).  I XFree86 distributionen kan man endvidere finde
  nogle forslag til TWM-opsætning af Keith Packard, som er en af de
  mest kompetente X11 programmører. Sammen med de klassiske X11
  programmer viser TWM hvordan et ægte modulært grafisk interface kan
  opbygges. Den kan samarbejde med xdm(1) og xsm(1) og dermed udbygges
  til et komplet system. Det er forfriskende at se et design, der i
  den grad overlader farver og fonte til brugeren, som kan bruge
  dekorationer, der ikke er firkantede og som ikke ligner noget andet
  kendt system.
 </para>

 <para>
  Bruger man Red Hat, Gentoo eller Debian (og sikkert mange flere) er
  denne undervurderede windowsmanager klar til brug.
 </para>

 <para>
  Den anvendes endvidere som reserve GUI for fail-safe operation i
  mange Linux/BDS distributioner, og også i kommercielle produkter
  (SUN fx.)
 </para>

 <para>
  For dem, som er hooked på TWM er der varianter med virtuelle
  skriveborde og 3D-dekorationer.  En kendt anke ved TWM er at den
  bruger Athena widgets, et 2D-widget-set, der oprindeligt blot var
  ment som en midlertidig hurtig løsning. Man kan finde mange
  screenshots på nettet, men få af dem bruger TWM's mulighed for at
  man kan indsætte sine egne ikoner i vinduesbjælkerne.
 </para>

 <sect1 id="wm-twm-opstart">
  <title>Opstart af twm</title>

  <para>
   Følgende <filename>.xsession</filename>-fil vil starte twm og sørge
   for at du som minimum har en <command>xterm</command> at arbejde
   i:

<programlisting>
xterm &amp;
twm
</programlisting>
  </para>

  <sect2 id="wm-twm-konfiguration">
   <title>Opsætning af TWM</title>

   <indexterm>
    <primary>opsætning af</primary>
    <secondary>TWM</secondary>
   </indexterm>

   <indexterm>
    <primary>TWM</primary>
    <secondary>system.twmrc</secondary>
   </indexterm>

   <para>
    TWM's opsætning styres enten af den enkelte bruger i dennes
    <filename>.twmrc</filename>-fil eller for alle brugere på systemet
    i <filename>/usr/X11R6/lib/X11/twm/system.twmrc</filename> . Da en
    tom <filename>.twmrc</filename> vil give en TWM uden menuer eller
    noget som helst (den eneste måde den kan afsluttes på er med
    <command>kill</command>) må det anbefales at man tager
    udgangspunkt i en eksisterende <filename>.twmrc</filename>.
   </para>

   <para>
    Med Red Hat følger der en enkel
    <filename>system.twmrc</filename>. Debian har en kraftigt
    modificeret meget interessant
    <filename>system.twmrc</filename>. Man kan læse i twm(1)
    (d.v.s. brugsanvisningen til TWM) om hvordan man yderligere kan
    tilføje funktionalitet til TWM.
   </para>
  </sect2>  <!--  Opsætning af TWM -->

  <sect2 id="wm-twm-brug-af">
   <title>Brug af TWM</title>

   <sect3 id="wm-twm-udseende">
    <title>Udseende</title>

    <figure id="twm-shot1-fig" float="1">
     <title>TWM</title>
     <graphic fileref="twm_shot1.&magic;" scale="60"></graphic>
    </figure>
   </sect3>

   <sect3 id="wm-twm-fokus">
    <title>Fokusopførsel</title>

    <indexterm>
     <primary>vinduesfokus i</primary>
     <secondary>TWM</secondary>
    </indexterm>

    <para>
     I TWM følger fokus musen strengt sådan at hvis musen ikke er i et
     vindue har det vindue ikke fokus. Fokus kan låses fast på et
     vindue med en funktion i baggrundsmenuen.
    </para>

    <para>
     Når man klikker på baggrunden og vælger menupunktet fokus, får
     man en lille kugle som musemarkør. Den kan man nu flytte hen på
     det vindue, som skal have fast fokus, klikke - og så er fokus
     låst her indtil man bruger den samme funktion igen.
    </para>

    <para>
     Man kan konfigurere twm, så at den har en museklik-funktion,
     som hæver et vindue og holder dets fokus, og en anden, som
     gør det muligt at få et eller andet til at ske, når man
     klikker på rammen. I .twmrc filen kan fx. definere en
     funktion, focus-raise, som udføres, når man klikker med
     shift-Museknap1:
    </para>
    <programlisting>
     Function "focus-raise" { f.focus f.raise }
     Button1 = s : window :  f.function "focus-raise"
     Function "focus-raise-or-move" { f.focus f.raise f.deltastop f.move }
     Button1 = : frame : f.function "focus-raise-or-move"
    </programlisting>

    <para>
     Man kan nu shift-klikke hvilket som helst sted i vinduet
     (også titlebar og ramme) og få vinduet op og i fokus. Da
     funktionen blokerer for andre funktioner, skal man nok ikke
     bruge museknap1 uden shift! De to sidste linier sørger for,
     at hvis man klikker på rammen får vinduet fokus og kommer
     i forgrunden, og man kan flytte det.
     <command>f.deltastop</command>
     svarer til en if-sætning: Hvis man ikke flytter mere end
     <emphasis>deltastop</emphasis> pixels skal twm ikke udføre
     resten at linien. Man bør i øvrigt definere en lidt bredere
     ramme, hvis man bruger den funktion.
    </para>

    <para>
     Som standard hæves et vindue ikke (dvs. det bliver bagved andre
     vinduer) selv om det får fokus. Dette kan ændres for udvalgte
     vinduer, ved at indsætte følgende linje i sin
     <filename>.twmrc</filename>:

<programlisting>
AutoRaise { "XTerm" "emacs" }
</programlisting>

     vil alle vinduer der hedder "XTerm" (eller er af klassen "XTerm"
     - herunder alle der hedder "xterm") blive hævet når de får fokus.
     Samme for Emacs. Der er ingen måde at gøre dette til
     standardopførslen for alle vinduer. Og der er desværre
     heller ikke nogen måde at forbyde programmerne at forlange
     et forgrundsvindue, fx. OpenOffice smækker et vindue op
     i synet på den arbejdende programmør uden at man kan
     beskytte sig, og derved kan der ryge nogle tasteslag ind
     i et forkert vindue.
    </para>

    <para>
     Man kan interaktivt give denne egenskab til enkelte vinduer med
     funktionen <literal>f.autoraise</literal> der er beskrevet
     nærmere i brugsanvisningen.  De fleste TWM-brugere opfatter ikke
     dette som ønskeligt og det er ikke med i Red Hats
     standardopsætning af TWM.
    </para>
   </sect3>    <!--   Fokusopførsel -->

   <sect3 id="wm-twm-tastatur">
    <title>Tastaturbindinger</title>

    <indexterm>
     <primary>genvejstaster i</primary>
     <secondary>TWM</secondary>
    </indexterm>

    <para>
     Som standard er der ingen tastaturbindinger i TWM.  Man kan sætte
     TWM til at kunne styres fra tastaturet uden at det hindrer at man
     stadig kan bruge musen.
    </para>

    <para>
     Der er forslag til hvordan man kan gøre det i brugsanvisningen.
    </para>
   </sect3>    <!--   Tastaturbindinger -->

   <sect3 id="wm-twm-menuer">
    <title>Menuers opførsel</title>

    <indexterm>
     <primary>menuer i</primary>
     <secondary>TWM</secondary>
    </indexterm>

    <para>
     Almindeligvis vil man sætte sin TWM op så der kommer en menu frem
     når man trykker på en museknap ude på baggrunden.  Sådan en menu
     bliver kun på skærmen så længe man holder den pågældende museknap
     nede. Det vil sige at man trykker museknappen ned, trækker sig
     frem til det menupunkt man er interesseret i og slipper
     museknappen der.
    </para>
   </sect3> <!-- Menuers opførsel -->

   <sect3 id="wm-twm-vinduer">
    <title>Vinduer</title>

    <indexterm>
     <primary>vindueshåndtering i</primary>
     <secondary>TWM</secondary>
    </indexterm>

    <para>
     Man flytter et vindue ved at trække i titelbjælken (som man
     kender det fra de fleste andre windowmanagere). Man ændrer
     størrelsen på et vindue ved at pege med musen på ikonet øverst
     til højre, trykke venstre museknap ned og trække musen udover den
     (eller de) kanter man vil flytte.
    </para>
   </sect3>  <!--  Vinduer  -->

   <sect3 id="wm-twm-placering-vinduer">
    <title>Placering af vinduer</title>

    <para>
     Hvis man ikke giver et <literal>-geometry</literal>-argument til
     et program der åbner et vindue, vil TWM præsentere dig for en
     ramme i den størrelse vinduet vil få som du så skal placere. Når
     du har flyttet rammen det rigtige sted hen, kan man enten placere
     vinduet der ved at trykke på venstre museknap. Alternativet er at
     man kan justere dets størrelse ved at trykke midterste museknap
     nede og trække udover de kanter man gerne vil flytte, når man så
     slipper museknappen placeres vinduet. Hvis man gerne vil være fri
     for at skulle placere alle vinduer manuelt, kan man sætte twm til
     at placere alle nye vinduer tilfældigt med følgende linje i sin
     <filename>.twmrc</filename>:

<programlisting>
RandomPlacement
</programlisting>
    </para>
   </sect3>
   <sect3 id="wm-fed-twm">
   <title>Hvad er det fede ved twm?</title>
     
    <para>
     Twm er gennemført minimalistisk. Den er tænkt til at
     samarbejde med xsm, X-session manager, der kan registrere,
     hvad der er af vinduer, når man logger ud, og med xdm, xsm
     og twm kan man såmænd få en udmærket flad klient til X11.
     Det fedeste ved twm er, at den ikke belaster grafik/CPU og
     giver god performance med remote X11.
    </para>

   </sect3>
  </sect2>
 </sect1>
</chapter>
