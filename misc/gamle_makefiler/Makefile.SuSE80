#
# Vi kræver SGML DocBook 3.1
# ImageMagick skal installeres
# tidy og Perl modulet Image::Size er ønskelige
##
#
# Peter Toft <pto@sslug.dk> 
# $Id$

# Lokalt katalog (fuld sti)

locdirname:=$(shell pwd)

# Kort navn
targetshortname:=$(notdir $(locdirname))

# Med linuxbog- foran
targetname:=linuxbog-$(notdir $(locdirname))

# version
version:=$(shell grep -A2 "<listitem>" apprevhist.sgml | head -n 2 | tail -n 1 | cut -d' ' -f2 > version.sgml; cat version.sgml)

# dato
dato:=$(shell date +%d/%m-%Y> dato.sgml; cat dato.sgml)

# Her er en liste af sgml-filer der ændres automatisk
badsgmlfiles=dato.sgml version.sgml magic.sgml stikord.sgml bogoversigt.sgml ophavsret.sgml

# Her er  en liste af alle sgml
allesgmlfiles:=$(wildcard *.sgml *.xml)

# Her er en liste af sgml-filer der skal checkes
sgmlfiler:=$(filter-out $(badsgmlfiles),$(allesgmlfiles))

# Her er  en liste af alle eksempler
alleeksfiles:=$(wildcard eksempler/*)

# Lokal Makefile ?
lokmake:=$(wildcard Makefile_local)

# Her er en liste af sgml-filer der skal checkes
eksfiler:=$(filter-out eksempler/CVS,$(alleeksfiles))

# Har vi Perl-modulet Image::Size installeret
imagesize:=$(wildcard /usr/lib/perl5/site_perl/5.005/Image/Size.pm)

# Har vi Plucker inde
plucker:=$(wildcard /usr/bin/plucker-build)

# Har vi tidy installeret?
tidy:=$(wildcard /usr/bin/tidy)

# Image Magick convert
ImageMagickconvert:=$(firstword $(wildcard /usr/bin/convert /usr/X11R6/bin/convert))

# her er det der skal laves
all: start ekstra html pspdf palmpilot sgml eksempelbackup stop

start:
	@echo "-------------------------------------------"
	@echo "Starter oversættelser af $(targetshortname)"
	@echo "-------------------------------------------"
	@echo Version er $(version)
	@echo Dato sat til $(dato)

stop:
	@echo "-------------------------------------------"
	@echo "Slut på $(targetshortname) $(version)      "
	@echo "-------------------------------------------"
	@echo 

version:
	@echo $(targetshortname) $(version)

ekstra:
	make -f Makefile_local

# Build the sgml package
sgml: $(targetname)-$(version).sgml.tar.gz
$(targetname)-$(version).sgml.tar.gz: $(sgmlfiler)
	(cd ..;tar cvzf $(targetshortname)/$(targetname)-$(version).sgml.tar.gz $(targetshortname)/*.{sgml,xml} $(targetshortname)/linuxbog.css $(targetshortname)/Makefile $(targetshortname)/collateindex.pl)
	(cd ..;ln -sf $(targetshortname)/$(targetname)-$(version).sgml.tar.gz $(targetshortname)/$(targetname).sgml.tar.gz)
	(cd ..;zip $(targetshortname)/$(targetname)-$(version).sgml.zip -r $(targetshortname)/*.{sgml,xml} $(targetshortname)/linuxbog.css $(targetshortname)/Makefile $(targetshortname)/collateindex.pl )

# Build the Palm Pilot Package
palmpilot: $(targetname)-$(version).palm.zip
$(targetname)-$(version).palm.zip: $(sgmlfiler)
ifneq   ("$(plucker)","")
	rm -f $(targetname)-$(version).palm.zip $(targetname)-$(version).palm.tar.gz
	$(MAKE) html
	rm -f palm/*.prc palm/*.pdb
	(cd palm;plucker-build -v -P . -f $(targetname))
	cp ../misc/*.prc palm
	cp ../misc/*.pdb palm
	cp ../misc/gpl.txt palm
	cp ../misc/plucker.txt palm
	(zip $(targetname)-$(version).palm.zip palm/*.prc palm/*.pdb palm/*txt )
else
	echo "Du bør installere plucker for at kunne lave palm-udgaven"
endif

pakhtml: 
	echo %define buildname $(targetshortname) > bog/$(targetname).spec
	echo Name: linuxbog-$(targetshortname) >> bog/$(targetname).spec
	echo Summary: `grep -A2 "<title>" indhold.sgml | head -n 1 | cut -d '>' -f 2 | cut -d '<' -f 1` >> bog/$(targetname).spec
	echo Version: `cat version.sgml` >> bog/$(targetname).spec
	echo Release: 1mdk >>  bog/$(targetname).spec
	cat linuxbog.spec >> bog/$(targetname).spec
	mv bog $(targetshortname)
	(cd ..;tar cvzf $(targetshortname)/$(targetname)-$(version).html.tar.gz $(targetshortname)/$(targetshortname) $(targetshortname)/eksempler  )
	(cd ..;zip $(targetshortname)/$(targetname)-$(version)_html.zip -r $(targetshortname)/$(targetshortname) $(targetshortname)/eksempler)
	(cd ..;tar cvzf $(targetshortname)/$(targetname)-$(version).html-ub.tar.gz $(targetshortname)/$(targetshortname)/*.html $(targetshortname)/$(targetshortname)/*.css $(targetshortname)/eksempler   )
	mv $(targetshortname) bog 
	mv images $(targetshortname)_images
	(cd ..;tar cvzf  $(targetshortname)/$(targetname)-$(version).png.tar.gz $(targetshortname)/$(targetshortname)_images/ )
	mv $(targetshortname)_images images 
	@echo "Done HTML pakning (pakhtml)"
	@echo ""

# Build the html
html: bog/index.html 
bog/index.html: $(sgmlfiler) 
	@echo "Target er HTML i" $(targetshortname)/bog
	rm -rf $(targetname)*
	rm -rf tempdir stikord.sgml magic.sgml $(targetname)-*.html.tar.gz bog
	echo '<!ENTITY magic "png">' > magic.sgml
	mkdir tempdir
	perl ./collateindex.pl -s Symboler -t Stikordsregister -g -i stikord -N -o stikord.sgml
	db2html -j "-V html-index" bog.sgml
	perl ./collateindex.pl -s Symboler -t Stikordsregister -g -i stikord  -o stikord.sgml bog/HTML.index
	rm -rf bog/
	db2html bog.sgml
	cp linuxbog.css bog
	cp images/*.png bog
ifeq	($(shell perl -e 'use Image::Size; print "1"' 2> /dev/null), 1)
	(cd bog;perl ../../misc/insertimagesize)
else
	@echo "Du bør installere Perl-modulet Image:Size"
endif
ifeq	($(shell if which tidy >/dev/null 2>&1; then echo -n 1; fi;), 1)
	(cd bog;tidy -latin1 -f err.txt -imu *html;rm -f err.txt)
else
	@echo "Du bør installere tidy"
endif
	(cd bog;rm -f apprevhist.html;ln -sf *apprevhist.html apprevhist.html)
	make pakhtml
	rm -rf tempdir 
	@echo "Done HTML (html)"
	@echo ""

enhtmlfil: bog/enfil.html
bog/enfil.html: $(sgmlfiler)
	@echo "Target er HTML i" $(targetshortname)/bog1
	@rm -rf tempdir stikord.sgml magic.sgml $(targetname)-*.html.tar.gz bog1
	@echo '<!ENTITY magic "png">' > magic.sgml
	mkdir bog1
	perl ./collateindex.pl -s Symboler  -t Stikordsregister -g -i stikord -N -o stikord.sgml
	touch test.inc
	cp *.{sgml,xml,docbook} bog1
	cp *.inc bog1
	rm -f test.inc
	(cd bog1; jade -t sgml -ihtml -d $(cygnus)\#html -V html-index bog.sgml)
	(cd bog1; perl ./collateindex.pl -s Symboler -t Stikordsregister  -g -i stikord  -o stikord.sgml HTML.index)
	(cd bog1; jade -t sgml -ihtml -d /usr/lib/sgml/stylesheets/cygnus-both.dsl\#html -V nochunks bog.sgml > index.html)
	cp linuxbog.css bog1
#	cp images/*.png bog1
ifeq	($(shell perl -e 'use Image::Size; print "1"' 2> /dev/null), 1)
	(cd bog1;perl ../../misc/insertimagesize)
else
	echo "TIP: Du bør overveje at installere Perl-modulet Image:Size så HTML-filerne kan rettes til"
endif
ifeq	($(shell if which tidy >/dev/null 2>&1; then echo -n 1; fi;), 1)
	(cd bog1;tidy -f err.txt -imu *html;rm -f err.txt)
else
	echo "TIP: Du bør overveje at installere tidy så HTML filerne kan rettes til mht. syntaks-fejl"
endif
	cp bog1/index.html bog/enfil.html
	rm -rf bog1

# Build pdf package.
pspdf: $(targetname)-$(version)_pdf.zip
$(targetname)-$(version)_pdf.zip: $(sgmlfiler)
	rm -rf bogps bogpdf stikord.sgml tempdir magic.sgml
	rm -f $(targetname)-*.pdf*    
	rm -f $(targetname)-*_pdf.zip
	rm -f $(targetname)-*.ps.gz              
	rm -f $(targetname)-*.ps              
	mkdir tempdir

	echo '<!ENTITY magic "eps">' > magic.sgml
	perl ./collateindex.pl  -s Symboler -t Stikordsregister -g -i stikord -N -o stikord.sgml
	touch test.inc
	cp *.{sgml,xml,docbook} tempdir
	cp *.inc tempdir
	rm -f test.inc
	db2pdf -j "-V html-index" bog.sgml
	perl ./collateindex.pl -s Symboler -t Stikordsregister  -g -i stikord  -o stikord.sgml bog/HTML.index

	@echo "Target er" $(targetname)_pdf.zip
	echo '<!ENTITY magic "png">' > magic.sgml
	mkdir bogpdf
	touch test.inc
	cp *.inc bogpdf
	cp *.{sgml,xml,docbook} bogpdf
	rm -f test.inc
	rm -f $(targetname)-*.pdf
	cp images/*.png bogpdf
	(cd bogpdf; perl ../../httpsplit.pl *.{sgml,xml})
#	(cd bogpdf; jade -t tex -d $(cygnus)\#print -o bogpre.tex bog.sgml )
#	(cd bogpdf; cat bogpre.tex | sed 's#--#-{}-{}#g' > bog.tex)
#	(cd bogpdf; cat bogpre.tex > bog.tex)
#	(cd bogpdf; pdfjadetex bog;pdfjadetex bog;pdfjadetex bog ) > /dev/null
	(cd bogpdf; db2pdf bog.sgml )
	mv bogpdf/bog.pdf $(targetname)-$(version).pdf
	pdfinfo $(targetname)-$(version).pdf | grep Pages: | cut -d':' -f2 > sideantal.txt
	zip $(targetname)-$(version)_pdf.zip $(targetname)-$(version).pdf
	@echo "Done PDF (pspdf)"
	@echo ""

	echo '<!ENTITY magic "eps">' > magic.sgml
	mkdir bogps
	find images/*.png | sed 's/.png//' | sed 's=images/==' | xargs -i% $(ImageMagickconvert) -antialias images/%.png eps2:bogps/%.eps
	echo '<!ENTITY magic "eps">' > magic.sgml
	touch test.inc	
	cp *.inc bogps
	cp *.{sgml,xml,docbook} bogps
	rm -f test.inc
	(cd bogps; perl ../../httpsplit.pl *.{sgml,xml})
	(cd bogps; db2ps bog.sgml )
	mv bogps/bog.ps $(targetname)-$(version).ps
	gzip -9 $(targetname)-$(version).ps
	@echo "Done PS (pspdf)"
	@echo ""

	rm -f $(targetname)-$(version).pdf
#	rm -f $(targetname)-*.ps              
	rm -rf bogps bogpdf tempdir


test:
	echo $(eksfiler)

eksempelbackup:  $(targetname)-$(version)_eksempler.tar.gz
$(targetname)-$(version)_eksempler.tar.gz : $(eksfiler)
ifneq    ("$(eksfiler)","")
	rm -f $(targetname)-$(version)_eksempler.tar.gz  
	touch $(targetname)-$(version)_eksempler.tar
	cat dato.sgml > eksempler/BACKUPDATO
	(cd ..;tar cvf  $(targetshortname)/$(targetname)-$(version)_eksempler.tar $(targetshortname)/eksempler/BACKUPDATO)
	rm -f eksempler/BACKUPDATO
	find eksempler -type f | grep -v "/CVS/" | xargs -l1 -i= -r tar rvf $(targetname)-$(version)_eksempler.tar =
	gzip -9 $(targetname)-$(version)_eksempler.tar
else
	@echo "Bogen" $(targetname) "har ikke nogen eksempler";
endif


clean:
	@echo clean $(targetshortname)
	@rm -rf dato.sgml version.sgml magic.sgml DBTOHTML_OUTPUT_DIR* bog.junk bog stikord.sgml tempdir bogps bogpdf $(targetname)*  palm/*.prc palm/*.pdb sideantal.txt *~*~ .#*[0-9] db2html.*
	
ifeq ($(lokmake),Makefile_local)
	echo X $(lokmake) X
	@make -f Makefile_local clean
else
	echo "Ingen lokal Makefile"
endif
	@echo "Færdig med clean $(targetshortname)"

