<!-- $Id$ -->

<appendix id="app-new-C99">
<title>Nyt i C99</title>

<sect1 id="sect-C99-kommentar">
<title>Uddrag af nyheder i ANSI revisionen fra 1999.</title>

<para>
Den følgende liste over nyheder i ANSI C omfatter både ændringer
af præprocessing, af oversætter-krav og biblioteks-krav. Desværre
er jeg i skrivende stund ikke i stand til at kommentere alle
punkter. Hvad menes der for eksempel med "pointere med
begrænsninger"?
</para>

<para>
De vigtigste ændringer er:
</para>
<itemizedlist mark="bullet">

<listitem><para>
Implicit integer er afskaffet. En variabel skal erklæres med
angivelse af type.
</para></listitem>

<listitem><para>
Funktioner <emphasis> skal </emphasis> erklæres med prototype,
inden de anvendes. En ukendt funktion antages ikke at have int
som return type.
</para></listitem>

<listitem><para>
Inline funktioner skal supporteres af oversætteren (det kan GNU-C
allerede).
</para></listitem>

<listitem><para>
Så vidt jeg kan forstå vil der også være begrænset support af
typecheck i præprocessor aritmetik. Det skal også kunne
specificeres, om præprocessor aritmetik er signed eller unsigned.
</para></listitem>

<listitem><para>
Kommentarer som i C++ og simula: // dette er en kommentar.
</para></listitem>
</itemizedlist>

<para>
I bedste open source stil efterlyser jeg bidrag til uddybelse af
disse punkter.
</para>

<para>
Listen er hentet via http://www.ansi.org. Også her
http://www.dkuug.dk/JTC1/SC22/WG14 kan man finde oplysninger.
Men links har det med at blive gamle. Brug eventuelt
www.google.com til at finde nye links til ANSI-C standard.
</para>
</sect1>

<sect1>
<title>Liste i tilfældig rækkefølge</title>

<itemizedlist mark="bullet"> 
<listitem><para>
pointere med begrænsninger
</para></listitem>
<listitem><para>
variabel længde arrays
</para></listitem>
<listitem><para>
fleksible array medlemmer
</para></listitem>
<listitem><para>
support af complex og imaginære tal (header fil &lt;complex.h>)
</para></listitem>
<listitem><para>
type generiske matematik macroer &lt;tgmath.h>
</para></listitem>
<listitem><para>
long long type og library funktioner for denne
</para></listitem>
<listitem><para>
forøgelse af grænser for oversættelse
</para></listitem>
<listitem><para>
afskaffelse af implicit integer reglen
</para></listitem>
<listitem><para>
vscanf funktionsfamilien
</para></listitem>
<listitem><para>
pålidelig integer division
</para></listitem>
<listitem><para>
universelle navne til det anvendte tegnsæt
</para></listitem>
<listitem><para>
længere variabelnavne
</para></listitem>
<listitem><para>
binære floating point literals og printf/scanf specifikation af konvertering
</para></listitem>
<listitem><para>
sammensatte stringkonstanter
</para></listitem>
<listitem><para>
designated initializers
</para></listitem>
<listitem><para>
// slash-slash kommentarer
</para></listitem>
<listitem><para>
udvidede heltals typer og &lt;inttypes.h> og nu &lt;stdint.h>
</para></listitem>
<listitem><para>
afskaffelse af regel om implicitte funktions erklæringer.
</para></listitem>
<listitem><para>
præprocessor aritmetik kan gøres i signed/unsigned integers.
</para></listitem>
<listitem><para>
blanding af erklæringer og kode (erklæring af variable, hvor man
har brug for dem)
</para></listitem>
<listitem><para>
heltal (integer) konstant type - regler
</para></listitem>
<listitem><para>
ændringer af type konvertering (integer promotion)
</para></listitem>
<listitem><para>
vararg makro'er
</para></listitem>
<listitem><para>
tilføjelse af flere matematik library funktioner (&lt;math.h>)
</para></listitem>
<listitem><para>
decimalbrøk miljø tilgang (for overflow? &lt;fenv.h>)
</para></listitem>
<listitem><para>
IEC 559 (IEEE aritmetik) support
</para></listitem>
<listitem><para>
udvidet time structure (struct tmx) og library funktioner
</para></listitem>
<listitem><para>
efterstillet komma tilladt i enum erklæringer
</para></listitem>
<listitem><para>
%lf konverterings specifikation er tilladt i printf
</para></listitem>
<listitem><para>
inline funktioner
</para></listitem>
<listitem><para>
snprintf funktionsfamilien
</para></listitem>
<listitem><para>
boolean type (&lt;stdbool.h>)
</para></listitem>
<listitem><para>
idempotent type qualifiers
</para></listitem>
<listitem><para>
tomme makro arguments
</para></listitem>
<listitem><para>
ny struct type kompatibilitets regler (tag compatibility)
</para></listitem>
<listitem><para>
_Pragma præprocessor operator
</para></listitem>
<listitem><para>
standard pragma'er
</para></listitem>
<listitem><para>
__func__ predefineret nøgle-ord
</para></listitem>
<listitem><para>
VA_COPY makro
</para></listitem>
<listitem><para>
tilføjelse af flere strftime konverterings specifikationer
</para></listitem>
<listitem><para>
LIA compatibility annex
</para></listitem>
<listitem><para>
depreciering (afskaffelse på længere sigt) af ungetc i starten af
binær fil
</para></listitem>
<listitem><para>
remove deprecation of aliased array parameters
annullering af depreciering af alias-ede array parametre
</para></listitem>
</itemizedlist>
</sect1>


<sect1 id="sect-C93">
<title> Nyt i C93 (AM1)</title>

<itemizedlist mark="bullet">
<listitem><para>
begrænset support af ISO-0646 &lt;iso646.h> (bemærk at der
arbejdes på højtryk på unicode support i Gnome projektet,
oversætters anmærkning).
</para></listitem>

<listitem><para>
wide character d.v.s. 16-bit character support og library
(&lt;wchar.h> and &lt;wctype.h>)
</para></listitem>

</itemizedlist>

</sect1>
</appendix>

