<chapter id="portaler">
<title>Administration af web-indhold</title>

<para>
Der er flere muligheder for at lave web-portaler med Linux,
dvs. systemer som hjælper med at få en infrastruktur op omkring det
indhold, man selv skal levere. phpNuke er en mulighed, Zope en anden
og der er flere andre.
</para>


<sect1 id="zope">
<title>Zope</title>
<para>
Zope er et Open Source <emphasis>Content Management System</emphasis>.
Det bruges til - på en let og overskuelig måde - at opbygge et
website. Zope har sit eget komplekse adgangshieraki, som gør det
overskueligt at lave diverse services på sit site som kun en udvalgt
skare har adgang til.  Zope er bygget op over forskellige
<emphasis>Products</emphasis> som man kan importere ind i sin
Zope. Disse produkter varierer lige fra forskellige databaseforbindelser
til chats, gæstebøger og kalendere. Alt sammen noget du
kan bruge på dit site.  Zope er skrevet i Python. Internt bruges
markup-sproget DTML som man kan bruge til at manipulere dynamiske data
med på forskellige måder. Man kan dog også lave sine egne python
scripts hvis man hellere vil dette. De implementeres lige så let som
DTML dokumenter.  Zope har en indbygget webserver (ZServer) som man
kan "nøjes" med at bruge hvis man ikke bruger f.eks. Apache til
noget. Skal den køre parallelt med Apache skal der tilføjes lidt til
httpd.conf men det kan sagtens lade sig gøre.  Hvis du vil vide mere
om Zope, henvises til <ulink
url="http://www.zope.org">http://www.zope.org</ulink>.
</para>

<para>
En af Zope's største styrker er produktet CMF
(Content Management Framework). Dette kan bl.a. bruges til at bygge en
portal. Med CMF er det nemt at styre brugere. CMF sørger for at holde
indhold, data og kode adskilt. Har en indbygget skin-funktionalitet
som man kan bruge til at lave forskellige skins til sit site, lave sit
site flersproget osv. Læs mere på <ulink
url="http://cmf.zope.org">http://cmf.zope.org</ulink>
</para>

<sect2 id="zope-installation">
<title>Installation af Zope</title>
<para>
Start med at hente tar.gz filen fra <ulink
url="http://www.zope.org">http://www.zope.org</ulink>. Følgende skal
udføres som root: Udpak tarball'en i
<filename>/usr/local</filename>. Skift katalog til Zope-xx/ (xx er
versionsnummeret på Zope).  Kør filen: <command>./install</command>,
(denne skulle gerne være eksekverbar - ellers gør det med en
<command>chmod +x install</command>).  Nu oversættes et start og et
stop script til Zope.  Der vil også blive vist et admin password -
skriv dette ned!  Den basale Zope er nu installeret!
</para>

<FIGURE ID="zope-fig" FLOAT="1">
<TITLE>Zope i aktion</TITLE>
<GRAPHIC FILEREF="zope.&magic;"  SCALE="40"></GRAPHIC>
</FIGURE>
</sect2>

<sect2 id="zope-mysql">
<title>Zope koblet til MySQL</title>
<para>
Lad os nu se på hvordan Zope kobles til MySQL.
</para>

<sect3 id="zope-mysql-data">
<title>Få Zope til at bruge MySQL i stedet for Zope's egen Z Gadfly database</title>

<para>
Zope har sin egen indbyggede databasei (Z Gadfly), og er dit behov for datalagring
ikke særlig stort, kan du sagtens "nøjes" med denne. Den har dog en
øvre negrænsning på et par gigabyte. Eftersom der gemmes en del i
denne database i forvejen (bl.a. brugerdata) er dette nok ikke den
optimale løsning hvis du skal lave et stort site med mange brugere. Så
er der lavet forskellige adaptorere til de mest brugte databaser. Til
MySQL findes produktet ZMySQLDA. Dette hentes på <ulink
url="http://www.zope.org/Products/Members/MikeP/ZMySQLDA">http://www.zope.org/Products/Members/MikeP/ZMySQLDA</ulink>. Produktet
kræver at du har MySQL-misc, MySQL-devel og MySQL-python installeret
(alle disse kan hentes fra <ulink
url="http://www.mysql.com/download/">http://www.mysql.com/download/</ulink>).
Udpak tarball'en i dit Zope-dir og skift katalog til til
<filename>lib/python/Products/ZMySQLDA/src</filename>. Nu skal du
kompilere en extension så python kan connecte til MySQL. Skriv:
</para>

<screen>
make -f Makefile.pre.in boot 
make
</screen>

<para>
Test at modulet virker i python ved at starty python (dette gøres med
kommandoen "python") og skriv: <command>import MySQL</command>. Får du
ingen fejl, virker modulet. Til slut skal du bare kopiere
<filename>MySQLmodule.so</filename> et katalog-niveau op (i dit <filename>ZMySQLDA</filename>-katalog) og genstarte din Zope.
Du kan også finde adaptere til PostgreSQL, Oracle, MS SQL etc.
</para>
</sect3>

<sect3 id="zope-mysql-vis">
<title>Vise MySQL data i Zope</title>
<para>
Sådan henter du data fra f.eks. en MySQL database og viser dem.
Dette gøres ret enkelt i Zope. Gå ned i din rodfolder og lav et ZMySQLDA
objekt. Udfyld formen med de rette de data og tilføj den. Tilføj nu en ZSQL
Method. "Arguments"-feltet udfylder du med udvælgelseskriterier til
query-strengen. Hvis du nu har en tabel i din database der hedder Medarbejdere.
Den har følgende kolonner: Navn, Afdeling, Alder. Du vil gerne liste alle
medarbejdere der er født i 1980. Fra det DTML-Document der kalder din ZSQL
Method har du adgang til variablen alder. Derfor kan du i din "Argument"-liste
skrive alder. Din query-streng skal så se ud som følger: <literal>SELECT * FROM
Medarbejdere WHERE ALDER=&lt;dtml-sqlvar alder
type=string&gt;</literal>.
</para>

<para>
Fra dit DTML Document kalder du din ZSQL Method på følgende måde:
</para>

<screen>
&lt;dtml-in expr="MinSQLMethod(alder=alder)"&gt;
        Navn: &lt;dtml-var Navn&gt;&lt;BR&gt;
        Afdeling: &lt;dtml-var Afdeling&gt;&lt;BR&gt;&lt;BR&gt;
&lt;/dtml-in&gt;
</screen>

<para>
Forklaring: &lt;dtml-in&gt; er en nem måde at iterere gennem
f.eks. SQL resultater. Den fungerer på samme måde som f.eks. en
for-løkke i PHP.  For at være sikker på at alder optræder i
REQUEST-objektet, kalder man sin ZSQL-Method med alder-variablen.
&lt;dtml-var&gt;-tagsene indsætter variablerne der returneres fra
ZSQL-metoden.
</para>
</sect3>

<sect3 id="andre-zope">
<title>Andre Zope-produkter</title>
<para>
Som tidligere nævnt findes der mange forskellige produkter til Zope,
som er udviklet af andre Zope-brugere. Det smarte ved at bruge disse
produkter er at i stedet for selv at lave f.eks. en chat, kan man
hente en fra <ulink url="http://www.zope.org/Products">http://www.zope.org/Products</ulink>.
</para>

<para>
Det er ret nemt at installere disse produkter. Der findes to måder de
fleste produkter installeres på. (Andre måder kan forekomme - læs
derfor altid installations vejledningen). Filer er som regel pakket
som tar.gz, eller også har den en <filename>.zexp</filename>
extension. I det første tilfælde skal filen udpakkes så det pakkede
dir ender med at ligge i
<filename>/usr/local/Zope-xx/lib/python/Products/</filename>.
Herefter genstartes Zope og dit nye produkt er klar til brug. Ender
filen derimod på <filename>.zexp</filename> skal filen ligges i
<filename>/usr/local/Zope-xx/import</filename>. Du skal så gå ind i
Zope's administration interface i Control Panel - Products og klikke
på "import/export"-knappen. En ny side kommer nu frem. I
"import"-tekstfeltet skriver du navnet på den fil du netop har
placeret i import-dir'et og klikker på "import"-knappen. Produktet vil
nu være synligt i listen over produkter (Control Panel - Products).
</para>

<para>
Du bruger produkterne ved at tilføje dem i de relevante mapper i dit
administrations interface.
</para>
</sect3>
</sect2>
</sect1>

<sect1 id="phpnuke">
<title>phpNuke</title>

<para>
Se <ulink
url="http://www.phpnuke.org">http://www.phpnuke.org</ulink>. More to follow.
</para>
</sect1>
</chapter>
