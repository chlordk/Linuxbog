<?xml encoding="UTF-8" ?>

<sect1 id="sprog-bourne">
 <title>Bourne shell</title>

 <indexterm>
  <primary>Bourne shell</primary>
 </indexterm>

 <indexterm>
  <primary>fortolkede sprog</primary><secondary>Bourne shell</secondary>
 </indexterm>

 <indexterm>
  <primary>imperative sprog</primary><secondary>Bourne shell</secondary>
 </indexterm>

 <indexterm>
  <primary>Shellscript</primary><secondary>bash</secondary>
 </indexterm>

 <indexterm>
  <primary>Shellscript</primary><secondary>ksh</secondary>
 </indexterm>

 <indexterm>
  <primary>Shellscript</primary><secondary>zsh</secondary>
 </indexterm>

 <para>
  Bourne shell er den oprindelige unixshell som på alle unixsystemer
  er installeret som <command>/bin/sh</command>, som i dag er 
  defineret af Single Unix Specification version 3 (SUSv3, tidligere
  POSIX).
 </para>

 <para>
  Der er flere forskellige shells der implementerer bourne shell. På
  linuxmaskiner vil <command>/bin/sh</command> sædvanligvis være et link
  til bash (Bourne Again Shell) der når den bliver kaldt som
  <command>sh</command> køre i en speciel kompatibilitetsmode. Men også
  ksh (Korn Shell) og zsh implementerer bourne shell, dog med hver deres
  små udvidelser.
 </para>

 <para>
  Shellscripts bliver for det meste brugt til at binde andre programmer
  sammen med. Ud over Bourne shell findes også <link linkend="sprog-csh">chs</link>
  og batch-filer i MS-DOS er egentlig også shellscripts.
 </para> 

 <para>
  De to hovedfordele ved at bruge Bourne shell er:
  <itemizedlist>
   <listitem>
    <para>
     At programmer skrevet i Bourne shell umiddelbart kan køres på alle
     systemer der overholder SUSv3-standarden.
    </para>
   </listitem>
   <listitem>
    <para>
     At Bourne shell som kommandofortolkersprog er velegnet til at
     binde større programmer sammen, så de løser en bestemt opgave.
    </para>
   </listitem>
  </itemizedlist>
 </para>

 <para>
  Medmindre man har meget gode grunde til det, bør man ikke skrive
  programmer der skal deles med andre, i andre kommandofortolkersprog
  end Bourne shell.  Andre kommandofortolkersprog giver i nogle
  tilfælde mulighed for at løse opgaver en smule mere elegant, men det
  er sjældent at det opvejer fordelen ved at det er Bourne shell man
  kan regne med findes på stort set alle styresystemer. Den primære 
  eksistensberettigelse for bash, ksh og zsh er dog i deres egenskaber
  ved interaktiv brug, hvilket er uden for denne bogs emner.
 </para>

 <para>
  De egenskaber der gør sproget nyttigt er:
  <itemizedlist>
   <listitem>
    <para>
     Andre kommandoer indgår naturligt som en integreret del af sproget
     (grep, sort, cat, ...)
    </para>
   </listitem>
   <listitem>
    <para>
      Pipes og redirection gør det let at tage uddata fra kommandoer og
      føre dem videre over i andre kommandoer eller gemme dem i filer.
    </para>
   </listitem>
  </itemizedlist>
  Desuden forøger man sin effektivitet ved brug af komandolinjen ved at
  kunne det bagvedliggende scriptingsprog
 </para>

<!-- Følgende bør være et regulært links, men henvisninger mellem bøgerne
     er vist ikke helt understættet? -->

 <para>
  Bourne shell er så integreret i Unix at sproget bliver gennemgået som
  et selvstændigt afsnit i Friheden til at lære Unix.
 </para>

 <sect2 id="sprog-bourne-brug">
  <title>Brug af Bourne shell</title>

  <para>
   Bourne scripts gemmes normalt i filer. Disse skal så som første linje 
   hedde <literal>#! /bin/sh</literal>. Følgende er et eksempel på et 
   script

<programlisting>
#! /bin/sh

while read p; do 
  echo p
  if [ -z "$p" ] ; then
    exit 0
  fi
done
</programlisting>
  </para>

  <para>
   Bourne scirpts kan også skrives direkte på komandolinjen:

<screen>
<prompt>[tyge@hven ~]$ </prompt><userinput>for i in foo bar baz; do echo $i; done</userinput>
foo
bar
baz
<prompt>[tyge@hven ~]$ </prompt>
</screen>

  </para>
 </sect2>

</sect1>
