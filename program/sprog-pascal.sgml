<sect1 ID="sprog-pascal">
 <title>Pascal</title>

 <indexterm>
  <primary>Pascal</primary>
 </indexterm>
 <indexterm>
  <primary>imperative sprog</primary><secondary>Pascal</secondary>
 </indexterm>
 <indexterm>
  <primary>objektorienterede sprog</primary><secondary>Pascal</secondary>
 </indexterm>
 <indexterm>
  <primary>oversatte sprog</primary><secondary>Pascal</secondary>
 </indexterm>

 <para>
  Pascal blev originalt udviklet som et undervisningssprog engang i
  1960'erne og har siden dannet basis for mange andre sprog så som Modula.
  Pascal kendes nok mest fra Borlands Turbo Pascal (der i øvrigt var en
  yderst mangelfuld implementation) hvor det tilbage i "DOS tiden" var
  grundlag for mange projekter. I Pascal-verdenen er det stadig Borlands
  implementation, nu kaldet "Object Pascal" (også kendt som "Delphi" og
  "Kylix"), der primært benyttes.
 </para>

 <para>
  Der findes i dag en stribe Pascal-oversættere dog vil jeg sige de mest
  interessante er Borlands Kylix og FreePascal som begge understøtter
  "Object Pascal". Den gennerelle opfattelse har været at Pascal ikke er
  meget andet end et undervisningssprog uden nogen reel praktisk udnyttelse.
  Pascals styrke (og problem siger nogle) har været at det har et fungerende
  typesystem, der gør at man ikke bare uden videre kan oversætte mellem
  heltal, pseudo-reelle tal og andre typer. Meget af dette er ændret i
  "Object Pascal".
 </para>

 <para>
  Pascals syntaks er forholdsvis enkel at lære og minder en smule om
  "almindeligt" engelsk. Du har ikke den samme frihed til selv at finde på
  en programmeringsstil, som man for eksempel finder i sprog som C og C++.
  Det kan ses som en ulempe eller som en fordel, men det betyder under alle
  omstændigheder at det er sværere at skrive kode som andre
  Pascal-programmører ikke kan læse. Pascal er velegnet til de fleste
  opgaver, dog undtaget systemprogrammering, og med Kylix er det, sammen med
  Ada, klart et sprog en nybegynder bør overveje, hvis der skal skrives
  procedurale eller objektorienterede programmer.
 </para>

 <para>
  Selve Object Pascal er rimelig veldefineret og understøttes ganske glimrende 
  af Free Pascal, der er dog nogen undtagelser når det kommer til oversættere 
  macroer. Men sådan er det vel med de fleste sprog. "Object Pascal" er dog ikke
  en standard, så det er borland der styre den med hård hånd.
 </para>
 
 <para>
  Kylix levere en RAD(Rapid Application Development) platform som er den samme
  som leves med Delphi på Windows Dette gør det muligt nemt at flytte sine 
  applikationer fra Windows til Linux eller den anden vej rundt. FreePascal
  er en mere traditionel pakke og inkluder ikke nogen IDE, men der findes 
  bindinger til GTK så det er muligt at udvikle grafiske applikationer.
 </para>

 <!--para> 
  Selve den grafiske del og oversætteren i "Kylix" er ikke open source, 
  men RTL'en og tollkit'et CLX(Kylix komponent teknologi) er under GPL. 
  FreePascal har en tilsvarenden RTL der gøre det muligt at oversætte
  næsten alle ikke grafiske Delphi og Kylix programmer. CLX er der imod ikke 
  understøttet af FreePascal og oversætter da heller ikke der under. I FreePascal
  er alle libs under LGPL, hvilket gør det muligt at udvikle lukkede programmer.
  Det er ikke muligt i Kylix da alle libs er under GPL, man man kan dog 
  købe versioner hvor licensen er en anden, der muliggøre udvikling af lukkede programmer.
 </para-->
</sect1>

