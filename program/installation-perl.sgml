<?xml encoding="ISO-8859-1" ?>

<sect1 id="installation-perl">
 <title>Perl</title>

 <indexterm>
  <primary>Perl</primary>
  <secondary>installation af</secondary>
 </indexterm>

 <para>
  På de fleste systemer kommer Perl-fortolkeren i en pakke ved navn
  "perl".
 </para>

<!--

<para>
Indtast følgende program, og gem det som <filename>leg_med_perl.pl</filename>
</para>

<programlisting>
#!/usr/bin/perl

@a="hej";
@b=(@a,"igen");

print "Arrayet \@b har værdierne : @b\n";
printf "Der er %i elementer i \@b\n",$#b+1;

foreach $indeks (@b)
{
  print "Ud kommer $indeks fra arrayet\n";
}

$c = "hvad med at ";
$d = "sætte strenge sammen";
$e = $c.$d;

print "Variablen \$e har værdien : $e\n";
</programlisting>

<para>
Programmet skal gøres kørbart ved at skrive:

<screen>
<prompt>hven% </prompt><userinput>chmod +x leg_med_perl.pl</userinput>
</screen>
</para>

<para>
Udføres programmet ved at skrive <command>./leg_med_perl.pl</command>,
får man følgende:

<screen>
<prompt>hven% </prompt><userinput>./leg_med_perl.pl</userinput>
Arrayet @b har værdierne : hej igen
Der er 2 elementer i @b
Ud kommer hej fra arrayet
Ud kommer igen fra arrayet
Variablen $e har værdien : hvad med at sætte strenge sammen
</screen>
</para>

<para>
Der er selvfølgelig et par små tricks i dette lille program, men det
væsentlige at lægge mærke til er, at der ikke reserveres hukommelse til
nye variable, og det er legende let at arbejde videre med.
</para>

<para>
Hvad med følgende lille søde program, som tager et filnavn som input og
erstatter samtlige forekomster af Microsoft med navnet Linux? Det er et
program, som slet ikke kan laves så elegant og kort som i Perl.
</para>

<programlisting>
#!/usr/bin/perl -i.bak -p
s/Microsoft/Linux/g;
</programlisting>

<para>
Vi kan også nævne, at du kan gøre dine Perl-programmer uafhængig af
Perl-placeringen (om det er <filename>/usr/bin/perl</filename> eller
<filename>/usr/local/bin/perl</filename>) ved at starte følgende tre
liner før selve programmet. Det erstatter så den første "magiske" linje.
</para>

<programlisting>
: # Use perl
eval 'exec perl -S $0 "$@"'
    if $running_under_some_shell;

print "Det virker\n";
</programlisting>

-->
</sect1>
