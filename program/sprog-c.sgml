<?xml encoding="ISO-8859-1" ?>

<sect1 id="sprog-c">
 <title>C</title>

 <indexterm>
  <primary>C</primary>
 </indexterm>

 <indexterm>
  <primary>imperative sprog</primary><secondary>C</secondary>
 </indexterm>

 <indexterm>
  <primary>oversatte sprog</primary><secondary>C</secondary>
 </indexterm>

 <para>
  Programmeringssproget C blev designet til at skrive det oprindelige
  Unix-styresystem i. Det er designet efter at en C-oversætter ikke må
  bruge særlig mange ressourcer. Den oprindelige C-oversætter gennemgik
  for eksempel kildeteksten tre gange og lagrede mellemresultater i
  andre filer for at undgå at bruge for meget hukommelse.
 </para>

 <para>
  På grund af C's oprindelige formål er det i dag god latin - i det mindste
  blandt Unix-tilhængere - at styresystemer skal skrives i C.
  <!--  BeOS:    C++          -->
  <!--  MacOS:   Pascal (+C)  -->
  <!--  Unix:    C            -->
  <!--  Windows: maskinkode   -->
 </para>

 <para>
  Skal et program køre hurtigt, så er C et godt valg.
  <!--  Dybt uenig!!!  -->

  C har dog en syntaks der dels er svær at forstå for begyndere og dels
  kræver stor opmærksomhed hvis man vil undgå fejl i sine programmer.
  Det er for eksempel både op til brugeren at allokere hukommelse til
  datastrukturer og at sørge for at programmet kun skriver inden for
  den allokerede hukommelse. Dette er en egenskab ved C der i tidens
  løb har ledt til mange problematiske programmeringsfejl og
  sikkerhedshuller. Det er samtidig også en af grundene til at det kan
  tage lang tid at finde fejl i C-programmer. C har også en meget
  primitiv repræsentation af strenge. I det hele taget har C et lavt
  abstraktionsniveau og en alvorlig mangel på beskyttelse mod
  utilsigtede oversættelser mellem de forskellige datatyper.
 </para>

 <para>
  <indexterm>
   <primary>ISO-standard</primary><secondary>C</secondary>
  </indexterm>

  Der findes i dag en ISO-standard for programmeringssproget C
  (ISO/IEC 9899:1999), men det er desværre ikke almindeligt at
  C-oversættere udsættes for en formel afprøvning af om de lever
  op til standarden.  GCC har (vistnok) siden version 3.0 levet op
  til ISO-standarden.
 </para>

<!--
 <para>
  <indexterm><primary>GNU C/C++</primary></indexterm>

  GNU C/C++ er en af de allerbedste oversættere på markedet i dag. I
  modsætning til Windows-verdenen er oversætteren ikke låst inde i en
  grafisk brugergrænseflade. Det giver større frihed for den enkelte til at
  sammensætte et personligt udviklingsmiljø - enten grafisk eller
  tekstbaseret. Med lidt tilvænning er det også hurtigt at anvende, specielt
  hvis der skal oversættes megen kildetekst ad gangen. Der er også den store
  fordel,
  at det er meget udbredt inden for Unix-verdenen, hvorfor kildetekst og
  oversættelsesfiler ("makefiles") uden problemer kan flyttes,
  oversættes og køres på andre typer af Unix-systemer.
 </para>

<sect2 id="C-books">
<title>Bøger om C-programmering under Linux</title>

<para>
Der findes mange bøger om C-programmering på Unix-systemer. Vi nøjes
her med at nævne et par stykker, som vi synes er gode:
</para>

<para>
<itemizedlist mark="bullet" spacing="compact">

<listitem>
<para>
Donald Axel <emphasis>Linux - Friheden til at programmere i
C</emphasis>,
<ulink url="http://&linuxbogurl;/">http://&linuxbogurl;/</ulink>
</para>
<para>
En bog om sproget C, som er under aktiv udvikling. 
</para>
</listitem>


<listitem>
<para>
Michael K. Johnson &amp; Erik W. Troan: <emphasis>Linux Application Development</emphasis>,
Addison Wesley, ISBN 0-201-30821-5, 538 sider.
</para>
<para>
En god og klar indføring i C-programmering under Linux. Lidt dyr, men
lækkert udført og med den fordel, at den er skrevet specifikt til
Linux.
</para>
</listitem>

<listitem>
<para>
David A. Curry: <emphasis>Unix Systems Programming</emphasis>,
O'Reilly &amp; Associates, Inc., ISBN 1-56592-163-1, 596 sider.
</para>
<para>
Denne glimrende bog handler i høj grad om de samme emner, som behandles
i den førnævnte Linux Application Development, men kommer lidt mere ud
i hjørnerne af stoffet og beskriver forskellene mellem forskellige
kommercielle Unix-varianter. Linux m alle
forklaringer og eksempler kan bruges uændret under Linux.
</para>
</listitem>

<listitem>
<para>
W. Richard Stevens: <emphasis>Advanced Programming in the Unix Environment</emphasis>,
Addison Wesley, ISBN 0-201-56317-7, 742 sider.
</para>
<para>
Dette er bestemt ikke en begynderbog (hvad titlen heller ikke på nogen
måde kan siges at antyde), men hvis du har lyst til at lære en masse
om, hvordan et Unix-system fungerer og programmeres, kan vi
kun anbefale denne bog på det varmeste. Den kommer gennem alle
relevante emner på en meget grundig måde og binder til sidst i bogen
det hele sammen i et par større eksempler, der gennemgås ganske
grundigt.
</para>
</listitem>

</itemizedlist>
</para>

<para>
Fælles for de tre nævnte bøger er, at de henvender sig til læsere, der
allerede er godt inde i C som programmeringssprog. Hvis du har brug
for at lære C fra grunden, findes der utroligt mange bøger at vælge
mellem. Prøv som udgangspunkt at tage et kig på disse to (den første
er en klassiker):
</para>

<para>
<itemizedlist mark="bullet" spacing="compact">

<listitem>
<para>
Brian W. Kernighan &amp; Dennis M. Ritchie: <emphasis>The C Programming Language (2nd Edition)</emphasis>,
Prentice Hall, ISBN 0-131-10362-8, 272 sider.
</para>
</listitem>

<listitem>
<para>
Steve Oualline: <emphasis>Practical C Programming</emphasis>,
O'Reilly &amp; Associates, Inc., ISBN 1-565-92306-5, 454 sider.
</para>
</listitem>

</itemizedlist>
</para>

<para>
Hvis du har brug for en referencemanual til C, skulle du kigge på denne bog:
</para>

<para>
<itemizedlist mark="bullet" spacing="compact">

<listitem>
<para>
Samuel P. Harbison &amp; Guy L. Steele Jr.: <emphasis>C: A Reference Manual
(Fourth Edition)</emphasis>,
Prentice Hall, ISBN 0-13-326224-3, 462 sider.
</para>
<para>
Det er ikke en lærebog i C-programmering, men derimod en god opslagsbog. Den
har alle detaljer med, også C's standardbibliotek. Bogen beskriver den
internationale ISO-standard (ISO/IEC 9899:1990). Den giver desuden tips til,
hvordan man skriv oversættes uden fejl med enten en
C- eller en C++-oversætter.
</para>
</listitem>

</itemizedlist>
</para>

<para>
Der findes en del bøger om C++-programmering. Følgende er biblen.
</para>

<itemizedlist>
<listitem>
<para>
B. Stoustrup: <emphasis>The C++ Programming Language</emphasis>,
Addison Wesley, ISBN 0-201-70073-5, 1019 sider. (special edition)
</para>
<para>
Dette er ikke en begynderbog, men en god referense bog om alle
C++ sprogets muligheder. Bogen er skrevet af Bjarne Stoustrup,
der opfandt C++ sproget.
</para>
</listitem>
</itemizedlist>


</sect2>
-->

</sect1>
