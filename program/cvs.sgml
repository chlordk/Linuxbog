<!-- $Id$ -->
<chapter id="revision">
<title>Revisionskontrolsystemer</title>
<indexterm><primary>Revisionskontrolsystemer</primary></indexterm>
<indexterm><primary>CVS</primary></indexterm>
<indexterm><primary>Versionsstyring</primary></indexterm>
<para>
Hvad, der burde være i en separat kategori, er revisionskontrol. Til
Linux kan det anbefales at anvende CVS, der står for "Concurrent Version
System". Med CVS kan du styre projekter, som flere personer arbejder
sammen om (også selvom de arbejder på hver sin maskine), og alle kan
nemt se, hvad andre har opdateret til en fælles database, som kan ligge
på en helt anden UNIX-server. Det er meget smart og forbløffende
enkelt at arbejde med i det daglige, hvis man sætter sig ind i det.
</para>

<para>
Hvis du i Emacs indlæser en fil, der er koblet ind i CVS, vil Emacs
automatisk genkende dette og indsætte en ekstra menu, hvorfra du
på enkel vis kan sende tilføjelser til den fælles database (selve
ændringerne skal du ikke selv styre - det klarer Emacs og CVS).
</para>

<para>
I tilfælde af indsættelse af fejlbehæftet kode i CVS kan du på et
vilkårligt tidspunkt gå baglæns i revisionerne og få tidligere kode
ud. Problemer med, at folk retter i samme del af koden kan enten nemt
forhindres (ved at filer, man retter i, låses for andre), eller man kan
bare kode løs - det er nemt at flette kode, og problemer med overlap
mellem egne og andres kodeændringer vil tydeligt blive vist for
brugeren.
</para>

<para>
CVS er gratis og meget nemt at anvende. Der kan læses mere
om CVS på f.eks. 
<ulink url="http://www.sourcegear.com/CVS">http://www.sourcegear.com/CVS</ulink>, 
<ulink url="http://www.sslug.dk/artikler/CVS.html">http://www.sslug.dk/artikler/CVS.html</ulink>
og  f.eks. i den bog i postscript-format, der findes om CVS på <ulink
url="http://www.sslug.dk/artikler">http://www.sslug.dk/artikler</ulink>.
</para>
</chapter>
