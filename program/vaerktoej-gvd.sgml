<sect1 id="vaerktoej-gvd">
 <title>GNU Visual Debugger</title>

 <indexterm>
  <primary>GVD</primary>
 </indexterm>

 <indexterm>
  <primary>GNU Visual Debugger</primary>
 </indexterm>

 <indexterm>
  <primary>fejlfinding</primary>
  <secondary>med GNU Visual Debugger</secondary>
 </indexterm>

 <para>
  Hvis der er en fejl i et program som du ikke kan finde årsagen til, så kan
  et fejlfindingsværktøj som GNU Visual Debugger (GVD) være nyttigt. Fidusen
  er at man kan køre programmet inde fra GVD, der så holder øje med værdien af
  variable, status for forskellige parallelt kørende dele af programmet,
  hvilke funktioner og procedurer der er kaldt og meget andet nyttigt. Ved at
  køre programmet i små skridt, og indimellem tjekke relevante data, kan man
  måske finde tydeligere spor efter fejlen.
 </para>

 <para>
  Hvis GVD skal kunne hjælpe dig med at forstå hvad et program gør, er det
  nødvendigt at bede oversætteren om at inkludere fejlfindingsinformation i
  det oversatte program. Hvis det for eksempel drejer sig om Ada-programmet
  <filename>fejlfindingseksempel.adb</filename> kan det gøres med følgende
  kommando:
<screen>
<prompt>[daisy@linus daisy]$ </prompt><userinput>gnatmake fejlfindingseksempel -cargs -g</userinput>
</screen>
  For alle oversættere der bygger på
  <glossterm linkend="def-gnu-compiler-collection">GCC</glossterm>
  er det flaget
  <parameter>-g</parameter> der gør at der bliver inkluderet
  fejlfindingsinformation i det oversatte program.
 </para>

 <para>
  Når du har et program, der indeholder fejlfindingsinformation, kan du
  starte GVD og indlæse programmet (her
  <filename>fejlfindingseksempel</filename> fra før) med kommandoen:
<screen>
<prompt>[daisy@linus daisy]$ </prompt><userinput>gvd fejlfindingseksempel </userinput>
</screen>
 </para>

 <para>
  Når GVD kører vil dets vindue være delt op i fire dele:
  <itemizedlist>
   <listitem>
    <para>
     Nederst er der en log over hvad der sker med programmet. 
    </para>
   </listitem>

   <listitem>
    <para>
     I midten til venstre er der en oversigt over de kildetekstfiler
     programmet er sammensat af.
    </para>
   </listitem>

   <listitem>
    <para>
     I midten til højre vises de kildetekstfiler du vælger (desværre kun
     en ad gangen).
    </para>
   </listitem>

   <listitem>
    <para>
     Øverst er der en opslagstavle, hvor du kan se udvalgte variables
     værdier. Når GVD starter er opslagstavlen tom. Du vælger variablene
     ved at klikke på dem med højre musetast nede i kildeteksten. Der
     fremkommer så en menu, hvor et af punkterne er "Vis &lt;variablens
     navn&gt;".
     Når du vælger det kommer der et lille vindue med variablen oppe på
     opslagstavlen.
    </para>
   </listitem>
  </itemizedlist>
 </para>

 <para>
  Den vigtigste fidus ved et fejlfindingsprogram er nok at du kan vælge at
  køre programmet én linie ad gangen. Hvis du har en anelse mere travlt eller
  allerede ved hvilken del af programmet du vil studere kan du indsætte
  <emphasis>stopklodser</emphasis> i programmet. Det gør du ved at
  højreklikke
  på den linie i kildeteksten du vil stoppe ved og vælge "Sæt stopklods på
  linie &lt;linienummer&gt;" på menuen. Hvis du nu starter programmet (ved at
  taste <!-- tast --><filename>F2</filename>) vi programmet stoppe - men ikke
  afslutte - første
  gang det kommer til denne linie. Du kan nu gå en linie frem ad gangen med
  <!-- tast --><filename>F5</filename>
  eller lade programmet køre videre - indtil det kommer til en
  anden stopklods - med <!-- tast --><filename>F8</filename>.
 </para>
</sect1>
