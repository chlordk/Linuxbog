<!-- $Id$ -->
<chapter id="Linux-netvaerk-server">
<title>Linux som server</title>
<indexterm><primary>Netværk</primary></indexterm>

<para>
I dette kapitel vil vi se nærmere på Linux som server og det er på
et mere avanceret plan.  Vi har tidligere kommet ind på en mere grundlæggende
forklaring af netværk, TCP/IP og netværksadresser, idet dette er helt
centralt for alt med netværk. 
</para>

<para>
I dette kapitel ser vi nærmere på en række server-funktionaliteter
DHCP, NFS (UNIX fildeling), NIS (adgangskode-deling), SAMBA (Windows
fildeling), Apache webserver.
</para>

<sect1 id="DHCP">
<!-- Skrevet af Henrik Størner "henrik@storner.dk" -->
<title>Opsætning af DHCP-server</title>
<indexterm><primary>DHCP</primary></indexterm>
<para>
Hvis man har mere end et par computere på sit netværk, eller hvis man
ofte flytter computerne mellem forskellige netværk, så bliver det 
hurtigt besværligt at skulle konfigurere deres IP adresse,
default gateway adresse og DNS server hver gang man flytter dem rundt.
</para>

<para>
Løsningen på det problem er at bruge DHCP - "Dynamic Host
Configuration Protocol". Som navnet antyder, så er det en speciel
protokol som er beregnet til at en computer kan blive konfigureret
automatisk, uden at man skal ind og pille i opsætningen på hver enkelt
maskine.
</para>

<sect2 id="DHCP-virkemaade">
<title>Hvordan virker DHCP?</title>
<para>
Når man tænder en computer der bruger DHCP, så vil den sende en
forespørgsel ud på sit lokale netværk for at spørge efter en
DHCP-server. Hvis der er en DHCP-server på nettet, så tager serveren en
ubrugt IP adresse fra den pulje af adresser, den er konfigureret til
at bruge, og sender et svar tilbage om at den nye computer kan bruge
den pågældende IP adresse. Sammen med IP adressen sendes også andre
oplysninger som er nødvendige for at netværket kan fungere - som regel
er det netmasken, IP adressen for default gateway og DNS servernes IP
adresse som fås fra DHCP-serveren.
</para>

<para>
Den IP adresse som den nye computer får tildelt må den bruge i en
begrænset tidsrum - den får det der kaldes et "lease" på adressen, som
skal fornyes med jævne mellemrum. Hvis ikke computeren beder om at
forny sit lease, så inddrager DHCP-serveren det igen, og kan dele det
ud til andre maskiner der har brug for en IP adresse.
</para>

<para>
Når man bruger DHCP kan man derfor ikke være sikker på, at ens
computere altid har den samme IP adresse - det afhænger af, hvor længe
af gangen de er tændt. Så længe de er på nettet, så bliver de ved med
at have den IP adresse de har fået fra serveren. Men hvis de bliver
lukket ned eller taget af nettet så længe at deres lease udløber, så
vil de sandsynligvis få en ny IP adresse næste gang de kontakter
serveren.
</para>

<para>
Derfor er DHCP mest anvendelig på de systemer, som ikke kører nogen
form for server funktion - d.v.s. almindelige arbejdsstationer. 
</para>

<para>
Det er dog muligt at konfigurere sin DHCP-server på en måde, så visse
IP adresser bliver reserveret til bestemte maskiner, og derved kan man
sikre at den pågældende maskine altid har en bestemt IP
adresse. Derfor kan man godt bruge DHCP til servere, f.eks. hvis man
vil styre netværks-konfigurationen centralt.
</para>
</sect2>

<sect2 id="DHCP-een-server">
<title>Kun EEN DHCP-server per netværk!</title>
<para>
Der følger naturligvis en DHCP-server med din Linux-distribution - det
er en server som er udviklet af ISC (Internet Software Consortium);
det er også dem, der udvikler DNS serveren BIND. I næste afsnit kan du
se, hvordan man sætter den op.
</para>

<para>
Hvis du har en eller anden form for router på dit netværk, så kan det
imidlertid være at du allerede HAR en DHCP-server på nettet. Selv små
ISDN- eller ADSL-routere har ofte indbygget en DHCP-server, og den kan
man sagtens bruge.
</para>

<para>
Uanset om du vælger at køre en DHCP-server på din Linux-maskine, eller
du vælger at bruge den der er indbygget i din router, så skal du passe
på at der kun er <emphasis>en</emphasis> DHCP-server på dit
netværk. Hvis der er flere, så vil du opleve at det kun virker en gang
imellem - nemlig når klienten får svaret fra den server, der er
konfigureret rigtigt.
</para>
</sect2>

<sect2 id="DHCP-ISC">
<title>ISC DHCP-server</title>
<indexterm><primary>DHCP</primary><secondary>ISC</secondary></indexterm>
<para>
ISC's DHCP-server bruger een konfigurations-fil, normalt ligger den i
<filename>/etc/dhcpd.conf</filename>. 
Derudover bruger den en midlertidig fil til at holde
styr på hvilke IP adresser den har uddelt til de forskellige maskiner
på nettet; den ligger normalt i /etc/dhcpd.leases, og den
administrerer serveren selv. Du skal blot sørge for at filen
eksisterer inden du starter serveren - f.eks. ved at give kommandoen
"touch /etc/dhcpd.leases" inden du starter serveren første gang.
(Det var i al fald nødvendigt tidligere - den udgave af DHCP-serveren
der følger med Red Hat 6.2 opretter selv filen, hvis den ikke findes).
</para>

<para>
For at konfigurere DHCP-serveren skal du bestemme dig for, hvilke
oplysninger den skal uddele til de computere, der spørger den om en IP
adresse. D.v.s. du skal vælge
</para>

<ITEMIZEDLIST MARK="bullet" SPACING="compact">
<LISTITEM><para>Hvor længe skal de have lov at bruge den tildelte adresse?</para></listitem>
<LISTITEM><para>Hvilket IP adresse område skal der tages adresser fra?</para></listitem>
<LISTITEM><para>Hvilken netmaske har dit netværk?</para></listitem>
<LISTITEM><para>Hvad er default gateway for nettet?</para></listitem>
<LISTITEM><para>Hvilken IP adresse bruges til DNS server?</para></listitem>
</itemizedlist>


<para>
Derudover er der en frygtelig masse oplysninger, som man kan levere
via DHCP. Det er f.eks. domæne-navnet for maskinerne på dit netværk,
navn på post-server, time-server, WINS server etc. Det er dog langt
fra alle disse oplysninger, som rent faktisk bruges til noget af de
maskiner som kontakter DHCP-serveren, så derfor er det ikke altid at
man får noget ud af at konfigurere dem på DHCP-serveren. Du kan se
hvilke muligheder der er i "dhcp-options" man-siden.
</para>

<sect3 id="dhcpd-conf">
<title>dhcpd.conf filen</title>
<indexterm><primary>DHCP</primary><secondary>dhcpd.conf</secondary></indexterm>
<para>
I netværket der bruges som eksempel har man valgt at bruge følgende
værdier til DHCP:
</para>

<ITEMIZEDLIST MARK="bullet" SPACING="compact">
<LISTITEM><para>Et lease skal være fornyet efter 10 timer, og er
max. gyldigt i 24 timer.</para></listitem>
<LISTITEM><para>IP adresser tildeles fra puljen 192.168.0.100 - 192.168.0.250</para></listitem>
<LISTITEM><para>Netmasken er 255.255.255.0</para></listitem>
<LISTITEM><para>Default gateway er 192.168.0.1</para></listitem>
<LISTITEM><para>DNS serveren er 192.168.0.1</para></listitem>
<LISTITEM><para>Domæne-navnet er "intranet"</para></listitem>
</itemizedlist>

<para>
Konfigurationsfilen <filename>/etc/dhcpd.conf</filename> skal så se således ud:
</para>

<screen>
subnet 192.168.0.0 netmask 255.255.255.0 {
        range 192.168.0.100 192.168.0.250;
        option subnet-mask 255.255.255.0;

        # default gateway
        option routers 192.168.0.1;

        option domain-name "intranet";
        option domain-name-servers 192.168.0.1;

        default-lease-time 36000;
        max-lease-time 86400;
}
</screen>

<para>
DHCP-serveren kan håndtere flere "subnet" - f.eks. hvis serveren også
fungerer som router, så der er flere netkort installeret i
maskinen. Så kan man konfigurere een DHCP-server, som deler adresser
ud til forskellige netværk. Almindeligvis har man dog kun eet netværk,
der får adresser fra sin DHCP-server - men derfor skal der være en
"subnet" erklæring, der fortæller hvad det er for et fysisk netværk,
denne DHCP-pulje handler om.
</para>

<para>
"range" fortæller så, hvilke IP adresser serveren kan tildele klienter
på dette netværk - det er her, vi skriver at adresserne skal være i
intervallet 192.168.0.100 til 192.168.0.250.
</para>

<para>
"option subnet-mask" definerer netmasken.
</para>

<para>
"option routers" definerer default gateway.
</para>

<para>
"option domain-name" og "option domain-name-servers" definerer DNS
domæne-navnet og DNS serveren. Hvis du ikke selv har en DNS server på
dit netværk, så kan du sagtens skrive adressen på din Internet
udbyders DNS server her.


"option domain-name" og "option domain-name-servers" definerer DNS
domæne-navnet og DNS serveren. Hvis du ikke selv har en DNS server på
dit netværk, så kan du sagtens skrive en eller flere IP-adresser på din
Internet udbyders DNS server her. Man kan også bruge navnet på den DNS
server man vil bruge, DHCP-serveren laver så et opslag inden den
tildeler adressen til klienten. En smart ting hvis DNS serveren skulle
skifte IP adresse.
</para>

<screen>
option domain-name-servers 192.168.0.1, 192.168.0.2;
</screen>

<para>
eller
</para>

<screen>
option domain-name-servers ns1.intranet.foo, ns2.intranet.foo;
</screen>

<para>
"default-lease-time" er det antal sekunder, et lease er
gyldigt. Herefter skal klienten forny sit lease hos DHCP-serveren.
</para>

<para>
"max-lease-time" er det antal sekunder en IP adresse må bruges. Når den
tid er gået SKAL klienten holde op med at bruge IP adressen.
</para>

<para>
Forskellen på "default-lease-time" og "max-lease-time".
Funktionen af de to tider er defineret i RFC 2131, afsnit 4.4.5
"Reacquisition and expiration". Kort fortalt går det ud på, at når
default-lease-time ("T1" i RFC'en) udløber, skal klienten begynde at
forsøge at forny sit lease på IP adressen ved at kontakte den
DHCP-server, den oprindelig fik adressen fra. Det kan klienten så blive ved
med at forsøge indtil den får svar, eller indtil "max-lease-time"
("T2" i RFC'en) udløber. Hvis T2 udløber SKAL klienten stoppe med at
benytte IP adressen, og i stedet begynde at broadcaste efter en ny
DHCP-server.
</para>

<para>
Tiden mellem default-lease-time og max-lease-time er altså den frist,
som en klient har til at forny sit lease på en IP adresse. Da servere
kan være nede, er det nødvendigt at der er lidt tid til at klare sådan
en ekspeditions-sag - helst så længe, at klienterne ikke begynder at
falde af nettet pga et enkelt nedbrud af DHCP-serveren.
</para>


<para>
Hvordan vælger man en fornuftig lease-time ? Det der giver mindst
belastning af DHCP-serveren er, hvis arbejds-stationerne ikke behøver
forny deres lease hele tiden - en gang om dagen er rimeligt, og derfor
er default-lease-time sat til lidt længere end en normal arbejdsdag
(10 timer) og max-tiden til 24 timer (86400 sekunder). Omvendt vil man
måske godt have, at klienterne hurtigt opdager hvis man skifter DNS
server - for at det skal ske hurtigt, så skal default-lease-time
sættes ned, så klienterne får friske oplysninger fra serveren noget
oftere. Det er en afvejning, man må gøre.
</para>
</sect3>

<sect3 id="DHCP-start">
<title>Start DHCP-serveren</title>
<para>
Efter at have sat redigeret <filename>/etc/dhcpd.conf</filename>
færdig er du klar til at starte DHCP-serveren. Kører du Red Hat, er
det nemt. Du skal installere dhcp-pakken og køre
</para>

<screen>
<prompt>[root@linus /root]#</prompt> <userinput>/sbin/chkconfig --level 2345 dhcpd on</userinput>
</screen>

<para>
Så starter DHCP-serveren automatisk når maskinen booter. Det virker
dog først efter en reboot, så hvis du vil have serveren i gang med det
samme, så kører du
</para>

<screen>
<prompt>[root@linus /root]#</prompt> <userinput>/etc/rc.d/init.d/dhcpd start</userinput>
</screen>

<para>
Du kan nu prøve at konfigurere enten en Linux-maskine eller en
Windows-PC til at bruge DHCP, og så se om den får oplysningerne fra
serveren. Hvis det er en Windows PC du bruger til at teste med, så kan
man bruge "winipcfg" programmet (Win95 og Win98) eller "ipconfig /all"
(Windows NT) til at se, hvordan maskinen er konfigureret af en
DHCP-server.
</para>

<para>
Når serveren kører, logger den forespørgsler til en log-fil,
almindeligvis <filename>/var/log/messages</filename>. Det kan se således ud:
</para>

<screen>
dhcpd: DHCPDISCOVER from 00:00:b4:c7:1e:e6 via eth0
dhcpd: DHCPOFFER on 192.168.0.101 to 00:00:b4:c7:1e:e6 via eth0
dhcpd: DHCPREQUEST for 192.168.0.101 from 00:00:b4:c7:1e:e6 via eth0
dhcpd: DHCPACK on 192.168.0.101 to 00:00:b4:c7:1e:e6 via eth0 
</screen>

<para>
Først er det klienten, som leder efter en DHCP-server. Så tilbyder
DHCP-serveren at klienten kan bruge adressen "192.168.0.101". Den
beder klienten så om, og serveren svarer tilbage at det er OK.
</para>

<para>
De underlige adresser der står i hver linie er Ethernet adressen på
det netkort, som spørger DHCP-serveren. Dem kan man bruge til at give
servere en fast IP adresse, selv om de får oplysningerne via DHCP.
</para>
</sect3>

<sect3 id="DHCP-en-statisk">
<title>Konfigurer en server med DHCP</title>
<para>
Hvis man vil have at en bestemt maskine altid skal få den samme IP
adresse fra DHCP-serveren, så kan man give den en statisk tildeling i
DHCP-server konfigurationen. Her bruger man den Ethernet adresse, som
maskinens netkort har - hvis maskinen tidligere har fået en IP adresse
fra DHCP-serveren, så kan man se Ethernet adressen i log-filen. Man
kan også se den med <command>/sbin/ifconfig</command> kommandoen hvis
det er en Linux-maskine:
</para>

<screen>
<prompt>[root@eric]$</prompt> <userinput>/sbin/ifconfig eth0</userinput>
          Link encap:Ethernet  HWaddr 00:00:B4:C7:1E:E6  
          inet addr:192.168.0.104  Bcast:192.168.0.255  Mask:255.255.255.0
          UP BROADCAST RUNNING  MTU:1500  Metric:1
          RX packets:55 errors:0 dropped:0 overruns:0 frame:0
          TX packets:94 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:100
          Interrupt:10 Base address:0x6100
</screen>

<para>
"HWaddr" er Ethernet adressen. Hvis nu vi vil have at denne maskine
altid får IP adressen "192.168.0.4" selv om han får sin IP adresse fra
DHCP-serveren, så tilføjer man nogle linier til /etc/dhcpd.conf,
indeni den "subnet" blok som vi lavede før - så kommer den til at se
således ud:
</para>

<screen>
subnet 192.168.0.0 netmask 255.255.255.0 {
        range 192.168.0.100 192.168.0.250;
        option subnet-mask 255.255.255.0;

        # default gateway
        option routers 192.168.0.1;

        option domain-name "intranet";
        option domain-name-servers 192.168.0.1;

        default-lease-time 36000;
        max-lease-time 86400;


        host eric {
                hardware ethernet 00:00:B4:C7:1E:E6;
                fixed-address 192.168.0.4;
        }
}
</screen>

<para>
"host eric" indleder en særlig specifikation af hvordan en enkelt
host skal konfigureres. For at DHCP-serveren kan kende host'en bruger
vi Ethernet adressen - den tager vi fra ifconfig beskeden. For at
tildele denne host en fast adresse bruges "fixed-address 192.168.0.4",
og den adresse vil den pågældende host så altid få.
</para>

<para>
Bemærk at man godt kan tildele faste IP adresser, der ligger uden for
det område af IP adresser, der står i "range" specifikationen.
</para>

<para>
Fordelen ved også at konfigurere servere med IP adresser fra en DHCP
server er, at hvis nogle af de andre oplysninger ændrer sig -
f.eks. DNS serveren eller default gateway - så skal man kun ændre det
eet sted, nemlig på DHCP-serveren. Alle andre servere og
arbejdsstationer får oplysningerne fra den.
</para>

<para>
Der er dog en enkelt undtagelse - DHCP-serveren kan ikke spørge sig
selv om, hvilken IP adresse den skal have. Den er man nødt til at
konfigurere manuelt med en statisk IP adresse, default gateway o.s.v.
</para>

</sect3>
</sect2>

<sect2 id="DHCP-DNS">
<title>DHCP og DNS</title>
<indexterm><primary>DHCP</primary><secondary>DNS</secondary></indexterm>

<para>
DHCP-serveren deler IP adresser ud. IP adresser er normalt knyttet til
hostnavne, men forbindelsen mellem et hostnavn og en IP adresse
håndteres af DNS serveren. Hvordan hænger de to servere sammen?
</para>

<para>
Svaret er, at lige nu (april 2000) hænger de ikke særlig godt
sammen. DHCP-serveren har endnu ikke nogen måde, hvor den kan fortælle
DNS serveren at den lige har uddelt IP adresse 192.168.0.4 til en
host, der gerne ville hedde "eric.intranet", og at DNS serveren
skal sørge for at de to oplysninger bliver matchet.
</para>

<para>
Det er noget der arbejdes på, men lige nu og her må man konfigurere
sin DNS server og DHCP-server separat. Kommunikationen mellem DHCP
serveren og DNS serveren skulle være klar med den næste version af
DHCP-server softwaren, version 3.
</para>

<para>
Det er dog være en fordel at konfigurere en zone i DNS serveren, der
mapper de IP adresser som DHCP-serveren uddeler til et hostnavn -
f.eks. 192.168.0.101 mappet til "dhcp-101.intranet", 192.168.0.102
mappet til "dhcp-102.intranet" o.s.v. En del services laver nemlig
sådan et "reverse DNS" opslag når man forbinder sig til dem, og hvis
ikke de kan få et eller andet hostnavn ud af det opslag, så tager det
som regel længere tid at få forbindelse til den pågældende
service. Det gælder f.eks. <command>telnet</command> og
<command>ftp</command>.
</para>

<para>
Endelig kan det nævnes, at der også er en artikel om DHCP, der kan
være af interesse <ulink url="http://linuxfocus.org/English/May2000/article150.shtml">http://linuxfocus.org/English/May2000/article150.shtml</ulink>.
</para>

</sect2>

</sect1>


<SECT1 ID="ftpd">
<TITLE>FTP-server</TITLE>
<INDEXTERM><PRIMARY>ftp</PRIMARY><SECONDARY>server</SECONDARY></INDEXTERM>
<INDEXTERM><PRIMARY>wu-ftpd</PRIMARY></INDEXTERM>

<PARA>
De fleste Linux-distributioner installerer automatisk en 
ftp-server, hvis man har valgt en server installation.
Har du valgt en skrabet installation til en gammel maskine,
er det nemt senere at få ftp-serveren installeret efterfølgende.
</PARA>

<PARA>
<FILENAME>wu-ftpd</FILENAME> er en god ftp-server der følger
med næsten alle distributioner. Med den installeret, er det muligt
for alle brugere af systemet at få adgang til deres filer
med ftp.
Installationen er nem.
</PARA>

<SCREEN>
<PROMPT>[root@linus RPMS]# </PROMPT><USERINPUT>rpm -ivh wu-ftpd*.i386.rpm</USERINPUT>
</SCREEN>

<PARA>
Ftp-serveren er nu startet og klar til brug.
Af sikkerhedsmæssige årsager kan <COMMAND>root</COMMAND> ikke logge
ind på ftp-serveren.
Dette skyldes at <COMMAND>root</COMMAND> er nævnt i filen
<FILENAME>/etc/ftpusers</FILENAME>. Du kan have dine grunde til at give
root lov til at logge ind, men tænk dig om.
</PARA>

<PARA>
Som før nævnt er det kun brugere af systemet, der kan logge ind.
Skal ftp-serveren være åben for alle, f.eks. til brug for at installere
Linux på en anden maskine over nettet, så skal der lige en pakke mere
ind.
</PARA>

<SCREEN>
<PROMPT>[root@linus RPMS]# </PROMPT><USERINPUT>rpm -ivh anonftp*.i386.rpm</USERINPUT>
</SCREEN>

<PARA>
Nu er maskinen åben for at alle kan hente filer fra din maskine, hvor
brugerne logger ind som <COMMAND>anonymous</COMMAND> (eller
<COMMAND>ftp</COMMAND>) og giver sin egen epost-adresse som
adgangskode.  Skal du lægge filer brugerne kan downloade, lægges de i
<FILENAME>/home/ftp/pub/</FILENAME> og kataloger under dette sted.
</PARA>

<!--

<PARA>
Skal brugerne have lov til at uploade filer, gøres dette normalt
til <FILENAME>/home/ftp/incoming/</FILENAME>.
Her er det vigtigt at sætte ftp op så man kun kan uploade filer
og ikke downloade. Gør man ikke det, risikerer man at ens server bliver
misbrugt til at rundsende pirat-programmer.
Opsætningen af <FILENAME>/incoming/</FILENAME> gøres ved at ......
</PARA>

-->

</SECT1> <!-- ftp-server -->


<sect1 id="NFS">
<title>NFS - Deling af filer mellem UNIX maskiner</title>
<indexterm><primary>NFS</primary></indexterm>
<para>
I UNIX-verdenen og dermed også Linux har man i mange år kunnet dele
filer mellem forskellige maskiner i et netværk. Den mest udbredte
protokol til dette er NFS (netværksfilsystem - eng. Networked File
System).  Det er selvfølgelig et område, man skal være forsigtig med,
hvis man har et alt for åbent netværk.  Her skal vi kun give et
simpelt eksempel på, hvordan NFS virker. Hvis vi nu siger, at maskinen
alfa skal dele <filename>/home</filename> med maskinen beta, så skal
alfa-maskinen have installeret RPM-pakken <filename>knfsd</filename> I
<filename>/etc/exports</filename> skriver du først, hvilken del af
filtræet, der skal deles, derefter hvilke klienter der skal bruge det
(du kan anvende * for alle), og sidst om der deles med læse/skrive
(rw) eller kun læse-rettigheder (ro). Brug <command>man
exports</command> for flere detaljer.
</para>

<SCREEN>
# /etc/exports - NFS export of /home
/home beta.domænenavn.dk(rw)
</SCREEN>

<para>
Derefter skal du genstarte nfs-serveren ved at skrive
<command>/etc/rc.d/init.d/nfs restart</command>, og som root på
beta-maskinen kan du nu nemt få data fra alfa-maskinen.
</para>

<screen>
<prompt>[root@beta /root]# </prompt> <userinput>mount -t nfs alfa:/home /home</userinput>
</screen>

<para>
Skal alfa være permanent filserver for beta (og andre), bør du på
beta-maskinen se mere på programmet <command>autofs</command>, der kan 
tilkoble en disk over netværket, når der er behov for det. Efter et stykke 
tid uden aktivitet, vil disken afmonteres fra netværket. <!--Dette er der et 
kort afsnit om i xref linkend="autofs".-->
Det giver et mere stabilt netværk.
</para>

<para>
Nedenstående er baseret på Red Hat 6.0 og 6.1.
RedHat 6.2 har som standard de nævnte programmer med. Dette skrives to
dage efter RedHat 6.2 officielt er udkommet, og det er ikke afprøvet, men
RedHat 6.2 som NFS-server bør virke uden yderligere krumspring. 
</para>

<para>
Enhver der har prøvet at bruge en Linux NFS-server til lidt mere end en
fil i ny og næ, ved at der har været performanceproblemer. Yderligere har
det ikke været muligt, at benytte NFS-drev med programmer der
bruger fillåsning.
</para>

<para>
Der arbejdes hårdt på at forbedre Linux' muligheder på dette område. NFS
version 3 er undervejs, og det er i dag muligt at benytte Linux som
filserver for andre UNIX-maskiner med godt resultat. Men der er nogle krav
der skal opfyldes: <emphasis>Kerne 2.2.14</emphasis> og 
<emphasis>nfs-utils</emphasis>.
</para>

<para>
Linux-kernen skal oversætttes med følgende options:
</para>

<screen>
CONFIG_NFS_FS=m
CONFIG_NFSD=m
</screen>

<para>
Yderligere
</para>

<screen>
CONFIG_NFSD_SUN=m  
</screen>

<para>
hvis linux-maskinenen skal være NFS-server for SUN's Solaris.
</para>

<para>
Hent den seneste udgave af nfs-utils fra sourceforge.net:
<ulink url="ftp://nfs.sourceforge.net/pub/nfs/nfs-utils-0.1.7.tar.gz">ftp://nfs.sourceforge.net/pub/nfs/nfs-utils-0.1.7.tar.gz</ulink>
</para>

<para>
Byg en rpm-pakke fra kildekoden:
</para>


<screen>
<prompt>[root@linus /root]# </prompt> <userinput>rpm -ta nfs-utils-0.1.7.tar.gz</userinput>
...
...
...
...
Wrote: /usr/src/redhat/RPMS/alpha/nfs-utils-0.1.7-1.alpha.rpm
Executing: %clean
+ umask 022
+ cd /usr/src/redhat/BUILD
+ cd nfs-utils-0.1.7
+ rm -rf /var/tmp/nfs-utils-root
+ exit 0
</screen>


<para>
nfs-utils indeholder nye udgaver af nfs-programmer og daemonerne.
</para>

<para>
nfs (dvs. daemonerne <filename>rpc.rquotad</filename>,
<filename>rpc.mountd</filename> og <filename>rpc.nfsd</filename>) og
nfslock (dvs daemonerne <filename>rpc.lockd</filename> og
<filename>rpc.statd</filename>) skal startes når maskinen booter:
</para>

<screen>
<prompt>[root@linus /root]# </prompt> <userinput>/sbin/chkconfig nfs on</userinput>
<prompt>[root@linus /root]# </prompt> <userinput>/sbin/chkconfig nfslock on</userinput>
<prompt>[root@linus /root]# </prompt> <userinput>/sbin/chkconfig --list | grep nfs</userinput>
nfs 0:off 1:off 2:off 3:on 4:on 5:on 6:off
nfslock 0:off 1:off 2:off 3:on 4:on 5:on 6:off
</screen>

<para>
Herefter er maskinen klar som fornuftig NFS-server.
</para>
</sect1>

<sect1 id="NIS">
<title>NIS - deling af "passwd"-filer mellem UNIX maskiner</title>
<para>
Er der flere maskiner i lokalnettet, og har brugerne brug for adgang til
dem alle (eller nogle af dem), er NIS en god løsning.
</para>

<para>
NIS, The Network Information System, sørger for at flere maskiner kan dele
oplysninger om brugere, grupper og endda også maskiner og en del andre
oplysninger.
</para>

<para>
NIS blev tidligere kaldt "Yellow Pages", forkortet "yp", efter
telefonbøgernes gule sider, men det måtte ændres, da Yellow Pages er et
registreret varemærke ejet af British Telecom.
Men de fleste programmer i NIS, starter stadig med yp.
</para>

<para>
NIS arbejder, ligesom DNS, med et domænenavn. Men disse to domænenavne har
intet med hinanden at gøre. 
I det følgende har vi to Red Hat maskiner i (DNS-)domænet
strangeparty.dk. De skal dele informationer om kodeord mv. i (NIS-)domænet
spo.
</para>

<para>
Serveren hedder "supernaut". Klienten hedder "omnitec".
</para>

<para>
På serveren skal pakken "ypserv" installeres:
</para>

<screen>
<prompt>[root@supernaut /home/kwv]# </prompt> <userinput>rpm -Uvh /cdrom/RPMS/ypserv-1.3.9-1.alpha.rpm </userinput>
ypserv                 ##################################################
</screen>

<para>
NIS-domænet skal være "spo". Det sættes med kommandoen <command>domainname</command>.
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>domainname spo</userinput>
</screen>

<para>
Ypserveren skal nu startes:
</para>

<screen>
<prompt>[root@supernaut /home/kwv]# </prompt> <userinput>/etc/rc.d/init.d/ypserv start</userinput>
Starting YP server services:                               [  OK  ]
</screen>

<para>
Det kan betale sig at gennemse, og måske tilrette, filen
<filename>/var/yp/Makefile</filename>.  Du bør nok ændre MINUID og
MINGID, så disse starter UID og GID ved 300, og ikke ved 500 som er
standard i RedHat. Du kan også  udkommentere linien "GSHADOW =
$(YPPWDDIR)/gshadow", og indsætte "MERGE_GROUP=false".
</para>

<para>
Herefter initieres NIS-serveren:
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>/usr/lib/yp/ypinit -m</userinput>

At this point, we have to construct a list of the hosts which will run NIS
servers.  supernaut.strangeparty.dk is in the list of NIS server
hosts.  Please continue to add
the names for the other hosts, one per line.  When you are done with the
list, type a &lt;control D&gt;.
	next host to add:  supernaut.strangeparty.dk
	next host to add:  
The current list of NIS servers looks like this:

supernaut.strangeparty.dk

Is this correct?  [y/n: y]  
We need some  minutes to build the databases...
Building /var/yp/spo/ypservers...
Running /var/yp/Makefile...
gmake[1]: Entering directory `/var/yp/spo'
Updating passwd.byname...
Updating passwd.byuid...
Updating group.byname...
Updating group.bygid...
Updating hosts.byname...
Updating hosts.byaddr...
Updating rpc.byname...
Updating rpc.bynumber...
Updating services.byname...
Updating netid.byname...
Updating protocols.bynumber...
Updating protocols.byname...
Updating mail.aliases...
gmake[1]: Leaving directory `/var/yp/spo'
[root@supernaut /home/kwv]# 
</screen>

<para>
Med ypbind installeret på serveren, kan man nu kontrollere de
services der stilles til rådighed.
Ypbind skal startes først:
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>/etc/rc.d/init.d/ypbind start</userinput>

Binding to the NIS domain...                               [  OK  ]
Listening for an NIS domain server: supernaut.strangeparty.dk
</screen>

<para>
Kommandoen <command>ypcat -x</command> viser de services serveren
stiller til rådighed: 
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>ypcat -x</userinput>

Use "ethers"	for map "ethers.byname"
Use "aliases"	for map "mail.aliases"
Use "services"	for map "services.byname"
Use "protocols"	for map "protocols.bynumber"
Use "hosts"	for map "hosts.byname"
Use "networks"	for map "networks.byaddr"
Use "group"	for map "group.byname"
Use "passwd"	for map "passwd.byname"
</screen>

<para>
Det interessante i vores lille netværk, er <filename>passwd</filename>
og <filename>group</filename>. Yderligere kan
<filename>aliases</filename> og <filename>mail.aliases</filename> være
smart til at styre lokal epost.
</para>

<para>
Men hvad indeholder de så?
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>ypcat passwd</userinput>
hanne:BmXEt39P1By2I:301:300:Hanne:/supernaut/hanne:/bin/bash
kwv:/g10xcDPwwaA2:405:400:Kristian Vilmann:/home/kwv:/bin/bash
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>ypcat group</userinput>
hjemme:x:300:
teknik:x:400:
</screen>

<para>
På klienten skal <command>ypbind</command> selvfølgelig være
installeret. Og den skal startes:
</para>

<screen>
<prompt>[root@omnitech /root]#</prompt> <userinput>rpm -q ypbind</userinput>
ypbind-3.3-24
<prompt>[root@omnitech /root]#</prompt> <userinput>domainname spo</userinput>
<prompt>[root@omnitech /root]#</prompt> <userinput>/etc/rc.d/init.d/ypbind start</userinput>
Binding to the NIS domain...                               [  OK  ]
Listening for an NIS domain server: .supernaut.strangeparty.dk
</screen>

<para>
Hvis klienten har problemer med at finde NIS-serveren, eller der er flere
NIS-domæner i netværket, kan man sætte sine præferencer i filen
<filename>/etc/yp.conf</filename>.
</para>

<para>
Lad os se om det ser rigtigt ud. <command>ypwhich</command> fortæller hvilken NIS-server
klienten er bundet til:
</para>

<screen>
<prompt>[root@omnitech /root]#</prompt> <userinput>ypwhich</userinput>
supernaut.strangeparty.dk
<prompt>[root@omnitech /root]#</prompt> <userinput>ypcat passwd</userinput>
hanne:$1$d5dYr98N$/k.0aNyvq/BMX0UlMoyGZ1:301:300:Hanne:/home/hanne:/bin/bash
kwv:$1$I1/h6uyj$Spk11r0bYTyo9r.sc7nQ..:405:400:Kristian Vilmann:/home/kwv:/bin/bash
</screen>
<para>
Det ser fint ud.
Vi lader nu en bruger prøve telnet fra serveren til klienten.
For en god ordens skyld kontrolleres at brugeren hanne ikke optræder i
filen <filename>/etc/passwd</filename>:
</para>

<screen>
<prompt>[root@omnitech /root]#</prompt> <userinput>grep hanne /etc/passwd</userinput>
</screen>

<para>
Her var der intet svar (nul linier).
</para>

<screen>
<prompt>[hanne@supernaut ~]#</prompt> <userinput>telnet omnitec</userinput>
Trying 192.168.10.126...
Connected to omnitec.strangeparty.dk.
Escape character is '^]'.

Red Hat Linux release 6.1 (Cartman)
Kernel 2.2.12-20 on an i586
login: hanne
Password: 
Last login: Wed Mar 29 13:42:12 from supernaut.strangeparty.dk
<prompt>[hanne@omnitec ~]$</prompt> <userinput>id</userinput>
uid=301(hanne) gid=300(hjemme) groups=300(hjemme)
<prompt>[hanne@omnitec ~]$</prompt> <userinput>pwd</userinput>
/supernaut/hanne
<prompt>[hanne@omnitec ~]$</prompt> <userinput>whoami</userinput>
hanne
<prompt>[hanne@omnitec ~]$</prompt> <userinput>ls -al</userinput>
total 142
drwx------   2 hanne    hjemme       1024 Mar 29 13:13 WebDB/
-rw-r--r--   1 hanne    hjemme      34862 Mar 12 23:24 headbanging.jpg
-rw-r--r--   1 hanne    hjemme      59995 Oct 18 22:16 insoundout.gif
drwxr-xr-x   4 hanne    hjemme       1024 Mar 12 00:10 objectsystem1.0/
-rw-r--r--   1 hanne    hjemme      43971 Mar 21 19:31 sslug.httpd.conf
</screen>

<para>
Det ser rigtigt ud. Læg mærke til at Hanne's hjemmekatalog er NFS-mounted
fra serveren, og at hun derfor har samme hjemmekatalog på begge maskiner. 
</para>

<para>
NIS tilbyder en række værktøjer til manipulering af
brugerinformationerne på NIS-serveren: <command>yppasswd</command>,
<command>ypchfn</command> og <command>ypchsh</command>.
</para>

<para>
De fungerer på samme måde som de tilsvarende kommandoer uden yp-prefixet.
Hanne vil gerne skifte sit kodeord:
</para>

<screen>
<prompt>[hanne@omnitec ~]$</prompt> <userinput>yppasswd</userinput>
Changing NIS account information for hanne on supernaut.strangeparty.dk.
Please enter old password: GAMMELKODE
Changing NIS password for hanne on supernaut.strangeparty.dk.
Please enter new password: NYKODE
Please retype new password: NYKODE

The NIS password has been changed on supernaut.strangeparty.dk.
</screen>

<para>
Lad os se om det virker:
</para>

<screen>
<prompt>[hanne@omnitec ~]$</prompt> <userinput>telnet supernaut</userinput>
Trying 192.168.10.1...
Connected to supernaut.strangeparty.dk.
Escape character is '^]'.

Red Hat Linux release 6.0 (Hedwig)
Kernel 2.2.14 on an alpha
login: hanne
Password: NYKODE
Last login: Wed Mar 29 13:02:19 from omnitec.strangeparty.dk
</screen>

<para>
Fint. Kodeordet er ændret på serveren.
Man hvad med klienten?
</para>

<screen>
<prompt>[hanne@supernaut ~]$</prompt> <userinput>telnet omnitec</userinput>
Trying 192.168.10.126...
Connected to omnitec.strangeparty.dk.
Escape character is '^]'.

Red Hat Linux release 6.1 (Cartman)
Kernel 2.2.12-20 on an i586
login: hanne
Password: NYKODE
Last login: Wed Mar 29 13:46:21 from supernaut.strangeparty.dk
</screen>

<para>
Hvis man som administrator ændrer i adgangskodefilen, opretter eller
sletter en bruger, eller ændrer andet der påvirker NIS, skal man sørge for
at NIS-databaserne er konsistente efter ændringerne:
</para>

<screen>
<prompt>[root@omnitech /root]#</prompt> <userinput>cd /var/yp</userinput>
<prompt>[root@omnitech /root]#</prompt> <userinput>make</userinput>
</screen>

<para>
Og så skal vi lige sørge for at det starter næste gang maskinerne
bootes: På serveren skal <command>ypserv</command>,
<command>yppasswdd</command> og <command>ypbind</command> startes i
runlevel 3, 4 og 5.
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>/sbin/chkconfig --list | grep yp</userinput>
ypbind 0:off 1:off 2:off 3:on 4:on 5:on 6:off
yppasswdd 0:off 1:off 2:off 3:on 4:on 5:on 6:off
ypserv 0:off 1:off 2:off 3:off 4:off 5:off 6:off
</screen>

<para>
ypserv starter ikke automatisk. Det får vi den til:
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>/sbin/chkconfig ypserv on</userinput>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>/sbin/chkconfig --list | grep yp</userinput>
ypbind 0:off 1:off 2:off 3:on 4:on 5:on 6:off
yppasswdd 0:off 1:off 2:off 3:on 4:on 5:on 6:off
ypserv 0:off 1:off 2:off 3:on 4:on 5:on 6:off
</screen>

<para>
NIS-domænet skal sættes, både på server og klient. Det gøres i
<filename>/etc/sysconfig/network</filename>:
</para>

<para>
NISDOMAIN=spo
</para>


<para>
På klienten skal ypbind også startes ved boot:
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>/sbin/chkconfig --list ypbind</userinput>
ypbind 0:off 1:off 2:off 3:on 4:on 5:on 6:off
</screen>

<para>
NIS kan en del mere end beskrevet her. Men dette er normalt det, der er
størst behov for.
</para>

<para>
For mere information:
Linux Network Administrators Guide,
NIS-HOWTO,
Managing NFS & NIS, O'Reilly & Associates,
Manualsiderne fra ypserv og  ypbind pakkerne. Find dem således: 
</para>

<screen>
<prompt>[hanne@supernaut ~]$</prompt> <userinput>rpm -ql `rpm -qa | grep ^yp` |grep man</userinput>
</screen>


</sect1>


<sect1 id="SAMBA"> 
<!-- Michael Rasmussem <mir@miras.org> og Lars Madsen <m@dsen.net> -->
<title>Linux som server i Windows-netværk (SAMBA)</title>
<indexterm><primary>SAMBA</primary></indexterm>
<indexterm><primary>Filserver for Windows maskiner</primary></indexterm>
<indexterm><primary>Windows</primary><secondary>fil-deling</secondary></indexterm>


<para>
Selv om denne bog handler om Linux, skal man ikke glemme, at
der findes andre styresystemer. Et af de mere udbredte er Windows -
herunder wfw/95/98/NT/2000, som alle har indbygget muligheden for at
fungere i netværk. Hvis man allerede har et lokalnet med både Linux og
Windows computere, kan man med fordel kigge nærmere på SAMBA.
</para>

<para>
SAMBA er Open Source Software, og kan dermed erhverves og bruges helt gratis. I
Danmark kan SAMBA bedst downloades fra <ulink
url="http://sunsite.auc.dk/samba/samba.html">http://sunsite.auc.dk/samba/samba.html</ulink>,
ellers fra <ulink
url="http://www.samba.org">http://www.samba.org</ulink>.
</para>

<para> 
Med SAMBA installeret får man stort set samme muligheder, som
hvis man investerer i en langt dyrere og meget mere hardwarekrævende
NT/2000 licens eller en OS/2 Lan Manager. Det, SAMBA først og fremmest kan
tilbyde, er at fungere som fil- og printerserver. Derudover kan SAMBA
også fungere som Primary Domain Controller for Windows 95/98 klienter. Fuld
domain control for Windows NT domæner findes i version 2.0 eller senere.
</para>

<para>
Med SAMBA installeret (og ikke mindst konfigureret) vil
serveren kunne ses, hvis man klikker på "network neighbourhood" (på
dansk: "andre computere") eller på samme netværk i Windows 95/98/NT.
</para>

<para>
Den letteste måde at installere/opgradere SAMBA på er ved at
bruge en færdig-oversat pakke. Sådanne pakker kan hentes på
<ulink url="http://sunsite.auc.dk/samba/ftp/Binary_Packages/">http://sunsite.auc.dk/samba/ftp/Binary_Packages/</ulink>,
og de findes til flere
forskellige Linux-distributioner, bl.a. Red Hat, Caldera, Debian,
Slackware og SuSE. Hvis man holder af at oversætte sin kildetekst
selv, kan den hentes her:
<ulink url="ftp://sunsite.auc.dk/pub/UNIX/networking/samba">ftp://sunsite.auc.dk/pub/UNIX/networking/samba</ulink>.
Vi vil dog meget anbefale at bruge en færdigoversat pakke, og vi
vil i eksemplet gå ud fra, at du har Red Hat installeret. Når du har
hentet rpm-pakken, skriver du bare:
</para>

<SCREEN>
<PROMPT>[root@linus /root]# </PROMPT> <USERINPUT>rpm -ivh samba-2.0.6-19991110.i386.rpm</USERINPUT>
</screen>

<sect2 id="SAMBA-UNIX">
<title>Konfigurering af Sambaserveren i Linux</title>

<para>
Når du har fået installeret SAMBA serveren, skal du have den
konfigureret. Dette kan gøres på flere måder. I sædvanlig UNIX stil kan
man rette direkte i filen <filename>/etc/smb.conf</filename>. Denne
fil kan virke meget skræmmende, da der er op mod 300 parametre, man
kan sætte. Det skal du dog af to grunde ikke lade dig gå på af: For
det første har de fleste parametre udmærkede forvalgte værdier, så dem
behøver man slet ikke at bekymre sig om. For det andet bliver der
installeret en udmærket standard <filename>/etc/smb.conf</filename>,
som virker uden de store ændringer. Denne standard
<filename>smb.conf</filename> er desuden meget velkommenteret, hvilket
yderligere letter tilpasning. Her er et eksempel på en lille
<filename>/etc/smb.conf</filename> fil, der ud over at sætte SAMBA op
som fil- og printerserver også konfigurerer SAMBA som domænekontroller.
</para>

<screen>
[global]
   workgroup = hjemme

   printing = bsd
   printcap name = /etc/printcap
   load printers = yes

   log file = /var/log/samba-log.%m

   short preserve case = yes
   preserve case = yes

   lock directory = /var/lock/samba
   locking = yes
   strict locking = yes

   security = user

   socket options = TCP_NODELAY

   domain master = yes
   domain logons = yes

[homes]
   comment = Home Directories
   read only = no
   create mode = 0750

[deskjet870cxi]
   comment = All Printers
   path = /var/spool/samba
   browseable = yes
   printable = yes
; Set public = yes to allow user 'guest account' to print
   public = no
   writable = no
   create mode = 0700

</screen>

<para>
For at dine windowsklienter skal få lov til at logge sig på
sambaserveren, skal SAMBA kende til dem - ikke brugerne, men de
enkelte maskiner. For at SAMBA vil vedkende sig en maskine, skal den
have en Machine Trust Account (MTA), og til dette formål skal man
benytte kommandoen <command>smbpasswd</command>. Samba skelner mellem
de enkelte maskiner vha. et Machine ID, som den henter fra den enkelte
maskine, når den logger på første gang.
</para>

<para>
Sådan tildeles vores windowsklient en MTA:
Først skal vi i filen <filename>/etc/passwd</filename> tilføje vores
Windowsklient med det navn, som vi har givet den. Se hvordan
senere. Dette gøres på følgende måde:
</para>

<para>
Åbn <filename>/etc/passwd</filename> i en teksteditor, f.eks
<command>pico</command>, og skriv følgende
</para>

<screen>
WS1$:*:801:800:Arbejdsstation 1:/dev/null:/bin/false
WS2$:*:802:800:Arbejdsstation 2:/dev/null:/bin/false
			.
			.
			Osv.	
</screen>


<para>
Bemærk: Der SKAL oprettes en tilsvarende MTA for hver Windowsklient,
og hvis man f.eks opgraderer sit styresystem, eller ændrer
computernavn, skal denne procedure gentages.
</para>

<para>
Når vi har tilføjet vores Windowsklient i
<filename>/etc/passwd</filename>, skal vi få SAMBA til at generere
vores MTA. Dette gøres med kommandoen
</para>

<screen>
<PROMPT>[root@linus /root]# </PROMPT> <USERINPUT>smbpasswd -a -m WS1</USERINPUT>
</screen>

<para>
Efter vi har afviklet <command>smbpasswd</command>, vil man kunne se
følgende linie i filen <filename>/etc/smbpasswd</filename>:
</para>

<screen>
WS1$:801:996FE3676928F4D8F500944B53168930:85363C212E7D5363159422805AA1BE70:[W    ]:LCT-397A3E6E
</screen>

<para>
Som noget nyt i version 2.x.x har man nu mulighed for at sætte SAMBA op som
primær domænekontroller for et windows-netværk. Det vil dog føre for vidt at 
komme ind på det her. Hvis man har mod på at prøve kan finde mere information her:
<ulink url="http://sunsite.auc.dk/samba/docs/ntdom_faq/samba_ntdom_faq.html">http://sunsite.auc.dk/samba/docs/ntdom_faq/samba_ntdom_faq.html</ulink>,

<ulink url="http://www.kneschke.de/projekte/samba_tng/index.php3">Samba TNG</ulink> og

<ulink url="http://www.linuxworld.com/linuxworld/lw-1998-10/lw-10-samba.html">Doing the NIS/NT Samba</ulink>
</para>

<para>
Sammen med SAMBA kommer der også et grafisk konfigurationsværktøj, der
hedder <command>swat</command> (Samba Web Administration tool). 
Med dette værktøj er det muligt at klikke sig gennem
opsætningen af SAMBA.
</para>

<FIGURE ID="swat-fig" FLOAT="1">
<TITLE>Swat
</TITLE>
<GRAPHIC FILEREF="swat.&magic;"  SCALE="40"></GRAPHIC>
</FIGURE>


<para> Her ses et eksempel på, hvordan <command>swat</command> ser ud, jeg
har defineret et "share" (en delt mappe), der hedder spil. I
<filename>smb.conf</filename> ser det således ud:
</para>

<screen>
[spil]
  create mask =  0775
  read only = no
  path = /mnt/hdd/spil/
</screen>

<para>
Hvis man bruger swat, ser det således ud: 
</para>

<FIGURE ID="swatspil-fig" FLOAT="1">
<TITLE>Swat spil
</TITLE>
<GRAPHIC FILEREF="swat_spil.&magic;"  SCALE="40"></GRAPHIC>
</FIGURE>


<para>
Her er det kun den øverste del af siden, der er taget med. Det skal bemærkes,
at der findes en del andre indstillinger, der også kan sættes med swat. Den
største fordel ved at benytte swat er, at man har adgang til hjælp.
</para>

<para>
Der findes efterhånden en del andre grafiske
konfigurationsværktøjer. 
<ulink url="http://sunsite.auc.dk/samba/GUI/">http://sunsite.auc.dk/samba/GUI/</ulink>
indeholder en liste over disse.
</para>

<para>
Inden man kan gå videre til at konfigurere klienterne i ens netværk,
er der yderligere to andre ting, der skal tages stilling til. Den
første beslutning, der skal tages er, hvorvidt man ønsker at benytte
krypterede adgangskoder eller ej. Opsætning af dette og en diskussion
af fordele og ulemper følger i næste afsnit. Den anden beslutning
angår, om man vil benytte TCP/IP eller Lanmanager (Netbios) til
navneopslag. Hvis man vælger Lanmanager løsningen, er konfigureringen
af Samba overstået på Linuxserveren, mens TCP/IP løsningen kræver, at
der installeres DNS på Linuxserveren.
</para>

<para>
Hvordan man installerer DNS på Linux, kan du læse mere om her. Se
<xref linkend="dns-opsaetning">.
</para>

<sect3 id="kryptpass">
<title>Krypterede adgangskoder</title>

<para>
SMB bruger en krypteringsteknik, der ligner standard UNIX-kryptering. 
Det er dog kun tilsyneladende, at de to teknikker er ens,
UNIX variationen sender nemlig typisk kodeordet i klar tekst over
netværket, når man skal logge ind. SMB sender i modsætning hertil en
kodet version af adgangskoden.
</para>

<para>
Hvorvidt man vælger at bruge krypterede adgangskoder eller ej, er op til
den enkelte at afgøre, da der er både fordele og ulemper, som listet
nedenfor. Bruger man nyere versioner af MS Windows og NT vil vi dog
anbefale at bruge kryptering, idet man slipper for at skulle
konfigurere alle sine klienter. Som det vil fremgå lidt senere, er det uhyre
enkelt at få SAMBA til at benytte krypterede adgangskoder.
</para>

<para>
Fordele ved krypterede adgangskoder:
<ITEMIZEDLIST MARK="bullet" SPACING="compact">
<LISTITEM>
<PARA>Sikkerhed. Adgangskoder bliver ikke sendt over netværket i klar tekst.</PARA>
</LISTITEM>


<LISTITEM>
<PARA>Windows 95 med osr2, Windows 98 og NT4.0SP4 vil som standard kun
tale med en server, der anvender krypterede adgangskoder.</PARA>
</LISTITEM>
</ITEMIZEDLIST>

Ulemper ved krypterede adgangskoder:
<ITEMIZEDLIST MARK="bullet" SPACING="compact">
<LISTITEM>
<PARA>Der skal vedligeholdes endnu en passwd-fil.</PARA>
</LISTITEM>

<LISTITEM>
<PARA>Hvis du allerede bruger services, der sender adgangskoder i klar
tekst (F.eks telnet og ftp), gør det ikke den store forskel, om
SMB også gør det.</PARA>
</LISTITEM>

</ITEMIZEDLIST>
</PARA>

<para>
Windows 98 og Windows NT 4 (sp3 og senere) kræver som standard brug af 
krypterede adgangskoder. Det betyder, at du har to valg:

<ITEMIZEDLIST MARK="bullet" SPACING="compact">
<LISTITEM>
<PARA>Du konfigurerer SAMBA til at bruge krypterede adgangskoder.
</PARA>
</LISTITEM>
<LISTITEM>
<PARA>Du ændrer Windows 98/95/NT registry, så de ikke kræver krypterede adgangskoder.
</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</para>
</sect3>

<sect3 id="SAMBAconfig">
<title>Konfigurering af SAMBA</title>
<para>
I modsætning til tidligere er SAMBA i dag født til at kunne håndtere
krypterede adgangskoder. Det eneste man skal gøre, er at tilføje følgende
linje til [global] sektionen i <filename>/etc/smb.conf</filename>
</para>

<screen>encrypt password = yes</screen>

<para>
Hvis man gerne vil have flyttet sine UNIX-adgangskoder over til SAMBA,
skal du lave en ny passwd-fil til brug for SAMBA alene. Der findes
et program, der kan generere en SAMBA passwd-fil ud fra den
eksisterende UNIX passwd-fil:
</para>

<SCREEN>
<PROMPT>[root@linus /root]# </PROMPT> <USERINPUT> mksmbpasswd.sh &lt; /etc/passwd &gt; /etc/smbpasswd</USERINPUT>
</SCREEN>

<para>
I SuSE 6.3 er <filename>smbpasswd.sh</filename> placeret i kataloget
<filename>/usr/sbin</filename>, og katalogplaceringen skal med i
kommandoen. Desuden har filen i den distribution ikke rettigheder til
at kunne køres, hvilken den således skal tildeles, før kommandoen udføres.
</para>

<para>
Kommandoen opretter filen til de krypterede adgangskoder, men den opretter ikke
selve de krypterede adgangskoder. Uanset om du vælger, at brugerne skal have
samme SAMBA-adgangskode, som de er tildelt som brugere i dit Linux-system, skal
du alligevel bagefter tildele dem krypterede SAMBA-adgangskoder ved hjælp af
kommandoen smbpasswd.
</para>

<para>
Selv hvis du med linjen <filename>null passwords = yes</filename> i
<filename>/etc/smb.conf</filename> under global-sektion har tilladt, at
SAMBA-adgangskoden er blankt, skal du alligevel oprette en "blank"
adgangskode med kommandoen <command>smbpasswd</command>.
</para>

<para>
Du bør bruge samba-1.9.18p10 eller senere(2.0.7 er pt. den seneste),
da kryptering er slået til som standard - dette gælder i hvert fald for
Red Hat. Bruger du andre distributioner, bør du tjekke, hvordan SAMBA
er konfigureret. Hvis du gerne vil oversætte dit eget programmel, skal
du anvende linkerflaget <filename>-lcrypt</filename> til LIBSM. 
</para>
</sect3>
</sect2>

<sect2 id="SAMBAconfigWin">
<title>Konfigurering af Windows 98/NT</title>

<para>
Som udgangspunkt er Windows konfigureret til at sende krypterede
adgangskoder, så hvis man ikke ønsker kryptering skal dette fortælles til
Windows, da man ellers ikke vil kunne logge sig på.
</para>

<para>
På Windows 95/98 maskiner skal følgende skrives i
registreringsdatabasen, for at få Windows til at undlade at sende
krypterede adgangskoder:
</para>

<screen>
[HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\VxD\VNETSUP]
"EnablePlainTextPassword"=dword:00000001
</screen>

<para>
Tilsvarende for Windows NT:
</para>

<screen>
[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Rdr\Parameters]
"EnablePlainTextPassword"=dword:00000001
</screen>

<para>
Hvis man ikke har mod på at ændre i registreringsdatabasen selv, kan
man kopiere en af følgende filer til sin Windowsmaskine og afvikle dem
fra <command>stifinder</command>:

<ITEMIZEDLIST MARK="bullet" SPACING="compact">
<LISTITEM><para><filename>Win95_PlainPassword.reg</filename></para></LISTITEM>
<LISTITEM><para><filename>Win98_PlainPassword.reg</filename></para></LISTITEM>
<LISTITEM><para><filename>NT4_PlainPassword.reg</filename></para></LISTITEM>
<LISTITEM><para><filename>Win2000_PlainPassword.reg</filename></para></LISTITEM>
</ITEMIZEDLIST>

Hvis man afvikler dem, vil ovenstående ændringer automatisk blive tilføjet i
registreringsdatabasen. 
</para>

<para>
En meget udførlig beskrivelse af brugen findes i filen 
<filename>ENCRYPTION.txt</filename>, der følger med SAMBA-distributionen.
</para>

<sect3 id="configWinClient">
<title>Konfigurering af klienterne</title>

<para>
Du har du konfigureret Samba på Linux-serveren samt besluttet dig for,
om du vil benytte krypterede adgangskoder eller ej, så det eneste du
mangler er at få windows-klienterne til at tilslutte sig domænet. I
den følgende afsnit vil vi anvise en løsning på dette. Der knytter sig
følgende forudsætninger til det efterfølgende eksempel:
</para>

<para>
Maskiner i vores netværk:
<ITEMIZEDLIST MARK="bullet" SPACING="compact">
<LISTITEM><para>test.domain.net; Linuxserveren</para></LISTITEM>
<LISTITEM><para>router.domain.net; Router til internet</para></LISTITEM>
<LISTITEM><para>WS1.domain.net; Windows klient</para></LISTITEM>
</ITEMIZEDLIST>
</para>

<para>
Indhold af filen <filename>/etc/hosts</filename>
<screen>
127.0.0.1	localhost.localdomain	localhost
192.168.1.1	test.domain.net		test
172.10.10.1	router.domain.net	router
</screen>
</para>

<para>
Indhold af filen <filename>/etc/smb.conf</filename>
<screen>
[global]
   workgroup = testdomain

   printing = bsd
   printcap name = /etc/printcap
   load printers = yes

   log file = /var/log/samba-log.%m

   short preserve case = yes
   preserve case = yes

   lock directory = /var/lock/samba
   locking = yes
   strict locking = yes

   security = user

   socket options = TCP_NODELAY

   domain master = yes
   domain logons = yes

[homes]
   comment = Home Directories
   read only = no
   create mode = 0750

[deskjet870cxi]
   comment = All Printers
   path = /var/spool/samba
   browseable = yes
   printable = yes
; Set public = yes to allow user 'guest account' to print
   public = no
   writable = no
   create mode = 0700
</screen>
</para>

<para>
for at kunne få forbindelse til samba-serveren, kræves der en fungerende
løsning på navneopslag. Dette kan løses på 2 måder:
</para>

<para>
<ITEMIZEDLIST MARK="bullet" SPACING="compact">
<LISTITEM>
<para>
Hosts og Lmhosts - netbios way (har i øvrigt suffixet .sam): I disse filer
skal samba-serveren være nævnt. Når du har foretaget ændringerne i
filerne, skal deres navne ændres til Hosts og Lmhosts - efternavnene
<filename>.sam</filename> skal altså udelades. Se eksempel på disse filer
senere. </para> 
</listitem>

<LISTITEM>
<para>
Sæt Linuxserveren til at køre named - TCP/IP way, 
og fortæl windows at den skal bruge 
linuxserveren som DNS. Åbn
indstillinger-&gt;kontrolpanel-&gt;netværk. Åbn 
egenskaber for TCP/IP. Under fanebladet "Gateway" tilføjes
192.168.1.1. Under fanebladet DNS-konfiguration aktiveres DNS, i Vært skrives
maskinens navn WS1 (det skal være det samme navn som blev angivet som
Computernavn i fanebladet identifikation:
Indstillinger->kontrolpanel->netværk). Domæne sættes til testdomain.
Feltet Rækkefølge til søgning efter DNS-server tilføjes 192.168.1.1
(hvis den står som den første, går det hurtigere).
</para></LISTITEM>
</ITEMIZEDLIST>
</para>

<para>
DOMÆNENAVN: Workgroup/domainnavn må ikke være sammenfaldende med
hostnavnet. Hvis samba, som i vores eksempel, kører på hosten
test.domain.net, og har følgende stående i filen
<filename>/etc/hosts</filename>:
</para>

<para>
<screen>
127.0.0.1 localhost.localdomain localhost
192.168.1.1 test.domain.net test
172.10.10.1 router.domain.net router
</screen>
</para>

<para>
er følgende navne ikke tilladt for workgroup/domain:
<ITEMIZEDLIST MARK="bullet" SPACING="compact">
<LISTITEM><para>localhost.localdomain</para></LISTITEM>
<LISTITEM><para>test.domain.net</para></LISTITEM>
<LISTITEM><para>router.domain.net</para></LISTITEM>
</ITEMIZEDLIST>
</para>

<para>
ps. disse vil formentlig være ulovlige i sig selv, da de indeholder et
forbudt tegn.
</para>

<para>
<ITEMIZEDLIST MARK="bullet" SPACING="compact">
<LISTITEM><para>localhost</para></LISTITEM>
<LISTITEM><para>test</para></LISTITEM>
<LISTITEM><para>router</para></LISTITEM>
</ITEMIZEDLIST>
</para>

<para>
I dette afsnit kommer så vores eksempel på, hvordan filerne
<filename>Hosts</filename> og <filename>Lmhosts</filename> skal se ud.
</para>

<para>
<filename>c:\windows\Hosts</filename>; Windows 95/98.
<filename>c:\winnt\system32\drivers\etc\Hosts</filename>; Windows NT.
</para>

<screen>
# Copyright (c) 1998 Microsoft Corp.
#
# This is a sample HOSTS file used by Microsoft TCP/IP stack for Windows98
#
# This file contains the mappings of IP addresses to host names. Each
# entry should be kept on an individual line. The IP address should
# be placed in the first column followed by the corresponding host name.
# The IP address and the host name should be separated by at least one
# space.
#
# Additionally, comments (such as these) may be inserted on individual
# lines or following the machine name denoted by a '#' symbol.
#
# For example:
#
# 102.54.94.97 rhino.acme.com # source server
# 38.25.63.10 x.acme.com # x client host

127.0.0.1 localhost
192.168.1.1 test
172.10.10.1 router
</screen>


<para>
<filename>c:\windows\Lmhosts</filename>; Windows 95/98.
<filename>c:\winnt\system32\drivers\etc\Lmhosts</filename>; Windows
NT.
</para>

<screen>
# Copyright (c) 1998 Microsoft Corp.
#
# This is a sample LMHOSTS file used by the Microsoft Wins Client (NetBios
# over TCP/IP) stack for Windows98
#
# This file contains the mappings of IP addresses to NT computernames
# (NetBIOS) names. Each entry should be kept on an individual line.
# The IP address should be placed in the first column followed by the
# corresponding computername. The address and the comptername
# should be separated by at least one space or tab. The "#" character
# is generally used to denote the start of a comment (see the exceptions
# below).
#
# This file is compatible with Microsoft LAN Manager 2.x TCP/IP lmhosts
# files and offers the following extensions:
#
# #PRE
# #DOM:&lt;domain&gt;
# #INCLUDE &lt;filename&gt;
# #BEGIN_ALTERNATE
# #END_ALTERNATE
# \0xnn (non-printing character support)
#
# Following any entry in the file with the characters "#PRE" will cause
# the entry to be preloaded into the name cache. By default, entries are
# not preloaded, but are parsed only after dynamic name resolution fails.
#
# Following an entry with the "#DOM:&lt;domain&gt;" tag will associate the
# entry with the domain specified by &lt;domain&gt;. This affects how the
# browser and logon services behave in TCP/IP environments. To preload
# the host name associated with #DOM entry, it is necessary to also add a
# #PRE to the line. The &lt;domain&gt; is always preloaded although it will not
# be shown when the name cache is viewed.
#
# Specifying "#INCLUDE &lt;filename&gt;" will force the RFC NetBIOS (NBT)
# software to seek the specified &lt;filename&gt; and parse it as if it were
# local. &lt;filename&gt; is generally a UNC-based name, allowing a
# centralized lmhosts file to be maintained on a server.
# It is ALWAYS necessary to provide a mapping for the IP address of the
# server prior to the #INCLUDE. This mapping must use the #PRE directive.
# In addtion the share "public" in the example below must be in the
# LanManServer list of "NullSessionShares" in order for client machines to
# be able to read the lmhosts file successfully. This key is under
#\machine\system\currentcontrolset\services\lanmanserver\parameters\nullsessionshares
# in the registry. Simply add "public" to the list found there.
#
# The #BEGIN_ and #END_ALTERNATE keywords allow multiple #INCLUDE
# statements to be grouped together. Any single successful include
# will cause the group to succeed.
#
# Finally, non-printing characters can be embedded in mappings by
# first surrounding the NetBIOS name in quotations, then using the
# \0xnn notation to specify a hex value for a non-printing character.
#
# The following example illustrates all of these extensions:
#
# 102.54.94.97 rhino #PRE #DOM:networking #net group's DC
# 102.54.94.102 "appname \0x14" #special app server
# 102.54.94.123 popular #PRE #source server
# 102.54.94.117 localsrv #PRE #needed for theinclude
#
# #BEGIN_ALTERNATE
# #INCLUDE \\localsrv\public\lmhosts &lt;file://\\localsrv\public\lmhosts&gt;
# #INCLUDE \\rhino\public\lmhosts &lt;file://\\rhino\public\lmhosts&gt;
# #END_ALTERNATE
#
# In the above example, the "appname" server contains a special
# character in its name, the "popular" and "localsrv" server names are
# preloaded, and the "rhino" server name is specified so it can be used
# to later #INCLUDE a centrally maintained lmhosts file if the "localsrv"
# system is unavailable.
#
# Note that the whole file is parsed including comments on each lookup,
# so keeping the number of comments to a minimum will improve performance.
# Therefore it is not advisable to simply add lmhosts file entries onto the
# end of this file.

192.168.1.1 test #PRE #DOM:testdomain #net group's DC
</screen>


<para>
Ud over man-siderne og dokumentationen, der installeres i
<filename>/usr/doc</filename>, findes der en bog om SAMBA. Den er ikke
blændende godt redigeret hele vejen igennem, men er ualmindelig rar at
have stående som opslagsværk, hvis du administrerer en server med SAMBA.
Sidst i bogen er der et rigtig godt kapitel om fejlfinding.
</para>

<para>
John D. Blair: <emphasis>SAMBA: Integrating UNIX and
Windows</emphasis>, Specialized Systems Consultants, Inc., ISBN:
1-57831-006-7, 290 sider + CDROM
</para>
<para>
Der findes også en glimrende online bog fra O'Reilly, der 
hedder <ulink url="http://sunsite.auc.dk/samba/oreilly/using_samba/">"Using Samba"</ulink> skrevet af Robert Eckstein, David Collier-Brown, Peter Kelly
</para>

<para>
En anden virkelig god bog om Samba er efter sigende 
Gerald Carter & Richard Sharpe, <emphasis>Sams Teach Yourself Samba in
24hrs</emphasis>, 
Sams Publishing 1999. ISBN 0-672-31609-9.
</para>

</sect3>
</sect2>
</sect1>


<sect1 id="postfix">
<title>Postfix</title>

<indexterm><primary>Postfix</primary></indexterm>
<indexterm><primary>E-post</primary><secondary>Postfix</secondary></indexterm>
<indexterm><primary>MTA (Mail Transfer Agent)</primary><secondary>Postfix</secondary></indexterm>
<indexterm><primary>Sendmail</primary><secondary>Postfix</secondary></indexterm>

<para>
<application>Postfix</application> er en moderne MTA (mail transfer agent), dvs. et program til at 
flytte e-post fra en postserver til en anden. I mange år var 
<application>Sendmail</application> den MTA, alle brugte, men i de sidste 
par år har det vist sig, at <application>Sendmail</application> ikke kan
leve op til de sikkerhedskrav, man typisk stiller.
</para>

<para>
<application>Postfix</application> har umiddelbart tre fordele:
  <itemizedlist mark="bullet" spacing="compact">
    <listitem>
      <para>
      Skrevet af Wietse Venema, som er kendt for sin store viden og 
      kunnen indenfor edb-sikkerhed.
      </para>
    </listitem>
    <listitem>
      <para>
      Systemet er brudt ned i mange små delprogrammer. Hver komponent er 
      lettere at overskue og det mindsker risikoen for fejl.
      </para>
    </listitem>
    <listitem>
      <para>
      Langt de fleste komponenter behøver ikke at blive kørt som root,
      hvilket betyder at evt. programmerings- eller konfigureringsfejl ikke
      bliver nær så alvorlige.
      </para>
    </listitem>
  </itemizedlist>
</para>

<para>
Mandrake Linux version 7.1 kommer med <application>Postfix</application> og
<application>Sendmail</application> og du kan under installationen 
vælge hvilken MTA, du vil bruge. Dette valg har du endnu ikke under Red Hat
eller SuSE, og i det følgende vil vi antage at du har Red Hat kørende.
</para>

<para>
Først skal du stoppe og afinstallere <application>sendmail</application> 
inden du går i gang med <application>Postfix</application>. 
</para>

<screen>
<prompt>[root@linus /root]#</prompt> <userinput>cd /etc/rc.d/init.d</userinput>
<prompt>[root@linus init.d]#</prompt> <userinput>./sendmail stop</userinput>
Shutting down sendmail:                [ OK ]
<prompt>[root@linus init.d]#</prompt> <userinput>rpm -e sendmail</userinput>
</screen>

<para>
Du er nu klar til at downloade og installere <application>Postfix</application>.
Idet <application>Postfix</application> endnu ikke er et færdigt produkt,
frigives der jævnligt nye versioner. Du kan finde programmet på 
<ulink url="ftp://sunsite.auc.dk">sunsite.auc.dk</ulink> i kataloget
<filename>/mirrors/ftp.redhat.com/pub/contrib/libc6/i386/</filename>. I skrivende
stund findes en udgave fra 31. december 1999 under navnet 
<filename>postfix-19991231_pl07-1.i386.rpm</filename>.

</para>

<para>
Efter du har downloaded filen, skal du installere den.
</para>

<screen>
<prompt>[root@linus /root]#</prompt> <userinput>rpm -i postfix-19991231_pl07-1.i386.rpm</userinput>
postfix-script: Warning: Creating missing Postfix pid directory
postfix-script: Warning: Creating missing incoming directory
postfix-script: Warning: Creating missing bounce directory
postfix-script: Warning: Creating missing defer directory
postfix-script: Warning: Creating missing deferred directory
postfix-script: Warning: Creating missing saved directory
postfix-script: Warning: Creating missing corrupt directory
postfix-script: Warning: Creating missing public directory
postfix-script: Warning: Creating missing private pid directory
<prompt>[root@linus /root]#</prompt> <userinput>mkdir /var/log/mail</userinput>
<prompt>[root@linus /root]#</prompt> <userinput>cd /etc/rc.d/init.d</userinput>
<prompt>[root@linus init.d]#</prompt> <userinput>./postfix start</userinput>
Starting postfix: postfix-script: starting the Postfix mail system
<prompt>[root@linus init.d]#</prompt> <userinput>chkconfig --level 3 postfix on</userinput>
</screen>

<para>
Nu har du fået udskiftet <application>Sendmail</application> med 
<application>Postfix</application>, og den nye MTA vil altid blive startet
op, når du kører i runlevel 3 (den sidste kommandolinje).
</para>

<para>
Konfigurationen af <application>Postfix</application> sker i filen 
<filename>/etc/postfix/main.cf</filename>. Som et minimum skal du
ændre <emphasis>myhostname</emphasis> og <emphasis>mydomain</emphasis> til 
noget fornuftigt, men ofte er det ikke nødvendigt idet Postfix tager denne
information fra sendmail.cf.
Du kan få <application>Postfix</application>
til at genindlæse en konfiguration med at udføre kommandoen 
<command>postfix reload</command> som root.
</para>

<para>
Postfix har hjemmesiden <ulink url="http://www.postfix.org/">www.postfix.org</ulink>,
hvor der også er en god FAQ.
</para>

</sect1><!-- postfix -->

<sect1 id="news-server">
<title>Linux som news server</title>
<indexterm><primary>News server</primary></indexterm>
<indexterm><primary>NNTP</primary></indexterm>

<para>
Et naturligt spørgsmål ville være: "Hvorfor skulle man overhovedet
køre en lokal newsserver?". Det er der faktisk flere gode grunde til:
</para>

<itemizedlist mark="bullet">
<listitem>
 <para>
  Hvis der er flere på lokalnettet, der læser de samme nyhedsgrupper, så
  skal de kun downloades en gang.
 </para>
</listitem>

<listitem> 
 <para>
  Hvis man ikke lige kan overskue hvilken newsreader man ønsker at
  bruge, så står man med leafnode frit for at teste 1.000 newsreadere og
  skal stadig kun downloade serverlister en gang.
 </para>
</listitem>

<listitem> 
 <para>
  Hvis man læser news fra flere end en newsserver
  f.eks. <filename>news.sslug.dk</filename> og
  <filename>news.get2net.dk</filename>, så kan man "slå" disse
  serveres nyhedsgrupper sammen til en lokal server.
 </para>
</listitem>

<listitem> 
 <para>
  Man kan læse news Offline som hvis man var Online. 
 </para>
</listitem>

<listitem> 
 <para>
 </para>
</listitem>

</itemizedlist>

<para>
Et valg af news-server er leafnode.
</para>

<sect2 id="leafnode">
<title>Leafnode, en NNTP server til hobby brug</title>
<indexterm><primary>Leafnode</primary></indexterm>

<para>
Ud over de generelle argumenter for at køre nyhedsserver selv kan vi
tilføje følgende som angår news-serveren leafnode
</para>

<itemizedlist mark="bullet">
<listitem>
 <para>
  Rigtig nem konfiguration.
 </para>
</listitem>
<listitem> 
 <para>
  Ingen vedligehold.
 </para>
</listitem>
<listitem> 
 <para>
  Leafnode er en dynamisk newsserver, den henter kun de grupper der
  faktisk bliver læst.
 </para>
</listitem>
</itemizedlist>

<para>
Så der er faktisk mange gode grunde til at bruge Leafnode.
</para>

<sect3 id="leafnode-installation">
<title>Installation af leafnode</title>

<para>
Installationen af Leafnode er nem, til at starte med skal kildekoden
hentes på 
<ulink url="http://www.leafnode.org">http://www.leafnode.org</ulink>. Grunden
til at leafnode ikke er med i standard distributionerne kunne være at
den er dækket af en anden licens end GPL. Grunden til dete kan slås
op i deres FAQ: 18. Why is Leafnode not licensed under the GPL?
</para>

<para>
<emphasis>There are several reasons: 
1.Originally, Arnt Gulbrandsen licensed Leafnode under his own license: 
Use, modification and distribution is allowed without limitation,
warranty, or liability of any kind.</emphasis>
</para>

<para> 
<emphasis>
This license is very broad. The same spirit is (in my opinion)
contained in the X11 license, which is used by Leafnode nowadays.  2.I
do not like the philosophy of the FSF. They seem to emphasize that
every project they conceived is good whereas everything else is
bad. If they cannot argue the software away this way, they claim it to
be part of the project, such as calling Linux "GNU/Linux".
</emphasis>
</para>

<para>
Det kan man vel så lide eller lade være. 
</para>

<para>
Når man så har hentet tar-pakken, den nyeste er vist 1.9.14 og pakket den ud:
</para>

<screen>
<prompt>[root@linus /root]#</prompt> <userinput>tar -xzvf leafnode-1.9.14.tar.gz </userinput>
<prompt>[root@linus /root]#</prompt> <userinput>cd leafnode-1.9.14; less INSTALL</userinput>
</screen>

<para>
I denne fil er installationen beskrevet trin for trin, men vi løber
den lige igennem alligevel. Dette er beskrevet fra en Redhat, det kan
være at configurationsfilerne ligger andre steder på andre
distributioner
</para>

<screen>
<prompt>[root@linus leafnode-1.9.14]#</prompt> <userinput>./configure; make</userinput>
</screen>

<para>
Herefter skal der oprettes en bruger news:
</para>

<screen>
<prompt>[root@linus leafnode-1.9.14]#</prompt> <userinput>adduser news</userinput>
</screen>

<para>
Så må man køre:
</para>

<screen>
<prompt>[root@linus leafnode-1.9.14]#</prompt> <userinput>make install</userinput>
</screen>

<para>
Så skal der rettes i configurationsfilen til leafnode, denne er
placeret i <filename>/etc/leafnode/config</filename>. Det interessante
er:
</para>

<screen>
## Dette er en del at leafnode konfigurationsfilen /etc/leafnode/config
## This is the NNTP server leafnode fetches its news from.
## You need read and post access to it. Mandatory.
server = news.sslug.dk
</screen>

<para>
Her kan man så bare tilføje flere servere hvis man ønsker at læse fra
flere. Skal der bruges brugernavn/adgangskode på en af dem tilføjes det
bare nedernunder:
</para>

<screen>
# username = gulbrandsen
# password = secret
</screen>

<para>
Og dette er faktisk alt der skal gøres ved konfigurationsfilen. De
andre parametre er rigtigt godt beskrevet og omhandler ting som:
</para>

<itemizedlist mark="bullet">
<listitem>
 <para>
  Hvor længe indlæg skal gemmes.
 </para>
</listitem>
<listitem> 
 <para>
  Hvor længe der skal hentes nye indlæg, hvis gruppen ikke bliver læst.
 </para>
</listitem>
</itemizedlist>

<para>
Disse parametre kan man altid stille på hvis man syntes den ikke fungerer tilfredsstillende, men default er faktisk rimeligt gode indstillinger. 
</para>

<para>
Så skal crontab editeres for brugeren news:
</para>

<screen>
<prompt>[root@linus leafnode-1.9.14]#</prompt> <userinput>crontab -u news -e</userinput>
</screen>

<para>
Heri tilføjes linien:
</para>

<screen>
0 0 * * * /usr/local/sbin/texpire
</screen>

<para>
Dette får den til at slette gamle indlæg hver midnat. Det er
smart hvis man sørger for at det er et tidspunkt hvor computeren er
tændt. Nå, ja, hvis den er tændt og man sover i samme rum, så lad være
med at sætte den til at køre mens du sover. Der er rimeligt meget tryk
på disken, når denne køres, da der er mange filer der skal checkes
igennem, så det kan man godt vågne af :-).
</para>

<para>
Så skal inet dæmonen sættes op til at starte Leafnode. Først
kontrolleres at inet er startet (Der skal være en stjerne foran i
ntsysv). Så editeres filen <filename>/etc/inetd.conf</filename>, det
er denne linie der skal ses på: 
</para>

<screen>
nntp stream tcp nowait root /usr/sbin/tcpd /usr/local/sbin/leafnode 
</screen>

<para>
Her er leafnode sat til at gå igennem tcpwrapperen så der skal også
lige åbnes for denne. I <filename>/etc/hosts.deny</filename> skal der helst (Af
sikkerhedsmæssige årsager) stå: 
</para>

<screen>
ALL: ALL
</screen>

<para>
hvorefter man editerer <filename>/etc/hosts.allow</filename> og
indsætter linien:
</para>

<screen>
leafnode: localhost
</screen>

<para>
Her kan så
tilføjes andre maskiner der skal have lov til at læse (se <command>man
hosts.allow</command>). Og så skal inetd genstartes:
</para>

<screen>
<prompt>[root@linus leafnode-1.9.14]#</prompt> <userinput>/etc/rc.d/init.d/inet restart</userinput>
</screen>

<para>
Så er det hele ved at være sat op.  Nu køres
<command>/usr/local/sbin/fetchnews</command> for første gang. Første
gang køres den med <filename>-f</filename> som parameter, dette for
leafnode til at læse serverlisterne på de angivne servere. Denne skal
køres som root eller news. Man kan igen putte den i news´s crontab
hvis ens forbindelse er oppe hele tiden, ellers kan den med fordel
puttes i ens opkaldsscripts eller man kan køre den manuelt når man
ønsker at poste/hente news. Det sidste har jeg valgt derfor har jeg
editeret <filename>/root/.bashrc</filename> og puttet denne linie i: 
</para>

<screen>
alias news='/usr/local/sbin/fetchnews -vvv' 
</screen>

<para>
De 3 v'er giver bare meget
output fra fetchnews og nu kan jeg skrive news som root og køre
fetchnews. Når man poster gennem leafnode, bliver postningerne lagt i
kø indtil fetchnews bliver kørt igen og indlægget bliver postet og nye
poste fra de subscribede grupper bliver hentet.  Nu mangler vi kun at
sætte newsreaderen op til at læse fra localhost i stedet for den gamle
newsserver.
</para>
</sect3>
</sect2>
</sect1>

<sect1 id="linux-x">
<title>Linux som X-server og terminal</title>
<para>
En Linux-maskine kan være en glimrende X-server for andre mindre
grafiske terminaler. Tilsvarende kan en Linux-maskine snildt virke som
en X-terminal. 
</para>

<sect2 id="linux-xserver">
<title>Linux som X-server</title>
<para>
For at en Linux-maskine kan virke som grafisk login server, så skal
der køre en X-server på maskinen. Normalt kræver dette, at man kører i
runlevel 5, dvs. en ændrer linie i <filename>/etc/inittab</filename>
(eksemplet er fra Red Hat).
</para>

<screen>
id:3:initdefault:
</screen>

<para>
til 
</para>

<screen>
id:5:initdefault:
</screen>

<para>
og tilsvarende længere nede i samme fil
</para>

<screen>
# Run xdm in runlevel 5
# xdm is now a separate service
x:5:respawn:/etc/X11/prefdm -nodaemon
</screen>

<para>
ændres til
</para>

<screen>
# Run xdm in runlevel 5
# xdm is now a separate service
x:5:respawn:/etc/X11/prefdm
</screen>

<para>
Anvender du GNOMEs login system, så skal du endvidere rette i
<filename>/etc/X11/gdm/gdm.conf</filename>.
</para>

<screen>
[xdmcp]
Enable=0
</screen>

<para>
rettes til 
</para>

<screen>
[xdmcp]
Enable=1
</screen>


<para>
og root skal så genstarte i runlevel 5 ved at køre <command>init 5</command>.
Den option <filename>-nodaemon</filename> der blev fjernet gør at
andre maskiner kan koble sig ind på serveren. Der er således noget med
sikkerhed, man måske skal tænke på. På et mindre lukket netværk
spiller det ingen rolle. Nu har du en X-server, og lad os nu se på en
Linux-klient.
</para>
</sect2>

<sect2 id="linux-xklient">
<title>Linux som X-klient</title>
<para>
Du skal logge ind på din Linux-maskine i runlevel 3 og som root skrive 
<command>/usr/X11R6/bin/X -query SERVER</command>, hvor
<filename>SERVER</filename>  er navnet på din X-server. Denne kommando
kan du evt. så senere indsætte som en del af 
<filename>/etc/inittab</filename>.
</para>

<screen>
x:3:respawn:/usr/X11R6/bin/X 2>/var/log/Xlog -dpi 100 -query SERVER
</screen>

<para>
hvor SERVER byttes ud med navnet på den maskine, der er X-server.
</para>
</sect2>

</sect1>



<sect1 ID="appletalk">
<TITLE>AppleTalk</TITLE>
<INDEXTERM><PRIMARY>Apple</PRIMARY><SECONDARY>AppleTalk</SECONDARY></INDEXTERM>
<INDEXTERM><PRIMARY>Mac</PRIMARY><SECONDARY>AppleTalk</SECONDARY></INDEXTERM>

<PARA>
Linux kan ikke bare forbindes til Apple via ftp, men også via 
almindelig fildeling.
For brugerne af lokalnettet kommer Linux-serveren så til at optræde
som en Mac-server.
</PARA>

<PARA>
Okay, du har endelig fået installeret linuxmaskinen  og
er nu parat til at netværke med den. 
Dette er ikke så svært, hvis de andre klienter i
netværket kører MS-Windows®, da Samba-protokollen (som
får før nævnt) følger med stort set alle distributioner
af Linux. Dette er ikke så  lige til med
Mac-protokollen, da du selv må dowloade denne.
Til at forbinde et Mac-netværk med en linuxmaskine
bruges et program/protokol der hedder Netatalk. Dette
program får på listig vis din linuxmaskine til at se ud
som en Macintosh filserver. Programmet understøtter to
typer af AppleTalk protokollen; nemlig Classic
AppleTalk og AppleShareIP (sidst-nævnte TCP/IP til
Mac). 
</PARA>

<PARA>
Programmet blev oprindelig udviklet af University of
Michigan's Research Systems Unix Group og understøttede
oprindelig kun Classic AppleTalk. Sidenhen er det
blevet udviklet og vedligeholdt af Adrian Sun, der
udover at debugge programmet også har implementeret
understøttelse af AppleShareIP og andre udvidelser. 
</PARA>

<PARA>
Netatalk kan hentes fra:
<ULINK URL="ftp://ftp.cobaltnet.com/pub/users/asun/release/netatalk-1.4b2+asun2.1.3.tar.gz">
ftp://ftp.cobaltnet.com/pub/users/asun/release/netatalk-1.4b2+asun2.1.3.tar.gz</ULINK>
</PARA>

<PARA>
og færdigoversat fra:
<ULINK URL="http://thehamptons.com/anders/netaltalk/mirror/netatalk-1.4b2+asun2.1.1.x86-shadow-linux.tar.gz">
http://thehamptons.com/anders/netaltalk/mirror/netatalk-1.4b2+asun2.1.1.x86-shadow-linux.tar.gz</ULINK>
</PARA>

<PARA>
Til Debian:
<ULINK URL="http://cgi.debian.org/Packages/stable/net/netatalk.html">
http://cgi.debian.org/Packages/stable/net/netatalk.html</ULINK>
</PARA>

<PARA>
Til .rpm-baserede systemer (SuSE, RedHat, Mandrake):
<ULINK URL="ftp://contrib.redhat.com/pub/contrib/libc6/SRPMS/netatalk-1.4b2+asun2.1.3-6.src.rpm">
ftp://contrib.redhat.com/pub/contrib/libc6/SRPMS/netatalk-1.4b2+asun2.1.3-6.src.rpm</ULINK>
(husk at køre rpm --rebuild -sti-til-source  for at
oversætte og installere den)
</PARA>

<PARA>
Hvis du har downloadet en af .tar.gz filerne skal du
gøre sådan her: 
</PARA>

<SCREEN>
<PROMPT>[root@linus /root]# </PROMPT><USERINPUT>tar -xvzf &lt;filnavn&gt;.tar.gz</USERINPUT>
<PROMPT>[root@linus /root]# </PROMPT><USERINPUT>cd netatalk&lt;tab&lt;&gt;enter&gt;</USERINPUT>
<PROMPT>[root@linus netatalk]# </PROMPT><USERINPUT>make install</USERINPUT>
</SCREEN>

<PARA>
Netatalk bor i biblioteket /usr/local/atalk/. Server
binaries og config-filer ligger i /usr/local/atalk/etc
og userland binaries i /usr/local/atalk/bin. Hvis du
ikke ikke kan finde netatalk efter du har installeret
den, så gør følgende: find /* -name atalkd -print for
at finde den. 
</PARA>

<PARA>
For at kunne bruge Classic AppleTalk protokollen, skal
understøttelsen af denne være slået til i kernen. For
at finde ud af, om den er det, gør følgende: dmesg |
grep -i apple  Hvis den ikke er der, skal du oversætte
din kerne om, med denne option slået til. 
</PARA>

<PARA>
Det program der gør AppleTalk shares tilgængelige i
både Classic AppleTalk og AppleShareIP hedder afpd og
får sin konfiguration fra en fil der hedder afpd.conf.
</PARA>

<PARA>
Den simpleste afpd.conf file man kan lave indeholder
kun én -, hvilket står "Denne Computer" med alle
standard options koblet til. En lidt mere kompliceret
konfiguration kunne være følgende:
</PARA>

<SCREEN>
- 
MinLinuxMac -port 12000
"Denne Linux Leger Mac" -port 12001
"Der Ude" -port 12000 -address 206.114.89.46

"Guest Volume" -nocleartxt  -loginmesg "Vær venlig ved
min gæsteserver !"
"Boksen" -noguest -port 12000
"Det Helligste" -notcp -defaultvol &lt;path&gt; -systemvol
&lt;path&gt;
</SCREEN>

<PARA>
Forklaring over konfigurationsfilen:
</PARA>

<PARA>
Den første linie kun med en bindestreg gør at
linuxmaskinen laver en server med sit hostnavn.
Den anden linie laver en server ved navn MinLinuxMac på
port 12000.
Den tredje linie laver en server kaldet "Denne Linux
Leger Mac" på port 12001.
Den fjerde linie laver en server kaldet "Der Ude",
bundet på port 12000 og med den virtuelle IP-adresse
206.114.89.46.
</PARA>

<PARA>
I næste sektion laver linien "Guest Volume" -nocleartxt
-loginmesg "Vær venlig ved min gæsteserver !" en
dedikeret gæsteserver, der ikke spørger om adgangskode og
som giver loginbeskeden "Vær venlig...".
Linien "Boksen" -noguest -port 12000 laver en volume på
port 12000 der ikke tillader gæsteadgang.
Linien "Det Helligste" -notcp -defaultvol &lt;path&gt;
-systemvol &lt;path&gt; laver en server der ikke bruger
TCP/IP (kun DDP) og som bruger to alternative
konfigurationsfiler, i stedet for de to standardfiler
AppleVolumes.default AppleVolumes.system. Husk at rette
i &lt;path&gt; hvis du vil gøre dette.
</PARA>

<PARA>
Lav et Classic AppleTalk share:
</PARA>

<PARA>
For at lave et Classic AppleTalk share skal du editere
filen /usr/local/atalk/etc/AppleVolumes.system
Eks.vis hvis du indsætter linien /data/www
"Webserver" laves der en volume kaldet Webserver, hvis
indhold så vil kunne ses.
</PARA>

<PARA>
Den anden ting denne  fil styrer er "type-creator
mappings". På Macintosh består alle filer (ulige af på
Unix) af to dele. En "resource  fork" og en "data
fork". Resource forke'en gemmer på ting som ikoner,
filtyper, og mapping til den applikation der i sin tid
blev brugt til at lave filen. 
Siden Linux filer generelt er en lang liste af
bogstaver, i stedet for delt i to forke/forks, skriver
netatalk resource forkene i filer i et bibliotek kaldet
.AppleDouble. Derfor skabes én Macintosh fil af to
filer på Linuxmaskinen; eks.vis <FILENAME>enfil.txt</FILENAME> og
.AppleDouble/<FILENAME>enfil.txt</FILENAME>. 
Denne fil ville så, hvis det var en tekstfil og Word
havde lavet den, skullet have haft følgende
type-creator mapping i afpd.conf: .txt  TEXT
MSWD for at fortælle afpd at .txt filer er  TEXT filer
og at det var MS-Word der  blev brugt til at fremstille
filen med. Afpd vil så fortælle dette til Macintosh
maskiner der støder på filer der ender på .txt og som
ikke er blevet oprettet på en Macintosh maskine. 
</PARA>

<PARA>
ATALKD daemonen:
</PARA>

<PARA>
Atalkd er det kernel interface der bruges til Classic
Appletalk. Det vil agere forbindelse mellem AppleTalk
kernemodulet og resten af Classic AppleTalk's
funktioner i netatalk. Den vil sågar også tage sig af
AppleTalk routing mellem flere netkort. 
</PARA>

<PARA>
Atalkd er styret af konfigurationsfilen
atalkd.conf. Den enkleste form for konfigurationsfil
(og også den enkleste måde at konfigurere atalkd på) er
en tom fil. Denne fil vil atalkd så selv overskrive med
nogle ganske fornuftge opsætninger. Det er tilrådeligt
at specificere alle de netkort man har i atalkd.conf
filen. Hvis man specificerer mere end et netkort vil
atalkd selv route AppleTalk pakker mellem netkortene.
</PARA>

<PARA>
Følgende konfiguration kunne overvejes:
</PARA>

<SCREEN>
eth0 -net 153-174 -addr 154.212 -zone "Langt Ude"
eth1 -net 175-200 \adr 182.318 -zone "På Landet" -seed  
</SCREEN>

<PARA>
Nå - men hvad betyder så dette ? Forklaringen er ret
simpel; hver linie i filen atald.conf specificerer ét
netkort. I dette eksempel betyder det at eth0 (første
netkort i linuxmaskinen) bruges på et netværk med
AppleTalk addresser mellem 153 og 174 (se eventuelt
afsnittet om TCP/IP for nærmere forklaring om
netværksadressering). Dette netkort (eth0) er her
konfigureret til at bruge AppleTalk adressen 154.212 og
eksisterer i zonen "Langt Ude". Næste linie betyder at
det sekundære (eth1; andet netkort på en
linuxmaskine) eksisterer på et netværk mellem 175 og
200 med adressen 182.318 og pakker til zonen "På
Landet". Derfor vil atalkd agerer router mellem på
dette netværk og bridge mellem de to netværk
specificeret. Bemærk at netværksnumrene  ikke må
overlappe hinanden; ej heller må der være andre routere
på eth1 netværket. Hvis atalkd finder en anden router,
end den specificeret i filen, vil programmet afslutte
sig selv. Bemærk også at hvis du har flere end 5
maskiner på netværket skal du angive dette overfor afpd
(se nedenfor) - eller virker det bare ikke ! Derfor
anbefales det at læse afsnittet om TCP/IP - det er ikke
så svært som det umiddelbart ser ud til.
</PARA>

<PARA>
Så kommer den sjove del af det hele - vi skal prøve at
starte Netatalk-serveren op!
</PARA>

<PARA>
Først skal du finde ud af hvor Netatalk's starup-script
ligger, hvis du ikke allerede ved det.
</PARA>

<PARA>
Dette kan du gøre sådan her: 
</PARA>

<SCREEN>
find /* -name "*atalk*" -print 
</SCREEN>

<PARA>
eller med                       
</PARA>

<SCREEN>
locate "*atalk*" 
</SCREEN>

<PARA>
(husk at køre updatedb som root efter installationen af
Netatalk, ellers vil den ikke kunne findes af databasen
af locate kommandoen).
</PARA>

<PARA>
 Når du så er i det bibliotek hvor scriptet er skriver
du: 
<COMMAND>./rc.atalk start</COMMAND> og venter et par sekunder på at
Netatalk starter op.
Dette vil så starte en filserver der kører Classic
AppleTalk. Kun hvis du har specificeret nogle TCP/IP
adresser i afpd.conf filen vil en tilsvarende Appletalk
IP server blive startet også. Atalkd er den der tager
længst tid at starte op, da den først checker netværket
ud før den registrerer sig selv. 
Alternativt kan du nøjes med kun at at starte en TCP
server , hvis du på forhånd har konfigureret en i
atalkd.conf filen. Dette gøres sådan her:
</PARA>

<SCREEN>
/usr/local/atalk/etc/afpd -F
/usr/local/atalk/etc/afpd.conf
</SCREEN>

<PARA>
Bemærk ! Hvis du skal bruge flere end 5 connections til
Netatalk-serveren  skal du angive et antal
maximumforbindelser når du starter afpd. Dette gøres
med -c argumentet, á là:
<COMMAND>afpd -c 25</COMMAND>
Dette vil så give mulighed for 25
connections/forbindelser til Netatalk-serveren.   
</PARA>

<PARA>
Hvis denne kommando lykkedes uden at brokke sig, så gå
hen til en Mac og åben "Chooser" (under Applemenuen i
venstre side). Klik på AppleShare og se om din
Netatalk-server  er hjemme. Hvis du bruger AppleShareIP
skal du klikke på AppleShareIP knappen og manuelt
indtaste mskinens navn eller IP-nummer. Hvis alt så er
lykkedes vel, vil du blive bedt om at indtaste din
adgangskode. Husk at du af sikkerhedsmæssige årsager ikke
kan logge ind på filserveren, som root og kun hvis dit
brugernavn har 8 eller færre karakterer - så fortvivl
ikke hvis du ikke kan logge ind som root. Guest
(gæsteadgang) access til filserveren vil være tilladt,
hvis det ikke er blevet forbudt i afpd.conf. Hvis det
lykkedes dig at logge ind vil du blive præsenteret for
en liste af volumes du så  kan vælge - og mounte. Det
er tilrådeligt at bruge en af de starup-scripts der
følger med Netatalk til at starte denne med når
maskinen booter. Alt afhængig af hvilken distribution
du bruger skal du følge fremgangsmåden for hvordan din
maskine gør. På en RedHat skal du nok kigge på
/etc/rc.d/rc.local. Ellers er et andet godt bud
/etc/init.d, for at finde ud af hvor dine
startup-scripts befinder sig.
</PARA>

<PARA>
Andre ting man kan gøre med Netatalk: 
</PARA>

<PARA>
Tovejs-krypteret "password authentication" er
understøttet af Netatalk. Men for at dette skal kunne
bruges må serveren nødvendigvis vide hvor
klartekst-adgangskoderne kan findes henne. Da
systemadgangskoderne er krypterede ved serveren ikke hvad
klartekst-adgangskoderne er, så det skal den have at
vide. Ved at oprette en .passwd fil i brugerens
hjemmebibliotek med klartekstadgangskode i kan
tovejskryptering opnås (punktummet foran i filen
betyder at den er skjult og ikke kan ses, hvis man ikke
bruger ls -a). 
</PARA>

<PARA>
Hvorom det hele er, så er det ganske usikkert at gemme
sine adgangskoder på et så forudsigeligt sted. Derfor
kræver Netatalk at hver .passwd fil ejes af den
pågældende bruger og dennes gruppe og kun og alene er
læs -og skrivbar af denne bruger. I enkle ord skal du
en gang for alle bare gøre sådan med .passwd filen:
</PARA>

<SCREEN>
<PROMPT>[root@linus /root]# </PROMPT><USERINPUT>chown bruger.gruppe /home/&lt;brugernavn&gt;/.passwd</USERINPUT>
<PROMPT>[root@linus /root]# </PROMPT><USERINPUT>chmod 600 /home/&lt;brugernavn&gt;/.passwd</USERINPUT>
</SCREEN>

<PARA>
Hvor bruger er brugerens gruppe og gruppe er brugerens
default gruppe.
</PARA>


<PARA>
Udskrivning via Netatalk:
</PARA>

<PARA>
Netatalk kan ikke bare agerer filserver for Mac's. Den
kan også lave print spooling og endda printe til
eksisterende AppleTalk spools. AppleTalk spooling opnås
med et program der kaldes papd. Konceptet er at du
allerede har en lokal (parralel eller seriel
printer) der er sat op under Linux og som har Mac
drivere installeret.  papd vil så annocere sig selv på
netværket, som et print spool og acceptere jobs fra
Mac-maskiner på netværket. Dette kan lade sig gøre, da
printerjobs er Post Script filer, som papd så vil feede
til Linux printsystem (lpd). Eksempler på hvordan papd
sættes op kan findes på:
</PARA>

<PARA>
<ULINK URL="http://www.giub.unibe.ch/~eugster/appleprint.html">
http://www.giub.unibe.ch/~eugster/appleprint.html</ULINK>
</PARA>

<PARA>
Det modsatte af dette - altså at printe fra en
linuxmaskine til en Macintosh printer - kan opnås ved
at bruge pap. Se hvordan med kommandoen man pap. 
</PARA>

<PARA>
Andet nyttigt man skal vide:
</PARA>

<PARA>
Just som på Linux og MS-Windows® er der værktøjer til
at pinge maskiner med.  Over TCP/IP findes der
"aecho" til AppleTalk, der virker ligesom
ping. Kommandoen "getzones" vil returnere en liste over
de Macintosh zoner der findes på netværket. Ydermere
vil kommandoen "nbplkup" uden options returnere en
uddybende liste over alle de AppleTalk services der
findes på det lokale netværk. Der findes et varia af
mange andre programmer til at bruge med Netatalk - så
vær ikke bange for at gå i gang med at udforske området
- held og lykke !
</PARA>

<PARA>
Andre steder på nettet man bør besøge, hvis man bruger
Netatalk:
</PARA>

<PARA>
The Netatalk HOWTO:
<ULINK URL="http://thehamptons.com/anders/netatalk/">
http://thehamptons.com/anders/netatalk/</ULINK>
</PARA>

<PARA>
The Netatalk Faq-O-Matic:
<ULINK URL="http://www.zettabyte.net/fomserve/netatalk/cache/1.html">
http://www.zettabyte.net/fomserve/netatalk/cache/1.html</ULINK>
</PARA>

<PARA>
The Original Netatalk pages:
<ULINK URL="http://www.umich.edu/~rsug/netatalk/">
http://www.umich.edu/~rsug/netatalk/</ULINK>
</PARA>

<PARA>
The Netatalk Admins list:
<ULINK URL="mailto:netatalk-admins-request@umich.edu">
netatalk-admins-request@umich.edu</ULINK>
</PARA>

<PARA>
All registered trademarks and copyrighted names
courtesy of their respective owners.
The author of this article does not under any
circumstances claim rigth over or use of the respective
trademarks mentioned in this article.
</PARA>

<PARA>
MS-Windows® is a trademark of Microsoft® Corporation
Microsoft® is a trademark of Microsoft® Corporation
Macintosh®, AppleTalk and AppleShareIP are trademarks
of Apple® Corporation.
</PARA>

<!--
Denne artikel er oversat fra engelsk af nedenstående
person. Artiklen er taget fra Linux Format nr. 1, side
67 - 70. 

Written, altered and translated by / skrevet, ændret
og oversat af 
Kim Futtrup Petersen, 
wintersilence@hotmail.com
Tuesday, 18.07.2000
-->

</sect1><!-- appletalk -->


</chapter>
