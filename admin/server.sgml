<!-- $Id$ -->
<chapter id="linux-netvaerk-server">
<title>Linux som server</title>
<indexterm><primary>Netværk</primary></indexterm>

<para>
Vi er tidligere kommet ind på en mere grundlæggende
forklaring af netværk, TCP/IP og netværksadresser, idet dette er helt
centralt for alt med netværk. 
</para>

<para>
I dette kapitel ser vi nærmere på en række server-funktionaliteter
DHCP, NFS (Unix fildeling), NIS (adgangskode-deling) og AppleTalk
(Mac-server). Desuden er der afsnit om hvordan man får en X-server og
klient til at virke. Endeligt behandles også hvordan du kan få adgang
til din Linux-maskine via modem (eng. dial-in modem).
</para>

<sect1 id="dhcp">
<!-- Skrevet af Henrik Størner "henrik@storner.dk" -->
<title>Opsætning af DHCP-server</title>
<indexterm><primary>DHCP</primary></indexterm>
<para>
Hvis man har mere end et par computere på sit netværk, eller hvis man
ofte flytter computerne mellem forskellige netværk, så bliver det 
hurtigt besværligt at skulle konfigurere deres IP-adresse,
standard-gatewayadresse og navneserver hver gang man flytter dem rundt.
</para>

<para>
Løsningen på det problem er at bruge DHCP - "Dynamic Host
Configuration Protocol". Som navnet antyder, så er det en speciel
protokol som er beregnet til at en computer kan blive konfigureret
automatisk, uden at man skal ind og pille i opsætningen på hver enkelt
maskine.
</para>

<sect2 id="dhcp-virkemaade">
<title>Hvordan virker DHCP?</title>
<para>
Når man tænder en computer der bruger DHCP, så vil den sende en
forespørgsel ud på sit lokale netværk for at spørge efter en
DHCP-server. Hvis der er en DHCP-server på nettet, så tager serveren en
ubrugt IP-adresse fra den pulje af adresser, den er konfigureret til
at bruge, og sender et svar tilbage om at den nye computer kan bruge
den pågældende IP-adresse. Sammen med IP-adressen sendes også andre
oplysninger som er nødvendige for at netværket kan fungere - som regel
er det netmasken, IP-adressen for default gateway og navneservernes 
IP-adresse som fås fra DHCP-serveren.
</para>

<para>
Den IP-adresse som den nye computer får tildelt, må den bruge i et
begrænset tidsrum - den får det der kaldes et "lease" på adressen, som
skal fornyes med jævne mellemrum. Hvis ikke computeren beder om at
forny sit lease, så inddrager DHCP-serveren det igen, og kan dele det
ud til andre maskiner der har brug for en IP-adresse.
</para>

<para>
Når man bruger DHCP, kan man derfor ikke være sikker på, at ens
computere altid har den fast IP-adresse - det afhænger af, hvor længe
ad gangen de er tændt. Så længe de er på nettet, bliver de ved med
at have den IP-adresse de har fået fra serveren. Men hvis de bliver
lukket ned eller taget af nettet så længe at deres lease udløber, så
vil de sandsynligvis få en ny IP-adresse næste gang de kontakter
serveren.
</para>

<para>
Derfor er DHCP mest anvendelig på de systemer, som ikke kører nogen
form for server-funktion - d.v.s. almindelige arbejdsstationer. 
</para>

<para>
Det er dog muligt at konfigurere sin DHCP-server på en måde, så visse
IP-adresser bliver reserveret til bestemte maskiner, og derved kan man
sikre at den pågældende maskine altid har en bestemt IP-adresse. 
Derfor kan man godt bruge DHCP til servere, f.eks. hvis man
vil styre netværks-konfigurationen centralt.
</para>
</sect2>

<sect2 id="dhcp-een-server">
<title>Kun èn DHCP-server per netværk!</title>
<para>
Der følger naturligvis en DHCP-server med din Linux-distribution - det
er en server som er udviklet af ISC (Internet Software Consortium);
det er også dem, der udvikler navneserveren BIND. I næste afsnit kan du
se, hvordan man sætter den op.
</para>

<para>
Hvis du har en eller anden form for router på dit netværk, så kan det
imidlertid være at du allerede har en DHCP-server på nettet. Selv små
ISDN- eller ADSL-routere har ofte indbygget en DHCP-server, og den kan
man sagtens bruge.
</para>

<para>
Uanset om du vælger at køre en DHCP-server på din Linux-maskine, eller
du vælger at bruge den der er indbygget i din router, så skal du passe
på at der kun er <emphasis>én</emphasis> DHCP-server på dit
netværk. Hvis der er flere, så vil du opleve at det kun virker en gang
imellem - nemlig når klienten får svaret fra den server, der er
konfigureret rigtigt.
</para>
</sect2>

<sect2 id="dhcp-isc">
<title>ISC DHCP-server</title>
<indexterm><primary>DHCP</primary><secondary>ISC</secondary></indexterm>
<para>
ISC's DHCP-server bruger én konfigurations-fil, normalt ligger den i
<filename>/etc/dhcpd.conf</filename>. For Red Hat 7.0 dog
<filename>/var/lib/dhcp/dhcpd.conf</filename>.  Derudover bruger den
en midlertidig fil til at holde styr på hvilke IP-adresser den har
uddelt til de forskellige maskiner på nettet; den ligger normalt i
<filename>/etc/dhcpd.leases</filename>, og den administrerer serveren
selv. Du skal blot sørge for at filen eksisterer inden du starter
serveren - f.eks. ved at give kommandoen <command>touch
/etc/dhcpd.leases</command> inden du starter serveren første gang.
(Det var i al fald nødvendigt tidligere - den udgave af DHCP-serveren
der følger med Red Hat 6.2 opretter selv filen, hvis den ikke findes).
</para>

<para>
For at konfigurere DHCP-serveren skal du bestemme dig for, hvilke
oplysninger den skal uddele til de computere, der spørger den om en 
IP-adresse. D.v.s. du skal vælge
</para>

<ITEMIZEDLIST MARK="bullet" SPACING="compact">
<LISTITEM><para>Hvor længe skal de have lov at bruge den tildelte adresse?</para></listitem>
<LISTITEM><para>Hvilket IP-adresse område skal der tages adresser fra?</para></listitem>
<LISTITEM><para>Hvilken netmaske har dit netværk?</para></listitem>
<LISTITEM><para>Hvad er default gateway for nettet?</para></listitem>
<LISTITEM><para>Hvilken IP-adresse bruges til navneserver?</para></listitem>
</itemizedlist>


<para>
Derudover er der en frygtelig masse oplysninger, som man kan levere
via DHCP. Det er f.eks. domæne-navnet for maskinerne på dit netværk,
navn på post-server, time-server, WINS-server etc. Det er dog langtfra
alle disse oplysninger, som rent faktisk bruges til noget af de
maskiner som kontakter DHCP-serveren, så derfor er det ikke altid at
man får noget ud af at konfigurere dem på DHCP-serveren. Du kan se
hvilke muligheder der er i "dhcp-options" man-siden.
</para>

<sect3 id="dhcpd-conf">
<title>dhcpd.conf filen</title>
<indexterm><primary>DHCP</primary><secondary>dhcpd.conf</secondary></indexterm>
<para>
I netværket der bruges som eksempel, har man valgt at bruge følgende
værdier til DHCP:
</para>

<ITEMIZEDLIST MARK="bullet" SPACING="compact">
<LISTITEM><para>Et lease skal være fornyet efter 10 timer, og er
max. gyldigt i 24 timer.</para></listitem>
<LISTITEM><para>IP-adresser tildeles fra puljen 192.168.0.100 - 192.168.0.250</para></listitem>
<LISTITEM><para>Netmasken er 255.255.255.0</para></listitem>
<LISTITEM><para>Default gateway er 192.168.0.1</para></listitem>
<LISTITEM><para>Navneserveren er 192.168.0.1</para></listitem>
<LISTITEM><para>Domæne-navnet er "intranet"</para></listitem>
</itemizedlist>

<para>
Konfigurationsfilen <filename>/etc/dhcpd.conf</filename> skal så se således ud:
</para>

<screen>
subnet 192.168.0.0 netmask 255.255.255.0 {
        range 192.168.0.100 192.168.0.250;
        option subnet-mask 255.255.255.0;

        # default gateway
        option routers 192.168.0.1;

        option domain-name "intranet";
        option domain-name-servers 192.168.0.1;

        default-lease-time 36000;
        max-lease-time 86400;
}
</screen>

<para>
DHCP-serveren kan håndtere flere "subnet" - f.eks. hvis serveren også
fungerer som router, så der er flere netkort installeret i
maskinen. Så kan man konfigurere én DHCP-server, som deler adresser
ud til forskellige netværk. Almindeligvis har man dog kun eet netværk,
der får adresser fra sin DHCP-server - men derfor skal der være en
"subnet" erklæring, der fortæller hvad det er for et fysisk netværk,
denne DHCP-pulje handler om.
</para>

<para>
"range" fortæller så, hvilke IP-adresser serveren kan tildele klienter
på dette netværk - det er her, vi skriver at adresserne skal være i
intervallet 192.168.0.100 til 192.168.0.250.
</para>

<para>
"option subnet-mask" definerer netmasken.
</para>

<para>
"option routers" definerer standard-gateway.
</para>

<para>
"option domain-name" og "option domain-name-servers" definerer
DNS-domæne-navnet og navneserveren. Hvis du ikke selv har en
navneserver på dit netværk, så kan du sagtens skrive adressen på din
Internetudbyders navneserver her.
</para>

<para>
"option domain-name" og "option domain-name-servers" definerer
DNS-domæne-navnet og navneserveren. Man kan også bruge navnet på den
navneserver man vil bruge, DHCP-serveren laver så et opslag inden den
tildeler adressen til klienten. En smart ting hvis navneserveren
skulle skifte IP-adresse.
</para>

<screen>
option domain-name-servers 192.168.0.1, 192.168.0.2;
</screen>

<para>
eller
</para>

<screen>
option domain-name-servers ns1.intranet.foo, ns2.intranet.foo;
</screen>

<para>
"default-lease-time" er det antal sekunder, et lease er
gyldigt. Herefter skal klienten forny sit lease hos DHCP-serveren.
</para>

<para>
"max-lease-time" er det antal sekunder en IP-adresse må bruges. Når
den tid er gået <emphasis>skal</emphasis> klienten holde op med at
bruge IP-adressen.
</para>

<para>
Forskellen på "default-lease-time" og "max-lease-time".  Funktionen af
de to tider er defineret i RFC 2131, afsnit 4.4.5 "Reacquisition and
expiration". Kort fortalt går det ud på, at når default-lease-time
("T1" i RFC'en) udløber, skal klienten begynde at forsøge at forny sit
lease på IP-adressen ved at kontakte den DHCP-server, den oprindelig
fik adressen fra. Det kan klienten så blive ved med at forsøge indtil
den får svar, eller indtil "max-lease-time" ("T2" i RFC'en)
udløber. Hvis T2 udløber <emphasis>skal</emphasis> klienten stoppe med
at benytte IP-adressen, og i stedet begynde at broadcaste efter en ny
DHCP-server.
</para>

<para>
Tiden mellem default-lease-time og max-lease-time er altså den frist,
som en klient har til at forny sit lease på en IP-adresse. Da servere
kan være nede, er det nødvendigt at der er lidt tid til at klare sådan
en ekspeditions-sag - helst så længe, at klienterne ikke begynder at
falde af nettet pga. et enkelt nedbrud af DHCP-serveren.
</para>


<para>
Hvordan vælger man en fornuftig lease-time ? Det der giver mindst
belastning af DHCP-serveren er, hvis arbejds-stationerne ikke behøver
forny deres lease hele tiden - en gang om dagen er rimeligt, og derfor
er default-lease-time sat til lidt længere end en normal arbejdsdag
(10 timer) og max-tiden til 24 timer (86400 sekunder). Omvendt vil man
måske godt have, at klienterne hurtigt opdager hvis man skifter
DNS-server - for at det skal ske hurtigt, skal default-lease-time
sættes ned, så klienterne får friske oplysninger fra serveren noget
oftere. Det er en afvejning, man må gøre.
</para>
</sect3>

<sect3 id="dhcp-start">
<title>Start DHCP-serveren</title>
<para>
Efter at have redigeret <filename>/etc/dhcpd.conf</filename>
færdig er du klar til at starte DHCP-serveren. Kører du Red Hat, er
det nemt. Du skal installere dhcp-pakken og køre
</para>

<screen>
<prompt>[root@linus /root]#</prompt> <userinput>/sbin/chkconfig --level 2345 dhcpd on</userinput>
</screen>

<para>
Så starter DHCP-serveren automatisk når maskinen starter op. Det virker
dog først efter en genstart, så hvis du vil have serveren i gang med det
samme, så kører du
</para>

<screen>
<prompt>[root@linus /root]#</prompt> <userinput>/etc/rc.d/init.d/dhcpd start</userinput>
</screen>

<para>
Du kan nu prøve at konfigurere enten en Linux-maskine eller en
Windows-maskine til at bruge DHCP, og så se om den får oplysningerne
fra serveren. Hvis det er en Windows-maskine du bruger til at teste
med, så kan du bruge <command>winipcfg</command>-programmet (Win95 og
Win98) eller <command>ipconfig /all</command> (Windows NT) til at se,
hvordan maskinen er blevet konfigureret af en DHCP-server.
</para>

<para>
Når serveren kører, logger den forespørgsler til en log-fil,
almindeligvis <filename>/var/log/messages</filename>. Det kan se således ud:
</para>

<screen>
dhcpd: DHCPDISCOVER from 00:00:b4:c7:1e:e6 via eth0
dhcpd: DHCPOFFER on 192.168.0.101 to 00:00:b4:c7:1e:e6 via eth0
dhcpd: DHCPREQUEST for 192.168.0.101 from 00:00:b4:c7:1e:e6 via eth0
dhcpd: DHCPACK on 192.168.0.101 to 00:00:b4:c7:1e:e6 via eth0 
</screen>

<para>
Først er det klienten, som leder efter en DHCP-server. Så tilbyder
DHCP-serveren at klienten kan bruge adressen "192.168.0.101". Den
beder klienten så om, og serveren svarer tilbage at det er OK.
</para>

<para>
De underlige adresser der står i hver linie, er Ethernet-adressen på
det netkort, som spørger DHCP-serveren. Dem kan man bruge til at give
servere en fast IP-adresse, selv om de får oplysningerne via DHCP.
</para>
</sect3>

<sect3 id="dhcp-en-statisk">
<title>Konfigurer en server med DHCP</title>
<para>
Hvis man vil have at en bestemt maskine altid skal få den samme 
IP-adresse fra DHCP-serveren, så kan man give den en statisk tildeling i
DHCP-server-konfigurationen. Her bruger man den Ethernet-adresse, som
maskinens netkort har - hvis maskinen tidligere har fået en IP-adresse
fra DHCP-serveren, så kan man se Ethernet-adressen i log-filen. Man
kan også se den med <command>/sbin/ifconfig</command> kommandoen hvis
det er en Linux-maskine:
</para>

<screen>
<prompt>[root@eric]$</prompt> <userinput>/sbin/ifconfig eth0</userinput>
          Link encap:Ethernet  HWaddr 00:00:B4:C7:1E:E6  
          inet addr:192.168.0.104  Bcast:192.168.0.255  Mask:255.255.255.0
          UP BROADCAST RUNNING  MTU:1500  Metric:1
          RX packets:55 errors:0 dropped:0 overruns:0 frame:0
          TX packets:94 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:100
          Interrupt:10 Base address:0x6100
</screen>

<para>
"HWaddr" er Ethernet-adressen. Hvis nu vi vil have at denne maskine
altid får IP-adressen "192.168.0.4" selv om den får sin IP-adresse fra
DHCP-serveren, så tilføjer vi nogle linier til
<filename>/etc/dhcpd.conf</filename>, inden i den "subnet" blok som vi
lavede før - så kommer den til at se således ud:
</para>

<screen>
subnet 192.168.0.0 netmask 255.255.255.0 {
        range 192.168.0.100 192.168.0.250;
        option subnet-mask 255.255.255.0;

        # default gateway
        option routers 192.168.0.1;

        option domain-name "intranet";
        option domain-name-servers 192.168.0.1;

        default-lease-time 36000;
        max-lease-time 86400;


        host eric {
                hardware ethernet 00:00:B4:C7:1E:E6;
                fixed-address 192.168.0.4;
        }
}
</screen>

<para>
"host eric" indleder en særlig specifikation af hvordan en enkelt vært
skal konfigureres. For at DHCP-serveren kan kende værten bruger vi
Ethernet-adressen - den tager vi fra
<command>ifconfig</command>-beskeden. For at tildele denne host en
fast adresse bruges "fixed-address 192.168.0.4", og den adresse vil
den pågældende vært så altid få.
</para>

<para>
Bemærk at man godt kan tildele faste IP-adresser, der ligger uden for
det område af IP-adresser, der står i "range"-specifikationen.
</para>

<para>
Fordelen ved også at konfigurere servere med IP-adresser fra en 
DHCP-server er, at hvis nogle af de andre oplysninger ændrer sig -
f.eks. navneserveren eller standard-gateway - så skal man kun ændre det
ét sted, nemlig på DHCP-serveren. Alle andre servere og
arbejdsstationer får oplysningerne fra den.
</para>

<para>
Der er dog en enkelt undtagelse - DHCP-serveren kan ikke spørge sig
selv om, hvilken IP-adresse den skal have. Den er man nødt til at
konfigurere manuelt med en statisk IP-adresse, standard-gateway o.s.v.
</para>

</sect3>
</sect2>

<sect2 id="dhcp-dns">
<title>DHCP og DNS</title>
<indexterm><primary>DHCP</primary><secondary>DNS</secondary></indexterm>

<para>
DHCP-serveren deler IP-adresser ud. IP-adresser er normalt knyttet til
værtsnavne, men forbindelsen mellem et værtsnavn og en IP-adresse
håndteres af navneserveren. Hvordan hænger de to servere sammen?
</para>

<para>
Svaret er, at lige nu (april 2000) hænger de ikke særlig godt
sammen. DHCP-serveren har endnu ikke nogen måde, hvor den kan fortælle
navneserveren at den lige har uddelt IP-adresse 192.168.0.4 til en
vært, der gerne ville hedde "eric.intranet", og at navneserveren
skal sørge for at de to oplysninger bliver matchet.
</para>

<para>
Det er noget der arbejdes på, men lige nu og her må man konfigurere
sin navneserver og DHCP-server separat. Kommunikationen mellem DHCP
serveren og navneserveren skulle være klar med den næste version af
DHCP-server softwaren, version 3.
</para>

<para>
Det kan dog være en fordel at konfigurere en zone i navneserveren, der
mapper de IP-adresser som DHCP-serveren uddeler, til et hostnavn -
f.eks. 192.168.0.101 mappet til "dhcp-101.intranet", 192.168.0.102
mappet til "dhcp-102.intranet" o.s.v. En del services laver nemlig
sådan et "reverse DNS"-opslag når man forbinder sig til dem, og hvis
ikke de kan få et eller andet hostnavn ud af det opslag, så tager det
som regel længere tid at få forbindelse til den pågældende
service. Det gælder f.eks. <command>telnet</command> og
<command>ftp</command>.
</para>

<para>
Følgende artikel om DHCP kan nok være af interesse 
<ulink url="http://linuxfocus.org/English/May2000/article150.shtml">
http://linuxfocus.org/English/May2000/article150.shtml</ulink>.
</para>

</sect2>

</sect1>


<SECT1 ID="ftpd">
<TITLE>FTP-server</TITLE>
<INDEXTERM><PRIMARY>ftp</PRIMARY><SECONDARY>server</SECONDARY></INDEXTERM>
<INDEXTERM><PRIMARY>wu-ftpd</PRIMARY></INDEXTERM>

<PARA>
De fleste Linux-distributioner installerer automatisk en 
ftp-server, hvis man har valgt en server-installation.
Har du valgt en skrabet installation til en gammel maskine,
er det nemt senere at få ftp-serveren installeret efterfølgende.
</PARA>

<PARA>
<FILENAME>wu-ftpd</FILENAME> er en ftp-server der følger
med næsten alle distributioner.
Et bedre alternativ til wu-ftpd er <FILENAME>proftpd</FILENAME>
<ulink url="http://www.proftpd.net/">http://www.proftpd.net/</ulink>,
som også følger med mange distributioner.
Med wu-ftpd installeret, er det muligt
for alle brugere af systemet at få adgang til deres filer
med ftp.
Installationen er nem.
</PARA>

<SCREEN>
<PROMPT>[root@linus RPMS]# </PROMPT><USERINPUT>rpm -ivh wu-ftpd*.i386.rpm</USERINPUT>
</SCREEN>

<PARA>
Ftp-serveren er nu startet og klar til brug.
Af sikkerhedsmæssige årsager kan <COMMAND>root</COMMAND> ikke logge
ind på ftp-serveren.
Dette skyldes at <COMMAND>root</COMMAND> er nævnt i filen
<FILENAME>/etc/ftpusers</FILENAME>. Du kan have dine grunde til at give
root lov til at logge ind, men tænk dig om.
</PARA>

<PARA>
Som før nævnt er det kun brugere af systemet, der kan logge ind.
Skal ftp-serveren være åben for alle, f.eks. til brug for at installere
Linux på en anden maskine over nettet, så skal der lige en pakke mere
ind.
</PARA>

<SCREEN>
<PROMPT>[root@linus RPMS]# </PROMPT><USERINPUT>rpm -ivh anonftp*.i386.rpm</USERINPUT>
</SCREEN>

<PARA>
Nu er maskinen åben for at alle kan hente filer fra din maskine, hvor
brugerne logger ind som <COMMAND>anonymous</COMMAND> (eller
<COMMAND>ftp</COMMAND>) og giver sin egen e-post-adresse som
adgangskode.  Skal du lægge filer, så brugerne kan hente dem ned, 
skal de lægges i <FILENAME>/home/ftp/pub/</FILENAME> 
eller et af dets underkataloger. Du kan evt. linke til 
andre dele af filsystemet, hvis du f.eks. vil give 
almindelige brugere lov til at ligger filer ud til 
nedhentning.
</PARA>

<para>
Det skal nævnes, at der har været en hel del sikkerhedsproblemer i
wu-ftpd, derfor bør du checke hvad der er nyeste udgave før du
installerer på et usikkert netværk, såsom Internettet.
</para>

<!--

<PARA>
Skal brugerne have lov til at lægge filer op, gøres dette normalt
til <FILENAME>/home/ftp/incoming/</FILENAME>.
Her er det vigtigt at sætte ftp op så man kun kan lægge filer op
og ikke hente fra det pågældende katalog. Gør man ikke det, 
risikerer man at ens server bliver
misbrugt til at rundsende pirat-programmer.
Opsætningen af <FILENAME>/incoming/</FILENAME> gøres ved at ......
</PARA>

-->

</SECT1> <!-- ftp-server -->


<sect1 id="nfs">
<title>NFS - Deling af filer mellem Unix-maskiner</title>
<indexterm><primary>NFS</primary></indexterm>
<indexterm><primary>Unix-fildeling</primary></indexterm>
<indexterm><primary>Linux-fildeling</primary></indexterm>
<indexterm><primary>Fildeling</primary><secondary>Linux</secondary></indexterm>
<para>
I Unix-verdenen og dermed også Linux har man i mange år kunnet dele
filer mellem forskellige maskiner i et netværk. Den mest udbredte
protokol til dette er NFS (netværksfilsystem - eng. Networked File
System).  Det er selvfølgelig et område, man skal være forsigtig med,
hvis man har et alt for åbent netværk.  Her skal vi kun give et
simpelt eksempel på, hvordan NFS virker.
</para>

<para>
Hvis vi nu siger, at maskinen
alfa skal dele <filename>/home</filename> med maskinen beta, så skal
alfa-maskinen have installeret RPM-pakken <filename>knfsd</filename>. I
<filename>/etc/exports</filename> skriver du først, hvilken del af
filtræet der skal deles, derefter hvilke klienter der skal bruge det
(du kan anvende * for alle), og sidst om der deles med læse/skrive
(rw) eller kun læse-rettigheder (ro). Brug <command>man
exports</command> for flere detaljer.
</para>

<SCREEN>
# /etc/exports - NFS export of /home
/home beta.domænenavn.dk(rw)
</SCREEN>

<para>
Derefter skal du genstarte nfs-serveren ved at skrive
<command>/etc/rc.d/init.d/nfs restart</command>, og som root på
beta-maskinen kan du nu nemt få data fra alfa-maskinen.
</para>

<screen>
<prompt>[root@beta /root]#</prompt> <userinput>mount -t nfs alfa:/home /home</userinput>
</screen>

<para>
Skal alfa være permanent filserver for beta (og andre), bør du på
beta-maskinen se mere på programmet <command>autofs</command>, der kan 
tilkoble en disk over netværket, når der er behov for det. Efter et stykke 
tid uden aktivitet, vil disken afmonteres fra netværket. <!--Dette er der et 
kort afsnit om i xref linkend="autofs".-->
Det giver et mere stabilt netværk.
</para>

<para>
Nedenstående er baseret på Red Hat 6.0 og 6.1.  RedHat 6.2 har som
standard de nævnte programmer med. RedHat 6.2 og 7.0 som NFS-server
bør virke uden yderligere krumspring.
</para>

<para>
Enhver der har prøvet at bruge en NFS-server på Linux til lidt mere end en
fil i ny og næ, ved at der har været performanceproblemer. Yderligere har
det ikke været muligt at benytte NFS-drev med programmer der
bruger fillåsning.
</para>

<para>
Der arbejdes hårdt på at forbedre Linux' muligheder på dette område. NFS
version 3 er undervejs, og det er i dag muligt at benytte Linux som
filserver for andre Unix-maskiner med godt resultat. Men der er nogle krav
der skal opfyldes: <emphasis>Kerne 2.2.14</emphasis> (eller senere) og 
<emphasis>nfs-utils</emphasis>.
</para>

<para>
Linux-kernen skal oversætttes med følgende options:
</para>

<screen>
CONFIG_NFS_FS=m
CONFIG_NFSD=m
</screen>

<para>
Yderligere
</para>

<screen>
CONFIG_NFSD_SUN=m  
</screen>

<para>
hvis Linux-maskinen skal være NFS-server for SUN Solaris.
</para>

<para>
Hent den seneste udgave af nfs-utils fra sourceforge.net:
<ulink url="ftp://nfs.sourceforge.net/pub/nfs/nfs-utils-0.1.7.tar.gz">
ftp://nfs.sourceforge.net/pub/nfs/nfs-utils-0.1.7.tar.gz</ulink>
</para>

<para>
Byg en rpm-pakke fra kildekoden:
</para>


<screen>
<prompt>[root@linus /root]#</prompt> <userinput>rpm -ta nfs-utils-0.1.7.tar.gz</userinput>
...
...
...
...
Wrote: /usr/src/redhat/RPMS/alpha/nfs-utils-0.1.7-1.alpha.rpm
Executing: %clean
+ umask 022
+ cd /usr/src/redhat/BUILD
+ cd nfs-utils-0.1.7
+ rm -rf /var/tmp/nfs-utils-root
+ exit 0
</screen>


<para>
nfs-utils indeholder nye udgaver af nfs-programmer og dæmonerne.
</para>

<para>
nfs (dvs. dæmonerne <filename>rpc.rquotad</filename>,
<filename>rpc.mountd</filename> og <filename>rpc.nfsd</filename>) og
nfslock (dvs dæmonerne <filename>rpc.lockd</filename> og
<filename>rpc.statd</filename>) skal startes når maskinen genstarter:
</para>

<screen>
<prompt>[root@linus /root]#</prompt> <userinput>/sbin/chkconfig nfs on</userinput>
<prompt>[root@linus /root]#</prompt> <userinput>/sbin/chkconfig nfslock on</userinput>
<prompt>[root@linus /root]#</prompt> <userinput>/sbin/chkconfig --list | grep nfs</userinput>
nfs 0:off 1:off 2:off 3:on 4:on 5:on 6:off
nfslock 0:off 1:off 2:off 3:on 4:on 5:on 6:off
</screen>

<para>
Herefter er maskinen klar som fornuftig NFS-server.
</para>
</sect1>

<sect1 id="nis">
<title>NIS - deling af passwd-filer mellem Unix-maskiner</title>
<para>
Er der flere maskiner i lokalnettet, og har brugerne brug for adgang til
dem alle (eller nogle af dem), er NIS en god løsning.
</para>

<para>
NIS, The Network Information System, sørger for at flere maskiner kan dele
oplysninger om brugere, grupper og endda også maskiner og en del andre
oplysninger.
</para>

<para>
NIS blev tidligere kaldt "Yellow Pages", forkortet "yp", efter
telefonbøgernes gule sider, men det måtte ændres, da Yellow Pages er et
registreret varemærke ejet af British Telecom.
Men de fleste programmer i NIS starter stadig med yp.
</para>

<para>
NIS arbejder, ligesom DNS, med et domænenavn. Men disse to domænenavne har
intet med hinanden at gøre. 
I det følgende har vi to Red Hat-maskiner i (DNS-)domænet
strangeparty.dk. De skal dele informationer om kodeord mv. i (NIS-)domænet
spo.
</para>

<para>
Serveren hedder "supernaut". Klienten hedder "omnitec".
</para>

<para>
På serveren skal pakken "ypserv" installeres:
</para>

<screen>
<prompt>[root@supernaut /home/kwv]# </prompt> <userinput>rpm -Uvh /cdrom/RPMS/ypserv-1.3.9-1.alpha.rpm </userinput>
ypserv                 ##################################################
</screen>

<para>
NIS-domænet skal være "spo". Det sættes med kommandoen <command>domainname</command>.
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>domainname spo</userinput>
</screen>

<para>
Ypserveren skal nu startes:
</para>

<screen>
<prompt>[root@supernaut /home/kwv]# </prompt> <userinput>/etc/rc.d/init.d/ypserv start</userinput>
Starting YP server services:                               [  OK  ]
</screen>

<para>
Det kan betale sig at gennemse, og måske tilrette, filen
<filename>/var/yp/Makefile</filename>.  Du bør nok ændre MINUID og
MINGID, så disse starter UID (bruger-ID) og GID (grupper-ID) ved 300, 
og ikke ved 500 som er
standard i Red Hat. Du kan også  udkommentere linien "GSHADOW =
$(YPPWDDIR)/gshadow", og indsætte "MERGE_GROUP=false".
</para>

<para>
Herefter initieres NIS-serveren:
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>/usr/lib/yp/ypinit -m</userinput>

At this point, we have to construct a list of the hosts which will run NIS
servers.  supernaut.strangeparty.dk is in the list of NIS server
hosts.  Please continue to add
the names for the other hosts, one per line.  When you are done with the
list, type a &lt;control D&gt;.
	next host to add:  supernaut.strangeparty.dk
	next host to add:  
The current list of NIS servers looks like this:

supernaut.strangeparty.dk

Is this correct?  [y/n: y]  
We need some  minutes to build the databases...
Building /var/yp/spo/ypservers...
Running /var/yp/Makefile...
gmake[1]: Entering directory `/var/yp/spo'
Updating passwd.byname...
Updating passwd.byuid...
Updating group.byname...
Updating group.bygid...
Updating hosts.byname...
Updating hosts.byaddr...
Updating rpc.byname...
Updating rpc.bynumber...
Updating services.byname...
Updating netid.byname...
Updating protocols.bynumber...
Updating protocols.byname...
Updating mail.aliases...
gmake[1]: Leaving directory `/var/yp/spo'
[root@supernaut /home/kwv]# 
</screen>

<para>
Med ypbind installeret på serveren, kan man nu kontrollere de
services der stilles til rådighed.
Ypbind skal startes først:
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>/etc/rc.d/init.d/ypbind start</userinput>

Binding to the NIS domain...                               [  OK  ]
Listening for an NIS domain server: supernaut.strangeparty.dk
</screen>

<para>
Kommandoen <command>ypcat -x</command> viser de tjenester serveren
stiller til rådighed: 
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>ypcat -x</userinput>

Use "ethers"	for map "ethers.byname"
Use "aliases"	for map "mail.aliases"
Use "services"	for map "services.byname"
Use "protocols"	for map "protocols.bynumber"
Use "hosts"	for map "hosts.byname"
Use "networks"	for map "networks.byaddr"
Use "group"	for map "group.byname"
Use "passwd"	for map "passwd.byname"
</screen>

<para>
Det interessante i vores lille netværk, er <filename>passwd</filename>
og <filename>group</filename>. Yderligere kan
<filename>aliases</filename> og <filename>mail.aliases</filename> være
smart til at styre lokal e-post.
</para>

<para>
Men hvad indeholder de så?
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>ypcat passwd</userinput>
hanne:BmXEt39P1By2I:301:300:Hanne:/supernaut/hanne:/bin/bash
kwv:/g10xcDPwwaA2:405:400:Kristian Vilmann:/home/kwv:/bin/bash
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>ypcat group</userinput>
hjemme:x:300:
teknik:x:400:
</screen>

<para>
På klienten skal <command>ypbind</command> selvfølgelig være
installeret. Og den skal startes:
</para>

<screen>
<prompt>[root@omnitech /root]#</prompt> <userinput>rpm -q ypbind</userinput>
ypbind-3.3-24
<prompt>[root@omnitech /root]#</prompt> <userinput>domainname spo</userinput>
<prompt>[root@omnitech /root]#</prompt> <userinput>/etc/rc.d/init.d/ypbind start</userinput>
Binding to the NIS domain...                               [  OK  ]
Listening for an NIS domain server: .supernaut.strangeparty.dk
</screen>

<para>
Hvis klienten har problemer med at finde NIS-serveren, eller der er flere
NIS-domæner i netværket, kan man sætte sine præferencer i filen
<filename>/etc/yp.conf</filename>.
</para>

<para>
Lad os se om det ser rigtigt ud. <command>ypwhich</command> fortæller hvilken NIS-server
klienten er bundet til:
</para>

<screen>
<prompt>[root@omnitech /root]#</prompt> <userinput>ypwhich</userinput>
supernaut.strangeparty.dk
<prompt>[root@omnitech /root]#</prompt> <userinput>ypcat passwd</userinput>
hanne:$1$d5dYr98N$/k.0aNyvq/BMX0UlMoyGZ1:301:300:Hanne:/home/hanne:/bin/bash
kwv:$1$I1/h6uyj$Spk11r0bYTyo9r.sc7nQ..:405:400:Kristian Vilmann:/home/kwv:/bin/bash
</screen>
<para>
Det ser fint ud.
Vi lader nu en bruger prøve telnet fra serveren til klienten.
For en god ordens skyld kontrolleres at brugeren hanne ikke optræder i
filen <filename>/etc/passwd</filename>:
</para>

<screen>
<prompt>[root@omnitech /root]#</prompt> <userinput>grep hanne /etc/passwd</userinput>
</screen>

<para>
Her var der intet svar (nul linier).
</para>

<screen>
<prompt>[hanne@supernaut ~]#</prompt> <userinput>telnet omnitec</userinput>
Trying 192.168.10.126...
Connected to omnitec.strangeparty.dk.
Escape character is '^]'.

Red Hat Linux release 6.1 (Cartman)
Kernel 2.2.12-20 on an i586
login: hanne
Password: 
Last login: Wed Mar 29 13:42:12 from supernaut.strangeparty.dk
<prompt>[hanne@omnitec ~]$</prompt> <userinput>id</userinput>
uid=301(hanne) gid=300(hjemme) groups=300(hjemme)
<prompt>[hanne@omnitec ~]$</prompt> <userinput>pwd</userinput>
/supernaut/hanne
<prompt>[hanne@omnitec ~]$</prompt> <userinput>whoami</userinput>
hanne
<prompt>[hanne@omnitec ~]$</prompt> <userinput>ls -al</userinput>
total 142
drwx------   2 hanne    hjemme       1024 Mar 29 13:13 WebDB/
-rw-r--r--   1 hanne    hjemme      34862 Mar 12 23:24 headbanging.jpg
-rw-r--r--   1 hanne    hjemme      59995 Oct 18 22:16 insoundout.gif
drwxr-xr-x   4 hanne    hjemme       1024 Mar 12 00:10 objectsystem1.0/
-rw-r--r--   1 hanne    hjemme      43971 Mar 21 19:31 sslug.httpd.conf
</screen>

<para>
Det ser rigtigt ud. Læg mærke til at Hannes hjemmekatalog er NFS-monteres
fra serveren, og at hun derfor har samme hjemmekatalog på begge maskiner. 
</para>

<para>
NIS tilbyder en række værktøjer til manipulering af
brugerinformationerne på NIS-serveren: <command>yppasswd</command>,
<command>ypchfn</command> og <command>ypchsh</command>.
</para>

<para>
De fungerer på samme måde som de tilsvarende kommandoer uden yp-prefixet.
Hanne vil gerne skifte sit kodeord:
</para>

<screen>
<prompt>[hanne@omnitec ~]$</prompt> <userinput>yppasswd</userinput>
Changing NIS account information for hanne on supernaut.strangeparty.dk.
Please enter old password: <userinput>GAMMELKODE</userinput>
Changing NIS password for hanne on supernaut.strangeparty.dk.
Please enter new password: <userinput>NYKODE</userinput>
Please retype new password: <userinput>NYKODE</userinput>

The NIS password has been changed on supernaut.strangeparty.dk.
</screen>

<para>
Lad os se om det virker:
</para>

<screen>
<prompt>[hanne@omnitec ~]$</prompt> <userinput>telnet supernaut</userinput>
Trying 192.168.10.1...
Connected to supernaut.strangeparty.dk.
Escape character is '^]'.

Red Hat Linux release 6.0 (Hedwig)
Kernel 2.2.14 on an alpha
login: <userinput>hanne</userinput>
Password: <userinput>NYKODE</userinput>
Last login: Wed Mar 29 13:02:19 from omnitec.strangeparty.dk
</screen>

<para>
Fint. Kodeordet er ændret på serveren.
Man hvad med klienten?
</para>

<screen>
<prompt>[hanne@supernaut ~]$</prompt> <userinput>telnet omnitec</userinput>
Trying 192.168.10.126...
Connected to omnitec.strangeparty.dk.
Escape character is '^]'.

Red Hat Linux release 6.1 (Cartman)
Kernel 2.2.12-20 on an i586
login: <userinput>hanne</userinput>
Password: <userinput>NYKODE</userinput>
Last login: Wed Mar 29 13:46:21 from supernaut.strangeparty.dk
</screen>

<para>
Hvis man som administrator ændrer i adgangskodefilen, opretter eller
sletter en bruger, eller ændrer andet der påvirker NIS, skal man sørge for
at NIS-databaserne er konsistente efter ændringerne:
</para>

<screen>
<prompt>[root@omnitech /root]#</prompt> <userinput>cd /var/yp</userinput>
<prompt>[root@omnitech /root]#</prompt> <userinput>make</userinput>
</screen>

<para>
Og så skal vi lige sørge for at det starter næste gang maskinerne
genstartes: På serveren skal <command>ypserv</command>,
<command>yppasswdd</command> og <command>ypbind</command> startes i
runlevel 3, 4 og 5.
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>/sbin/chkconfig --list | grep yp</userinput>
ypbind 0:off 1:off 2:off 3:on 4:on 5:on 6:off
yppasswdd 0:off 1:off 2:off 3:on 4:on 5:on 6:off
ypserv 0:off 1:off 2:off 3:off 4:off 5:off 6:off
</screen>

<para>
ypserv starter ikke automatisk. Det får vi den til:
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>/sbin/chkconfig ypserv on</userinput>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>/sbin/chkconfig --list | grep yp</userinput>
ypbind 0:off 1:off 2:off 3:on 4:on 5:on 6:off
yppasswdd 0:off 1:off 2:off 3:on 4:on 5:on 6:off
ypserv 0:off 1:off 2:off 3:on 4:on 5:on 6:off
</screen>

<para>
NIS-domænet skal sættes, både på server og klient. Det gøres i
<filename>/etc/sysconfig/network</filename>:
</para>

<para>
NISDOMAIN=spo
</para>


<para>
På klienten skal ypbind også startes ved boot:
</para>

<screen>
<prompt>[root@supernaut /home/kwv]#</prompt> <userinput>/sbin/chkconfig --list ypbind</userinput>
ypbind 0:off 1:off 2:off 3:on 4:on 5:on 6:off
</screen>

<para>
NIS kan en del mere end beskrevet her. Men dette er normalt det, der er
størst behov for.
</para>

<para>
For mere information:
Linux Network Administrators Guide,
NIS-HOWTO,
Managing NFS & NIS, O'Reilly & Associates,
Manualsiderne fra ypserv- og ypbind-pakkerne. Find dem således: 
</para>

<screen>
<prompt>[hanne@supernaut ~]$</prompt> <userinput>rpm -ql `rpm -qa | grep ^yp` |grep man</userinput>
</screen>
</sect1>


<sect1 ID="appletalk">
<TITLE>AppleTalk</TITLE>
<INDEXTERM><PRIMARY>Apple</PRIMARY><SECONDARY>AppleTalk</SECONDARY></INDEXTERM>
<INDEXTERM><PRIMARY>Mac</PRIMARY><SECONDARY>AppleTalk</SECONDARY></INDEXTERM>

<PARA>
Linux kan ikke bare forbindes til Apple via ftp, men også via 
almindelig fildeling.
For brugerne af lokalnettet kommer Linux-serveren så til at optræde
som en Mac-server.
</PARA>

<PARA>
Det er ikke svært at anvende en Linux-maskine som filserver hvis de
andre klienter i netværket kører Microsoft-Windows®, da
Samba-protokollen (som beskrevet i <xref linkend="samba">) følger med
stort set alle distributioner af Linux. Dette er ikke så lige til med
Mac-protokollen, da du selv må downloade denne.  Til at forbinde et
Mac-netværk med en Linux-maskine bruges et program/protokol der hedder
Netatalk. Dette program får på listig vis din Linux-maskine til at se
ud som en Macintosh-filserver. Programmet understøtter to typer af
AppleTalk-protokollen; nemlig Classic AppleTalk og AppleShareIP
(sidstnævnte kaldes også TCP/IP til Mac).
</PARA>

<PARA>
Programmet blev oprindelig udviklet af University of
Michigan's Research Systems Unix Group og understøttede
oprindelig kun Classic AppleTalk. Sidenhen er det
blevet udviklet og vedligeholdt af Adrian Sun, der
ud over at debugge programmet også har implementeret
understøttelse af AppleShareIP og andre udvidelser. 
</PARA>

<PARA>
Netatalk kan hentes fra:
<ULINK 
URL="ftp://ftp.cobaltnet.com/pub/users/asun/release/netatalk-1.4b2+asun2.1.3.tar.gz">
ftp://ftp.cobaltnet.com/pub/users/asun/release/netatalk-1.4b2+asun2.1.3.tar.gz</ULINK>
</PARA>

<PARA>
og færdigoversat fra:
<ULINK 
URL="http://thehamptons.com/anders/netaltalk/mirror/netatalk-1.4b2+asun2.1.1.x86-shadow-linux.tar.gz">
http://thehamptons.com/anders/netaltalk/mirror/netatalk-1.4b2+asun2.1.1.x86-shadow-linux.tar.gz</ULINK>
</PARA>

<PARA>
Til Debian:
<ULINK 
URL="http://cgi.debian.org/Packages/stable/net/netatalk.html">
http://cgi.debian.org/Packages/stable/net/netatalk.html</ULINK>
</PARA>

<PARA>
Til .rpm-baserede systemer (SuSE, RedHat, Mandrake):
<ULINK 
URL="ftp://contrib.redhat.com/pub/contrib/libc6/SRPMS/netatalk-1.4b2+asun2.1.3-6.src.rpm">ftp://contrib.redhat.com/pub/contrib/libc6/SRPMS/netatalk-1.4b2+asun2.1.3-6.src.rpm</ULINK>
(husk at køre <command>rpm --rebuild -sti-til-source</command>  for at
oversætte og installere den)
</PARA>

<PARA>
Hvis du har hentet en af <filename>.tar.gz</filename> filerne, skal du
gøre sådan her: 
</PARA>

<SCREEN>
<prompt>[root@linus /root]#</prompt><USERINPUT>tar -xvzf &lt;filnavn&gt;.tar.gz</USERINPUT>
<prompt>[root@linus /root]#</prompt><USERINPUT>cd netatalk&lt;tab&lt;&gt;enter&gt;</USERINPUT>
<PROMPT>[root@linus netatalk]# </PROMPT><USERINPUT>make install</USERINPUT>
</SCREEN>

<PARA>
Netatalk "bor" i kataloget
<filename>/usr/local/atalk/</filename>. Server-binaries og
konfigurationsfiler ligger i <filename>/usr/local/atalk/etc</filename>
og userland-binaries i <filename>/usr/local/atalk/bin</filename>. Hvis
du ikke ikke kan finde <command>netatalk</command> efter du har
installeret den, så gør følgende: <command>find /* -name atalkd
-print</command> for at finde den.
</PARA>

<PARA>
For at kunne bruge Classic AppleTalk-protokollen, skal
understøttelsen af denne være slået til i kernen. For
at finde ud af, om den er det, gør følgende: dmesg |
grep -i apple  Hvis den ikke er der, skal du oversætte
din kerne om, med dette tilvalg slået til. 
</PARA>

<PARA>
Det program der gør AppleTalk shares tilgængelige i
både Classic AppleTalk og AppleShareIP hedder <command>afpd</command> og
får sin konfiguration fra en fil der hedder <filename>afpd.conf</filename>.
</PARA>

<PARA>
Den simpleste <filename>afpd.conf</filename>-fil indeholder
kun ét - (minus), hvilket står for "Denne Computer" med alle
standard options koblet til. En lidt mere kompliceret
konfiguration kunne være følgende:
</PARA>

<SCREEN>
- 
MinLinuxMac -port 12000
"Denne Linux Leger Mac" -port 12001
"Der Ude" -port 12000 -address 206.114.89.46
"Guest Volume" -nocleartxt  -loginmesg "Vær venlig ved min gæsteserver !"
"Boksen" -noguest -port 12000
"Det Helligste" -notcp -defaultvol &lt;path&gt; -systemvol &lt;path&gt;
</SCREEN>

<PARA>
Forklaring af konfigurationsfilen:
</PARA>

<PARA>
Den første linie kun med en bindestreg gør at
Linux-maskinen laver en server med sit hostnavn.
Den anden linie laver en server ved navn MinLinuxMac på
port 12000.
Den tredje linie laver en server kaldet "Denne Linux
Leger Mac" på port 12001.
Den fjerde linie laver en server kaldet "Der Ude",
bundet på port 12000 og med den virtuelle IP-adresse
206.114.89.46.
</PARA>

<PARA>
I næste sektion laver linien "Guest Volume" -nocleartxt -loginmesg
"Vær venlig ved min gæsteserver !" en dedikeret gæsteserver, der ikke
spørger om adgangskode og som giver loginbeskeden "Vær venlig...".
Linien "Boksen" -noguest -port 12000 laver en volume på port 12000 der
ikke tillader gæsteadgang.  Linien "Det Helligste" -notcp -defaultvol
&lt;path&gt; -systemvol &lt;path&gt; laver en server der ikke bruger
TCP/IP (kun DDP) og som bruger to alternative konfigurationsfiler, i
stedet for de to standardfiler
<filename>AppleVolumes.default</filename> og
<filename>AppleVolumes.system</filename>. Husk at rette i &lt;path&gt;
hvis du vil gøre dette.
</PARA>

<PARA>
Lav et Classic AppleTalk-share:
</PARA>

<PARA>
For at lave et Classic AppleTalk-share skal du ændre i
filen <filename>/usr/local/atalk/etc/AppleVolumes.system</filename>
Eksempelvis hvis du indsætter linien <filename>/data/www</filename>
"Webserver" laves der en volume kaldet Webserver, hvis
indhold så vil kunne ses.
</PARA>

<PARA>
Den anden ting denne fil styrer, er "type-creator mappings". På
Macintosh består alle filer (ulig på Unix) af to dele. En "resource
fork" og en "data fork". Resource fork'en gemmer på ting som ikoner,
filtyper, og mapping til den applikation der i sin tid blev brugt til
at lave filen.  Siden Linux-filer generelt er en lang liste af
bogstaver, i stedet for delt i to forke/forks, skriver netatalk
resource forkene i filer i et katalog kaldet
<filename>.AppleDouble</filename>. Derfor skabes én Macintosh-fil af
to filer på Linux-maskinen; eksempelvis <FILENAME>enfil.txt</FILENAME>
og <FILENAME>.AppleDouble/enfil.txt</FILENAME>.  Denne fil ville så,
hvis det var en tekstfil og Word havde lavet den, skulle have haft
følgende type-creator mapping i <filename>afpd.conf</filename>: .txt
TEXT MSWD for at fortælle <command>afpd</command> at .txt filer er
TEXT filer og at det var Microsoft Word der blev brugt til at
fremstille filen med. Afpd vil så fortælle dette til
Macintosh-maskiner der støder på filer der ender på .txt og som ikke
er blevet oprettet på en Macintosh-maskine.
</PARA>

<PARA>
ATALKD daemonen:
</PARA>

<PARA>
Atalkd er det kerne-interface der bruges til Classic
Appletalk. Det vil agere forbindelse mellem 
AppleTalk-kernemodulet og resten af Classic AppleTalk's
funktioner i netatalk. Den vil sågar også tage sig af
AppleTalk-routing mellem flere netkort. 
</PARA>

<PARA>
Atalkd er styret af konfigurationsfilen
atalkd.conf. Den enkleste form for konfigurationsfil
(og også den enkleste måde at konfigurere atalkd på) er
en tom fil. Denne fil vil atalkd så selv overskrive med
nogle ganske fornuftige opsætninger. Det er tilrådeligt
at specificere alle de netkort man har i atalkd.conf
filen. Hvis man specificerer mere end et netkort, vil
atalkd selv route AppleTalk-pakker mellem netkortene.
</PARA>

<PARA>
Følgende konfiguration kunne overvejes:
</PARA>

<SCREEN>
eth0 -net 153-174 -addr 154.212 -zone "Langt Ude"
eth1 -net 175-200 \adr 182.318 -zone "På Landet" -seed  
</SCREEN>

<PARA>
Hvad betyder så dette? Forklaringen er ret simpel; hver linie i filen
<filename>atalkd.conf</filename> specificerer ét netkort. I dette
eksempel betyder det at eth0 (første netkort i Linux-maskinen) bruges
på et netværk med AppleTalk-addresser mellem 153 og 174 (se eventuelt
afsnittet om TCP/IP for nærmere forklaring om
netværksadressering). Dette netkort (eth0) er her konfigureret til at
bruge AppleTalk-adressen 154.212 og eksisterer i zonen "Langt Ude".
</para>

<para>
Næste linie betyder at det sekundære (eth1; andet netkort på en
Linux-maskine) eksisterer på et netværk mellem 175 og 200 med adressen
182.318 og pakker til zonen "På Landet". Derfor vil atalkd agere
router mellem de to netværk. 
Bemærk at netværksnumrene ikke må overlappe hinanden; ej
heller må der være andre routere på eth1 netværket. Hvis atalkd finder
en anden router, end den specificeret i filen, vil programmet afslutte
sig selv. Bemærk også at hvis du har flere end 5 maskiner på netværket,
skal du angive dette over for afpd (se nedenfor) - ellers virker det
bare ikke! Derfor anbefales det at læse afsnittet om TCP/IP - det er
ikke så svært som det umiddelbart ser ud til.
</PARA>

<PARA>
Så kommer den sjove del af det hele - vi skal prøve at
starte Netatalk-serveren op!
</PARA>

<PARA>
Først skal du finde ud af hvor Netatalk's starup-script
ligger, hvis du ikke allerede ved det.
</PARA>

<PARA>
Dette kan du gøre sådan her: 
</PARA>

<SCREEN>
find /* -name "*atalk*" -print 
</SCREEN>

<PARA>
eller med                       
</PARA>

<SCREEN>
locate "*atalk*" 
</SCREEN>

<PARA>
(husk at køre <command>updatedb</command> som root efter 
installationen af
Netatalk, ellers vil den ikke kunne findes af databasen
af kommandoen <command>locate</command>).
</PARA>

<PARA>
Når du så er i det katalog hvor scriptet er, skriver du:
<COMMAND>./rc.atalk start</COMMAND> og venter et par sekunder på at
Netatalk starter op.  Dette vil så starte en filserver der kører
Classic AppleTalk. Kun hvis du har specificeret nogle TCP/IP-adresser
i <filename>afpd.conf</filename>-filen vil en tilsvarende Appletalk
IP-server blive startet også. Atalkd er den der tager længst tid at
starte op, da den først kontrollerer netværket ud før den registrerer
sig selv.  Alternativt kan du nøjes med kun at starte en TCP-server,
hvis du på forhånd har konfigureret en i
<filename>atalkd.conf</filename>-filen. Dette gøres sådan her:
</PARA>

<SCREEN>
/usr/local/atalk/etc/afpd -F
/usr/local/atalk/etc/afpd.conf
</SCREEN>

<PARA>
Bemærk! Hvis du skal bruge mere end 5 forbindelser til
Netatalk-serveren skal du angive et antal maksimumforbindelser når du
starter afpd. Dette gøres med -c argumentet: <COMMAND>afpd -c
25</COMMAND> Dette vil så give mulighed for 25 forbindelser til
Netatalk-serveren.
</PARA>

<PARA>
Hvis denne kommando lykkes uden at brokke sig, så gå hen til en Mac og
åben "Chooser" (under Applemenuen i venstre side). Klik på AppleShare
og se om din Netatalk-server er der. Hvis du bruger AppleShareIP skal
du klikke på AppleShareIP knappen og manuelt indtaste maskinens navn
eller IP-nummer. Hvis alt så er lykkedes vel, vil du blive bedt om at
indtaste din adgangskode.
</para>

<para>
Husk at du af sikkerhedsmæssige årsager ikke kan logge ind på
filserveren som root, og kun hvis dit brugernavn har 8 eller færre
karakterer. Guest access (gæsteadgang) til filserveren vil være tilladt,
hvis det ikke er blevet forbudt i <filename>afpd.conf</filename>.
</para>

<para>
Hvis det lykkes dig at logge ind, vil du blive præsenteret for en
liste af "volumes" du så kan vælge - og montere. Det er tilrådeligt at
bruge et af de startup-scripts der følger med Netatalk, til at starte
denne med når maskinen booter. Alt afhængigt af hvilken distribution du
bruger, skal du følge fremgangsmåden for hvordan din maskine gør. På en
Red Hat skal du nok kigge på
<filename>/etc/rc.d/rc.local</filename>. Ellers er et andet godt bud
<filename>/etc/init.d</filename>, for at finde ud af hvor dine
startup-scripts befinder sig.
</PARA>

<PARA>
Andre ting man kan gøre med Netatalk: 
</PARA>

<PARA>
Tovejs-krypteret "password authentication" er understøttet af
Netatalk. Men for at dette skal kunne bruges, må serveren nødvendigvis
vide hvor klartekst-adgangskoderne kan findes henne. Da
systemadgangskoderne er krypterede ved serveren ikke hvad
klartekst-adgangskoderne er, så det skal den have at vide. Ved at
oprette en <filename>.passwd</filename>-fil i brugerens hjemmekatalog med
klartekstadgangskode i kan tovejskryptering opnås (punktummet foran i
filen betyder at den er skjult og vil kun blive vist, hvis man bruger
<command>ls -a</command>).
</PARA>

<PARA>
Det ganske usikkert at gemme sine adgangskoder på et så forudsigeligt
sted. Derfor kræver Netatalk at hver <filename>.passwd</filename>-fil
ejes af den pågældende bruger og dennes gruppe og kun og alene er læs
-og skrivbar af denne bruger. I enkle ord skal du en gang for alle
bare gøre sådan med <filename>.passwd</filename>-filen:
</PARA>

<SCREEN>
<prompt>[root@linus /root]#</prompt> <USERINPUT>chown BRUGER.GRUPPE /home/&lt;brugernavn&gt;/.passwd</USERINPUT>
<prompt>[root@linus /root]#</prompt> <USERINPUT>chmod 600 /home/&lt;brugernavn&gt;/.passwd</USERINPUT>
</SCREEN>

<PARA>
Hvor BRUGER er brugerens gruppe, og GRUPPE er brugerens
standardgruppe.
</PARA>


<sect2 id="netatalk-print">
<title>Udskrivning via Netatalk</title>

<PARA>
Netatalk kan ikke kun agere filserver for Mac-maskiner. Den
kan også lave print-spooling og endda printe til
eksisterende AppleTalk-spools. AppleTalk-spooling opnås
med et program der kaldes papd.
</para>

<para>
Vi antager du allerede har en lokal printer der er sat op under Linux
og som har Mac drivere installeret.  papd vil så annoncere sig selv på
netværket som et print spool og acceptere jobs fra Mac-maskiner på
netværket. Dette kan lade sig gøre, da printerjobs er
Postscript-filer, som papd så vil føde Linux-printsystem (lpd)
med. Eksempler på hvordan papd sættes op kan findes på:
</PARA>

<PARA>
<ULINK URL="http://www.giub.unibe.ch/~eugster/appleprint.html">
http://www.giub.unibe.ch/~eugster/appleprint.html</ULINK>
</PARA>

<PARA>
Det modsatte af dette - altså at printe fra en
Linux-maskine til en Macintosh-printer - kan opnås ved
at bruge pap. Se hvordan med kommandoen <command>man pap</command>. 
</PARA>
</sect2>

<sect2 id="appletalk-andet">
<title>Anden nyttig viden om AppleTalk-server</title>
<indexterm><primary>aecho</primary><secondary>AppleTalk</secondary></indexterm>
<indexterm><primary>getzones</primary><secondary>AppleTalk</secondary></indexterm>
<indexterm><primary>nbplkup</primary><secondary>AppleTalk</secondary></indexterm>

<PARA>
Lige som på Linux og Microsoft-Windows® er der værktøjer til
at pinge maskiner med.  Over TCP/IP findes der
<command>aecho</command> til AppleTalk, der virker ligesom
ping. Kommandoen <command>getzones</command> vil returnere en liste over
de Macintosh zoner der findes på netværket. Ydermere
vil kommandoen <command>nbplkup</command> uden options returnere en
uddybende liste over alle de AppleTalk services der
findes på det lokale netværk.
</para>

<para>
Der findes mange andre programmer til at bruge med
Netatalk - så vær ikke bange for at gå i gang med at udforske området
- held og lykke !
</PARA>

<PARA>
Andre steder på nettet man bør besøge, hvis man bruger
Netatalk:
</PARA>

<PARA>
The Netatalk HOWTO:
<ULINK URL="http://thehamptons.com/anders/netatalk/">
http://thehamptons.com/anders/netatalk/</ULINK>
</PARA>

<PARA>
The Netatalk Faq-O-Matic:
<ULINK URL="http://www.zettabyte.net/fomserve/netatalk/cache/1.html">
http://www.zettabyte.net/fomserve/netatalk/cache/1.html</ULINK>
</PARA>

<PARA>
The Original Netatalk pages:
<ULINK URL="http://www.umich.edu/~rsug/netatalk/">
http://www.umich.edu/~rsug/netatalk/</ULINK>
</PARA>

<PARA>
The Netatalk Admins list:
<ULINK URL="mailto:netatalk-admins-request@umich.edu">
netatalk-admins-request@umich.edu</ULINK>
</PARA>

<PARA>
All registered trademarks and copyrighted names
courtesy of their respective owners.
The author of this article does not under any
circumstances claim rigth over or use of the respective
trademarks mentioned in this article.
</PARA>

<PARA>
MS-Windows® is a trademark of Microsoft® Corporation
Microsoft® is a trademark of Microsoft® Corporation
Macintosh®, AppleTalk and AppleShareIP are trademarks
of Apple® Corporation.
</PARA>

<!--
Denne artikel er oversat fra engelsk af nedenstående
person. Artiklen er taget fra Linux Format nr. 1, side
67 - 70. 

Written, altered and translated by / skrevet, ændret
og oversat af 
Kim Futtrup Petersen, 
wintersilence@hotmail.com
Tuesday, 18.07.2000
-->
</sect2>
</sect1><!-- appletalk -->


<sect1 id="ring-ind-server">
<!-- Skrevet af Claus Sørensen cs@klid.dk -->
<title>Linux som ring-ind-server</title>
<indexterm>
 <primary>Ring-ind-server</primary>
</indexterm>
<indexterm>
 <primary>Callback-server</primary>
</indexterm>
<indexterm>
 <primary>Dial-in-server</primary>
</indexterm>

<para>
Til fjernadministration kan man sætte sin maskine op, så det er muligt
at ringe ind til serveren og dermed administrere den via modem.
</para>

<para>
Programmerne <command>ppp</command> og <command>mgetty</command>
(eller lignende) skal være installeret på den maskine, som skal kunne
ringes op.
</para>

<para>
Find ud af  hvilken serielport dit modem sidder på. 
Eksterne modemer er typisk tilknyttet enheden 
<filename>/dev/ttyS0</filename> 
(COM1 under Windows) eller <filename>/dev/ttyS1</filename> 
(COM2 under Windows). Interne modemer er typisk tilknyttet enheden 
<filename>/dev/ttyS2</filename>
(COM3 under Windows) eller <filename>/dev/ttyS3</filename>
(COM4 under Windows). 
</para>

<para>
Den fundne enhed skal så linkes til enheden 
<filename>/dev/modem</filename> således:
</para>

<screen>
<prompt>[root@linus /root]#</prompt> <userinput>ln -s /dev/ttyS0 /dev/modem</userinput>
</screen>

<para>
Tilføj nedenstående linie i konfigurationsfilen 
<filename>/etc/inittab</filename>
</para>

<screen>
<userinput>S0:2345:respawn:/usr/sbin/mgetty ttyS0 -D /dev/ttyS0</userinput>
</screen>

<para>
Efter den er blevet gemt, opdateres oplysningerne 
med kommandoen <command>init q</command>.
</para>

<para>
For at brugeren der kommer ind skal kunne køre 
<command>pppd</command>, skal rettighederne lige 
ændres, så de ændres til SUID:
</para>

<screen>
<prompt>[root@linus /root]#</prompt> <userinput>chmod u+s /usr/sbin/pppd</userinput>
</screen>

<para>
Så er turen kommet til tilretning af 
<command>mgetty</command> via dets konfigurationsfiler. 
</para>

<para>
Opret en ny konfigurationsfil 
<filename>/etc/ppp/options.server</filename>
for <command>ppp</command>-serveren med følgende 
indhold:
</para>

<screen>
<userinput>-detach
asyncmap 0
modem
crtscts
lock
proxyarp
require-pap
refuse-chap</userinput>
</screen>

<para>
Tilføj de loginnavne (client), som skal have mulighed 
for at få adgang til maskinen, samt tilhørende 
adgangskode (secret) i klartekst. Angiv stjerner for 
tjeneste (server) og IP-adresse i filen 
<filename>/etc/ppp/pap-secrets</filename>
</para>

<screen>
# Secrets for authentication using PAP
# client        server  secret                  IP addresses
<userinput>  martin        *       nitram                  *</userinput>
</screen>

<para>
Disse loginnavne og adgangskoder skal helst ikke være de samme som for
selve systemet, da de jo står i klar tekst. De skal udelukkende bruges
til at få forbindelse med maskinen, så man kan benytte IP-baserede
tjenester på maskinen. Du bør nok ikke lade
<filename>/etc/ppp/pap-secrets</filename> være læsbar for almindelige
brugere. Kør derfor <command>chmod og-rw /etc/ppp/pap-secrets</command>.
</para>

<para>
Til sidst skal angives i filen 
<filename>/etc/ppp/options.ttyS0</filename> 
henholdsvis IP-nummeret for værten og IP-nummeret 
for den maskine der ringer ind:
</para>

<screen>
<userinput>192.168.1.1:192.168.1.222</userinput>
</screen>

<para>
Vær opmærksom på, at IP-nummeret for den maskine 
som ringer ind, skal være en del af samme subnet 
som værten.
</para>

<para>
Så er det muligt at ringe ind til din maskine. 
</para>

<para>
Denne vejledning er baseret på Linux Gazette #38's 
vejledning "Linux Dialin Server Setup", som er 
langt mere udtømmende: 
<ulink url="http://www.linuxgazette.com/issue38/gentry.html">
http://www.linuxgazette.com/issue38/gentry.html</ulink>
</para>

</sect1>


<sect1 id="linux-x">
<title>Linux som X-server og terminal</title>
<para>
En Linux-maskine kan være en glimrende X-server for andre mindre
grafiske terminaler. Tilsvarende kan en Linux-maskine snildt virke som
en X-terminal. 
</para>

<sect2 id="linux-xserver">
<title>Linux som X-server</title>
<para>
For at en Linux-maskine kan virke som grafisk login-server,  skal
der køre en X-server på maskinen. Normalt kræver dette, at man kører i
runlevel 5, dvs. man ændrer linien i <filename>/etc/inittab</filename>
(eksemplet er fra Red Hat)
</para>

<screen>
id:3:initdefault:
</screen>

<para>
til 
</para>

<screen>
id:5:initdefault:
</screen>

<para>
og tilsvarende længere nede i samme fil
</para>

<screen>
# Run xdm in runlevel 5
# xdm is now a separate service
x:5:respawn:/etc/X11/prefdm -nodaemon
</screen>

<para>
ændres til
</para>

<screen>
# Run xdm in runlevel 5
# xdm is now a separate service
x:5:respawn:/etc/X11/prefdm
</screen>

<para>
Anvender du GNOMEs login system, så skal du endvidere rette i
<filename>/etc/X11/gdm/gdm.conf</filename>.
</para>

<screen>
[xdmcp]
Enable=0
</screen>

<para>
rettes til 
</para>

<screen>
[xdmcp]
Enable=1
</screen>


<para>
og root skal så genstarte i runlevel 5 ved at køre <command>init 5</command>.
Den option <filename>-nodaemon</filename> der blev fjernet gør at
andre maskiner kan koble sig ind på serveren. Der er således noget med
sikkerhed, man bør tænke på. På et mindre lukket netværk
spiller det ingen rolle. Nu har du en X-server, og lad os nu se på en
Linux-klient.
</para>
</sect2>

<sect2 id="linux-xklient">
<title>Linux som X-klient</title>

<para>
Du skal logge ind på din Linux-maskine i runlevel 3 og som root skrive 
<command>/usr/X11R6/bin/X -query SERVER</command>, hvor
<filename>SERVER</filename>  er navnet på din X-server. Denne kommando
kan du evt. så senere indsætte som en del af 
<filename>/etc/inittab</filename>.
</para>

<screen>
x:3:respawn:/usr/X11R6/bin/X 2>/var/log/Xlog -dpi 100 -query SERVER
</screen>

<para>
hvor SERVER byttes ud med navnet på den maskine, der er X-server.
</para>
</sect2>

</sect1>




</chapter>
