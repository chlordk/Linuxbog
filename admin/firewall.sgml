<chapter id="firewall">
<title>Dørvogter</title>
<!-- Skrevet af Peter Enoch -->
<indexterm><primary>Dørvogter</primary></indexterm>
<indexterm><primary>Firewall</primary></indexterm>

<sect1>
<title>Hvad er en dørvogter</title>
<para>
 En dørvogter er et stykke hardware eller programmel hvor sikkerheden
 håndhæves og som adskiller et eller flere sikre netværk fra et ikke-sikret
 netværk som for eksempel internettet. Dørvogteren kontrollerer alle forbindelser
 mellem to netværk, og bestemmer hvilken trafik, der må komme hvorhen, og
 hvilken trafik der ikke må komme igennem. Det er så op til netværkets
 administrator at lave sikkerhedsreglerne, der bestemmer hvad der må komme
 igennem og hvad der ikke må. Dørvogtere benyttes som regel som beskyttelse
 mod angreb via internettet, men kan også bruges som beskyttelse overfor
 maskiner på ens lokale netværk. Lad os se på et par forskellige
 dørvogtertyper.
</para>

<sect2 id="filtering-gateway">
<title>Filtering Gateways</title>
<indexterm><primary>Firewall</primary><secondary>Filtering gateway</secondary></indexterm>
<indexterm><primary>Dørvogter</primary><secondary>Filtering gateway</secondary></indexterm>
<indexterm><primary>Screening router</primary></indexterm>

<para>
 Filtrerende dørvogtere benytter routere og pakke-filtreringsregler til
at give eller nægte adgang fra en source-adresse (host) og port
(service) til en anden destinationsadresse og port. Det kaldes også en
screening router og er defineret som en router, der er sat op
til at tillade eller nægte trafik baseret på et sæt adgangsregler, der
er installeret af administratoren.
</para>

<para>
Administratoren kan f.eks. benytte router regler til at tillade, at en
bestemt computer på det eksterne netværk via FTP kan få forbindelse
til en specifik computer på det interne netværk, men samtidigt nægte
den samme computer mulighed for ved hjælp af TELNET at sende til den
interne computer.
</para>

<para>
 Fordele ved en pakkefiltrerende dørvogter er, at de er hurtige, sædvanligvis
 billige, meget fleksible og gennemskuelige. En ulempe ved filtrerende
 dørvogtere er at de ikke kan beskytte mod fejl i programmellet hos de værter
 der er adgang til udefra. Det vil sige hvis man først har fået adgang til en
 vært, kan en cracker prøve at se om der er nogle fejl i programmerne på
 værten for på den måde at få mere adgang.
</para>

</sect2

<sect2 id="circuit-gateway">
<title>Circuit Gateway</title>
<indexterm><primary>Firewall</primary><secondary>Circuit gateway</secondary></indexterm>
<indexterm><primary>Dørvogter</primary><secondary>Circuit gateway</secondary></indexterm>

<para>
 En dørvogter på kredsløbsniveau er en måde at videregive en udgående
 anmodning fra en klient på det interne netværk til en enkelt computer, der
 fungerer som dørvogter, så det fra et andet sted fra ser ud som om
 anmodningen om forbindelsen faktisk kom fra dørvogteren. Den
 væsentligste fordel ved en dørvogter på kredsløbsniveau er, at den forhindrer
 en direkte forbindelse mellem interne og eksterne maskiner. Alle indkommende
 anmodninger blokeres. En ulempe ved circuit niveau gateway er, at det kan
 være nødvendigt at ændre klientprogrammer på det interne netværk, så der kan
 udveksles de nødvendige "håndtryk" med circuit niveau gateway'en (f.eks. via
 SOCKS).
</para>

</sect2>


<sect2 id="program-gateway">
 <title>Program Gateway</title>

 <para>
  En program gateway er et dørvogtersystem, hvor tjenester er beskyttet af
  processer, der opretholder komplet TCP-forbindelsestilstand og
  sekvensering. Program gateways omadresserer ofte trafik, så udgående trafik
  ser ud, som den kommer fra dørvogteren og ikke fra den interne vært.
  En program gateway betragtes som den mest sikre dørvogter man kan lave. En
  ulempe ved denne type dørvogter er at den kræver en slags stedfortræder for
  hvert enkelt program (tjeneste) man har kørende på ens interne net for at
  der kan komme trafik til værten. Et eksempel: Hvis du udefra på internettet
  ønsker at komme i kontakt med en webserver kræver dette at der er en
  HTTP-stedfortræder på dørvogteren, for at det vil virke. En fordel ved denne
  type dørvogter er at hvis der eksempelvis er en person som sætter sin FTP
  server til at svare på port 80, vil Program Gateway'en kunne finde ud af at
  det ikke er HTTP-trafik og derfor afbryde forbindelsen. Dette skyldes at en
  Program Gateway kører igennem alle OSI modellens 7 lag, hvorimod en
  filtrerende dørvogter kun kører på OSI modellens fire nederste lag.
</para>
</sect2>

<sect2 id="sikker-firewall">
<title>Med en dørvogter er man så sikret?</title>

<para>
NEJ, det er man ikke, men man har sikret sig mere end hvis man ikke
havde en dørvogter sat op. Der vil altid være smuthuller i programmer,
fejl i programmer eller diverse sikkerhedsting der kan skyldes
menneskelige fejl.
</para>

<para>
Nu vil det bare næsten være umuligt at ødelægge/stjæle noget som man
ikke vil have at man skal kunne se udefra. Desuden skal der også
ændres på sikkerheden på selve netværket, så at det bliver endnu
vanskeligere at stjæle eller ødelægge data hvis man er nået ind i
systemet. Men uden en dørvogter, er et system som har fast forbindelse
til internettet fuld af huller som enhver hacker med rimelig forstand
på diverse smuthuller og systemer, kan komme ind i og gøre hvad de
vil.
</para>
</sect2>
</sect1>

<sect1 id="firewall-ipchains">
 <title>Dørvogter med IPCHAINS:</title>

 <indexterm><primary>Firewall</primary><secondary>ipchains</secondary></indexterm>
 <indexterm><primary>Dørvogter</primary><secondary>ipchains</secondary></indexterm>
 <indexterm><primary>ipchains</primary></indexterm> 

 <para>
  Fra kerne 2.2 hedder Linux' dørvogterprogram ipchains, hvor det i
  ældre versioner hed ipfwadm.
 </para>

<para>
Ipchains er en filtrerende dørvogter, hvor man kan lave regler for
destination/source porte, adresser og protokol (tcp, udp og icmp).
</para>

<para>
Når man skal opbygge en dørvogter, skal man først vide hvilke tjenester
man kører på eller bag dørvogteren, hvad folk fra internettet skal
kunne på og bag dørvogteren og sidst men ikke mindst hvad folk bag
dørvogteren må have lov til at gøre på internettet.
</para>

<para>
For at lave en dørvogter mod internettet kræver det at du har, mindst
en statisk (fast) IP-adresse, at du benytter en LAN router eller at du
ringer op via et modem og derved får en dynamisk IP-adresse fra din
udbyder.
</para>

<para>
Hvis du har en fast IP-adresse eller LAN router kan du sætte to
netkort i din linux maskine. Det ene skal være synligt fra internettet
af (din router) og det andet skal kunne ses fra dit lokale net.
</para>


<para>
Af lokale adresser man kan benytte til dit private net:
</para>


<itemizedlist mark="bullet" spacing="compact">
<listitem><para>klasse A: 10.0.0.0 - 10.255.255.255</para></listitem> 
<listitem><para>klasse B: 172.16.0.0 - 172.31.255.255</para></listitem>
<listitem><para>klasse C: 192.168.0.0 - 192.168.255.255</para></listitem>
</itemizedlist>

<sect2 id="firewall-ipchains-syntaks">
<title>De vigtigste IPCHAINS syntakser</title>

<itemizedlist mark="bullet" spacing="compact">


<listitem><para><command>-N</command> Opret en ny kæde</para>

<para>Kæderne INPUT,FORWARD og OUTPUT er indbyggede
og skal ikke oprettes.</para>

<para>
<command>ipchains -N NAVN</command>
</para>
</listitem>

<listitem><para><command>-X</command> Slet en tom kæde.</para>
<para>De indbyggede kæder INPUT, FORWARD og OUTPUT
kan ikke slettes.</para>
<para>-X uden kædenavn sletter alle tomme
kæder man selv har oprettet.
</para>

<para>
<command>ipchains -X NAVN</command>
</para>
<para>
<command>ipchains -X</command>
</para>
</listitem>

<listitem><para> 
<command>-P</command> 
ændrer hvad
IPCHAINS skal gøre, hvis der ikke er en regel
for den pakke der kigges på.</para>

<para>Mulighederne er REJECT,ACCEPT og DENY.</para>

<para>ACCEPT betyder at man accepterer pakken.</para>

<para>DENY betyder at man nægter pakken adgang
uden at afsenderen får det at vide.</para>

<para>REJECT betyder at man nægter pakken adgang
og at afsenderen får en ICMP pakke, der
fortæller at pakken er afvist.</para>

<programlisting>
ipchains -P INPUT DENY
</programlisting>
</listitem>

<listitem>
<para>
<command>-L</command> Få en liste over de regler der er i
dørvogteren.</para>

<para>Hvis man benytter -L -n sammen, vil man få listen af alle
regler og der vil ikke blive lavet et reverse lookup af IP
adresserne. Man kan bruge -L -M -n for at se alle masquerading
forbindelser. Ud over disse kan man også bruge -v som viser
hvor mange bytes der er gået igennem en kæde, hvor mange gange en
given regel er blevet ramt af en pakke m.m. Med -L kædenavn ses kun de
regler der er i den givne kæde.
</para>

<para>
<command>ipchains -L -n</command>
</para>

<para>
<command>ipchains -L -n -v</command>
</para>

<para>
<command>ipchains -L -n -M -v</command>
</para>

<para>
<command>ipchains -L NAVN</command>
</para>

<para>Når --line-numbers bruges sammen med -L,
vises reglerne nummereret så man kan se deres
position i kæden.</para>

<para>
<command>ipchains -L --line-numbers</command>
</para>

<para>
Bemærk at der anvende to minus-tegn foran line-numbers.
</para>

</listitem>

<listitem>
<para>
<command>-F</command>
Slet alle regler i en kæde.</para>

<para>
Hvis -F gives uden nogen kæde, vil ALLE regler
blive slettet i alle kæder. Hvis man eksempelvis angiver -F input vil
alle regler i input kæden blive slettet.
</para>

<para>
<command>ipchains -F INPUT</command>
</para>

<para>
<command>ipchains -F</command>
</para>
</listitem>

<listitem>
<para>
<command>-Z</command>  Nulstil tællere i
kæde.</para>

<para>Hvis -Z bruges uden et kædenavn nulstilles
alle tællere i alle kæder.</para>

<para>
<command>ipchains -Z</command>
</para>

<para>
<command>ipchains -Z NAVN</command>
</para>
</listitem>

<listitem>
<para>
<command>-j</command> Jump parameteren
fortæller hvad der skal ske med pakken
når den er accepteret af denne kæde.</para>

<para>Mulighederne er ACCEPT, DENY, REJECT, MASQ,
K&AElig;DE, RETURN eller REDIRECT.</para>

<para>ACCEPT betyder at man accepterer pakken.</para>

<para>
DENY betyder at man nægter pakken adgang
uden at afsenderen får det at vide.</para>

<para>
REJECT betyder at man nægter pakken adgang
og at afsenderen får en ICMP pakke, der
fortæller at pakken er afvist.</para>

<para>
MASQ betyder at sende adressen for nogle maskiner
blev omskrevet til dørvogterens IP-adresse. MASQ kan
kun benyttes med FORWARD reglen.</para>

<para>
Et eksempel:
</para>

<programlisting>
ipchains -A forward -s 192.168.0.1/255.255.255.255 \
 -d 0.0.0.0/0.0.0.0 -i eth0 -j MASQ
</programlisting>

<para>
Dette betyder at adressen 192.168.0.1 som skal til eth0 får eth0's IP-adresse.
</para>


<para>K&AElig;DE betyder, at pakken skal kontrolleres af
en anden kæde du har oprettet. Du kan ikke lade
pakken blive sendt til en af standard
kæderne.</para>

<para>Et eksempel:</para>

<para>
<command>ipchains -A input -s 0.0.0.0/0.0.0.0 1024:65535 \
-d WEBSERVER 80 -p tcp -i ethX -j WEB</command> 
</para>


<para>Først oprettes kæden web, ipchains -N
web, som indeholder regler for trafik der skal fra
input kæden til webserveren.</para>

<para>Ved at opbygge sine regler på denne
måde kan man gøre tingene mere
overskuelige.</para>

<para>RETURN kan kun benyttes på en
dørvogterkæde man selv har oprettet. RETURN
betyder at pakken ryger til enden af kæden og
bliver testet videre derfra hvor den hoppede til en
dørvogterkæde man selv har oprettet.</para>

<para>Et eksempel:</para>

<programlisting>
ipchains -N WEB
ipchains -A input en eller anden dørvogterregel
ipchains -A input -s 0.0.0.0/0.0.0.0  -d WEBSERVER 80 -j WEB
ipchains -A input en eller anden dørvogterregel
ipchains -A input en eller anden dørvogterregel
ipchains -A input en eller anden dørvogterregel

ipchains -A WEB -s en eller anden dørvogterregel
ipchains -A WEB -s BADUSER -j RETURN
ipchains -A WEB -s en eller anden dørvogterregel
ipchains -A WEB -s en eller anden dørvogterregel
</programlisting>

<para>Først oprettes en dørvogterkæde som hedder WEB. Herefter laver
jeg en input regel som hopper til WEB kæden. I WEB kæden laver jeg en
RETURN. Der er nu en pakke fra source adressen BADUSER på vej ind til
port 80 på WEBSERVER. I regel 2 i input kæden bliver pakken sendt
videre til WEB kæden. Regel 2 i WEB kæden, som passer på pakken fra
BADUSER, har parameteren -j RETURN. Dette betyder at resten af
reglerne i WEB kæden ikke bliver testet på pakken, men at pakken
bliver testet videre fra regel 3 i input kæden.</para>

<para>REDIRECT betyder at du, ud fra en given regel, kan sende
pakkerne videre til en lokal port på maskinen. REDIRECT kan kun
benyttes med INPUT reglen.</para>

<para>Et eksempel:</para>


<programlisting>
ipchains -A input -p tcp -s 192.168.0.0/255.255.255.0 1024:65535 \
-d 0.0.0.0/0.0.0.0 80 -j REDIRECT 8080
</programlisting>


<para>
Dette betyder at alle web trafik anmodninger fra IP-adresserne
192.168.0.0-255 vil blive sendt til port 8080 på dørvogteren. Dette kan
være nyttigt til at lave en transparent proxy.
</para>
</listitem>

<listitem><para> <command>-A</command> Tilføj en regel i din
dørvogterkæde. Med -A bliver reglen tilføjet i bunden af en
dørvogterkæde.</para>

<programlisting>
ipchains -A input -s 192.168.0.1/255.255.255.255 -i eth0 -j ACCEPT
</programlisting>
</listitem>


<listitem><para><command>-I</command> Indsæt en regel i din
dørvogterkæde. Hvis -I angives uden noget andet vil reglen blive
indsat øverst i kæden.
</para>

<programlisting>
ipchains -I input 2 -s 0.0.0.0/0.0.0.0 1024:65535 -d 192.192.192.192/255.255.255.255 113 -j ACCEPT
</programlisting>

<para>
Input 2 vil indsætte en regel i position 2 i kæden input.
</para>
</listitem>

<listitem><para> <command>-R</command> Er ligesom -I men overskriver
en regel på en bestemt position.</para>

<programlisting>
ipchains -R input 2 -s 0.0.0.0/0.0.0.0 1024:65535 \
  -d 192.192.192.192/255.255.255.255 113 -j ACCEPT
</programlisting>

<para>
Dette vil overskrive det der stod i dørvogterkæden input position 2.
</para>
</listitem>

<listitem><para> <command>-D</command> Sletter en regel i en
kæde. Hvis reglens nummer angives, slettes
denne regel. Hvis reglen angives, slettes alle
positioner hvor denne regel findes.</para>

<programlisting>
ipchains -D input -s 0.0.0.0/0.0.0.0 1024:65535 \
  -d 192.192.192.192/255.255.255.255 113 -j ACCEPT ipchains -D input 2
</programlisting>
</listitem>

<listitem><para> <command>-C</command> Test en regel i dørvogteren og
få af vide om pakken vil blive accepteret, nægtet, masq, sendt videre
til en lokal port (redirect) eller om den bliver afvist.
</para>

<programlisting>
ipchains -C input -s 10.0.0.1/255.255.255.255 1054 \
 -d 192.192.192.192/255.255.255.255 113 -i eth0 -p tcp
</programlisting>
</listitem>

<listitem><para>
<command>-M -S</command> sæt hvornår en forbindelsen i MASQ tabellen skal fjernes. Dette gøres for tcp tcpfin og udp.
</para>

<para>
<command>ipchains -M -L 7200 60 160</command> &ndash; det første tal betyder
at efter 7200 sek. (2 timer) vil en ikke aktiv TCP forbindelse blive
fjernet. Det andet tal betyder at efter 60 sek. timeout efter en "FIN"
pakke er modtaget vil forbindelsen i MASQ tabellen blive fjernet. Det
sidste tal betyder at UDP trafik som ikke har været aktivt skal
timeout efter 160 sek. Det er vigtigst at sætte den til de 160
sek. Eller højere hvis man kører med ICQ !!.
</para>
</listitem>

<listitem><para> <command>-y</command> pakker hvor syn bitten er
sat. Det vil sige en forbindelse til en service. -y kan kun benyttes
med -p tcp.
</para>

<programlisting>
ipchains -A input -s 0.0.0.0/0.0.0.0 1024:65535 \
  -d 192.192.192.192/255.255.255.255 113 -y -j ACCEPT
</programlisting>
</listitem>

<listitem><para>
<command>-x</command> betyder hvis man bruger den sammen med -v at den
viser antal bytes, megabytes eller gigabytes præcis i stedet for
normalt at afrunde.
</para>

<programlisting>
ipchains -L -x -v
</programlisting>

</listitem>

<listitem><para><command>-b</command> betyder at der bliver lavet en
regel for det du skriver og en regel hvor source og destination er
vendt om. 
</para>

<programlisting>
ipchains -A input -b -s 192.168.0.1/255.255.255.255 \
  -d 0.0.0.0/0.0.0.0 -j ACCEPT 
</programlisting>

<para>
Dette vil lave to regler i input kæden.  En hvor source adressen er
192.168.0.1 og destinations adressen er 0.0.0.0/0.0.0.0 og en anden
regel hvor source adressen er 0.0.0.0/0.0.0.0 og destinations adressen
er 192.168.0.1.
</para>

</listitem>

<listitem><para> <command>-i</command> betyder interface. For en INPUT
kæde er det interfaceet, hvor pakken kommer ind. For en OUTPUT kæde er
det interfaceet, hvor pakken sendes ud. For en FORWARD kæde er det
interfaceet, hvor pakken skal hen.  Hvis man har 2 netkort, eth0 og
eth1, og skal have en FORWARD regel der går fra eth0 til eth1, skal
man skrive -i eth1. Hvis man skriver -i eth+, betyder det at reglen
gælder for alle interfaces, der starter med eth.</para>
</listitem>

<listitem><para> <command>!</command> betyder hvor dette ikke er
sat. Eksempelvis ! -y betyder pakken hvor syn bitten ikke er sat. !
kan sættes på porte, source adresse, destination adresse, interface og
på protokollerne TCP,UDP og ICMP.
</para>

<programlisting>
ipchains -A input -s 0.0.0.0/0.0.0.0 \
  -d 111.111.111.111/255.255.255.255 1024:65535 -p tcp ! -y -j ACCEPT
ipchains -A input -s ! 192.168.0.1/255.255.255.255 -j ACCEPT
ipchains -A input -d ! 192.168.0.1/255.255.255.255 -j ACCEPT
ipchains -A input -s 192.168.0.1/255.255.255.255 -p ! icmp -j ACCEPT
ipchains -A input -s 192.168.0.1/255.255.255.255 ! 80 -j ACCEPT
ipchains -A input ! -i eth0 -s 192.168.0.1/255.255.255.255 -j ACCEPT
</programlisting>

</listitem>

<listitem><para> <command>-p</command> betyder hvilken protokol en
given regel skal gælde for. Man kan vælge TCP,UDP og ICMP.
</para>

<programlisting>
ipchains -A input -s 192.168.0.1/255.255.255.255 \
  -d 0.0.0.0/0.0.0.0 -p TCP -j MASQ
</programlisting>
</listitem>

<listitem><para>
<command>-s</command> betyder source adresse. 
Hvis -s ikke er sat i en regel vil -s være sat til 0.0.0.0/0.0.0.0 som betyder alle adresser.
</para>
</listitem>

<listitem><para> <command>-d</command> betyder destination
adresse. Hvis -d ikke er sat i en regel vil -d være sat til
0.0.0.0/0.0.0.0 som betyder alle adresser.
</para>

<para>
 Port benyttes efter en source adresse eller destinations adresse. Med TCP og
 UDP kan man skrive et navn på en tjeneste fra filen
 <filename>/etc/service</filename> eller et port nummer. 1024:65535 betyder
 alle portene fra 1024
til 65535, begge inklusive. Man kan også skrive
ssh:smtp som betyder det samme, altså port 22 til port 25, denne måde
er dog lidt mere uoverskuelig. Hvis man skal vælge port med ICMP man
skrive ipchains --help icmp for at få en oversigt over de muligheder
man har for ICMP trafik.
</para>
</listitem>

<listitem><para> <command>-t</command> betyder at man kan ændre de
såkaldte Type Of Service bits i pakken. Af muligheder er:
</para>

<programlisting>
-t 0x01 0x10 = Minimum Delay
-t 0x01 0x08 = Maximum Throughput
-t 0x01 0x04 = Maximum Reliability
-t 0x01 0x02 = Minimum Cost
</programlisting>

<para>
Som eksempel kan vi få minimum delay på SSH trafik ud kan man skrive:
</para>

<programlisting>
ipchains -A output -p tcp -d 0.0.0.0/0.0.0.0 22  -t 0x01 0x10
</programlisting>

</listitem>

<listitem><para> <command>-l</command> bruges når man vil logge en
bestemt pakke. Alle log beskeder kommer som standard til at ligge i
<filename>/var/log/messages</filename>. En logning i
<filename>/var/log/messages</filename> kan se sådan ud:
</para>

<programlisting>
Jun 4 14:29:26 lxhome kernel: Packet log: input DENY eth0 proto=6
111.111.111.111:1033 100.100.100.100:80 l=84 s=0x00 i=3121 f=0x0000
t=64
</programlisting>

<para>
1.Jun 4 14:29:26 betyder at logningen blev taget den 4 Juni kl. 14:29:26.
</para>

<para>2.lxhome er maskinens navn.
</para>

<para>3.kernel: Packet log betyder at der er lavet en log for pakken.
</para>

<para>4.input viser hvilken kæde logningen er lavet på. Dette kunne
også være FORWARD,OUTPUT eller en kæde man selv har lavet.
</para>

<para>5.DENY betyder at det er hvad pakken har
fået ud fra enten den standard policy som der
er på en given kæde eller at man i en
dørvogterregel har givet pakken en DENY. Andre
muligheder her er ACCEPT, REJECT, DENY, MASQ,
REDIRECT eller RETURN.</para>

<para>6.eth0 betyder at logningen blev taget på interfacet eth0.
</para>

<para>7.proto=6 betyder at det er en TCP pakke, af andre muligheder er proto=1 (ICMP) og proto=17 (UDP). Se også <filename>/etc/protocols</filename>.
</para>

<para>8.111.111.111.111:1033 er source adressen og source porten.
</para>

<para>9.100.100.100.100:80 er destinations adressen og destinations porten.
</para>

<para>10.l=84 er længden på pakken.
</para>

<para>11.s=0x00 er type of service feltet.
</para>

<para>12.i=3121 er pakkens datagram ID.
</para>

<para>13.f=0x0000 er pakken fragments ID. En pakke der starter med 0x2
eller 0x3 betyder flere fragmenter, så denne er kun en af flere pakker
som skal samles til en. En værdi som starter med 0x4 eller 0x5 betyder
at bit'en "Do not Fragment" er sat.
</para>

<para>14.t=64 er pakkens Time To Live felt. 
Eksempel på en logning:
</para>

<programlisting>
ipchains -A input -s BAD GUY -l vil logge alt trafik fra BAD GUY til syslog.
</programlisting>
</listitem>
</itemizedlist>
<para>
Læs mere om <filename>/var/log/messages</filename> i
<xref linkend="varlogmessages"/>.
</para>
</sect2>


<sect2 id="firewall-eksempel">
<title>Dørvogter sammen med LAN Router eller modemopkobling</title>
<para>
Det du behøver for at lave en dørvogter med en LAN router er en Linux-maskine med to netkort, et som kan snakke med din LAN router og et til
at snakke med dit lokale net. Tilsvarende kan det være at du laver
internet-opkobling med et modem fra tid til anden. I begge tilfælde
skal du have dørvogterregler på din maskine for at sikre dit netværk
mod andre. Lad os se på hvordan man kan lave dørvogterreglerne.
Følgende eksempel kan hentes fra 
<ulink url="http://&linuxbogurl;/admin/eksempler">&linuxbogurl;/admin/eksempler</ulink>.
</para>

<programlisting>
#!/bin/sh
export path=/sbin:/usr/bin:/bin
clear
# Ens eksterne netkort ud mod internettet.
# Eksempel extif="ppp0", ippp0 eller "eth0"
extif="ppp0"

# Det interne netkort.
# Eksempel intif="eth0"
intif="eth0"

# Hvis man via sit netkort eller ppp adapter får en dynamisk IP-addresse fra
# sin internetudbyder skal DHCP stå til yes.
dhcp="yes"

# Hvis denne sættes til yes vil ALT udp trafik ind til portene 55000 til 65535
# blive tilladt ind til EXTIF på dørvogteren.
udpinok=""

# Ens IP-adresse på ens eksterne netkort eller ppp adapter.
extip=`ifconfig | grep -A 4 $EXTIF | awk '/inet/ { print $2 } ' | sed -e s/addr://`

if [ "$EXTIP" = '' ]; then
   echo "Kan ikke finde IP-adressen på $EXTIF "
   exit 1
fi

# Alle IP-adresser.
anyip="0.0.0.0/0.0.0.0"

# IP-adresse på det interne netværk.
intlan=`ifconfig | grep -A 4 $INTIF | awk '/inet/ { print $2 } ' | sed -e s/addr://`"/"`ifconfig | grep -A 4 $INTIF | awk '/Mask/ { print $4 } ' | sed -e s/Mask://`

if [ "$INTLAN" = '' ]; then
   echo "Kan ikke finde IP-adressen på $INTLAN ..."
   echo
   exit 1
fi

DNS1=`awk -vnum=1 'BEGIN{i=1}/nameserver/{ns[i]=$2;i++}END{print ns[num]}' /etc/resolv.conf`
DNS2=`awk -vnum=2 'BEGIN{i=1}/nameserver/{ns[i]=$2;i++}END{print ns[num]}' /etc/resolv.conf`
DNS3=`awk -vnum=3 'BEGIN{i=1}/nameserver/{ns[i]=$2;i++}END{print ns[num]}' /etc/resolv.conf`

if [ "$DNS1" = '' ]; then
   echo "Kan ikke finde nogen DNS server i resolv.conf."
   exit 1
fi

# Slår IP forwarding til
echo "1" > /proc/sys/net/ipv4/ip_forward

# Slår IP Spoofing attacks fra.
for file in /proc/sys/net/ipv4/conf/*/rp_filter
do
  echo "2" > $file
done

# Slår syn-cookies til (syn-flooding attacks) hvis understøttelse af det er med i din oversættelse af kernen.
if [ -f /proc/sys/net/ipv4/tcp_syncookies ]; then
  echo "1" >/proc/sys/net/ipv4/tcp_syncookies
fi

# Sætter ip_dynaddr til 1 hvis DHCP = yes.
if [ "`echo $DHCP | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
  echo "1" > /proc/sys/net/ipv4/ip_dynaddr
 else
  echo "0" > /proc/sys/net/ipv4/ip_dynaddr
fi

# Slår source routing fra
for file in /proc/sys/net/ipv4/conf/*/accept_source_route
do
 echo "0" > $file
done

# Slår ICMP redirect fra
for file in /proc/sys/net/ipv4/conf/*/accept_redirects
do
 echo "0" > $file
done

# Slår IP Always Defrag til.
echo "1" > /proc/sys/net/ipv4/ip_always_defrag

# Liste over porte der åbnes lokalt på dørvogteren, når der laves en forbindelse ud.
echo "55000 60999" >/proc/sys/net/ipv4/ip_local_port_range

# Slet alle regler i kæderne
ipchains -F
ipchains -X

# &AElig;ndre INPUT til DENY og OUTPUT og FORWARD kæden til REJECT
ipchains -P input DENY
ipchains -P forward REJECT
ipchains -P output REJECT

# &AElig;ndre IP masquerading timeouts.
ipchains -M -S 7200 10 160

# Load disse moduler til IP MASQ

# Bruges til noget videokonference.
#if [ -f /lib/modules/`uname -r`/ipv4/ip_masq_cuseeme.o ]; then
#   cuseeme="yes"
#  if ! [ "`cat /proc/modules | awk '/ip_masq_cuseeme/ { print $1 }'`" = ip_masq_cuseeme ]; then 
#   insmod /lib/modules/`uname -r`/ipv4/ip_masq_cuseeme.o
#  fi
#fi

# Bruges så aktiv FTP virker.
if [ -f /lib/modules/`uname -r`/ipv4/ip_masq_ftp.o ]; then
   ftp="yes"
  if ! [ "`cat /proc/modules | awk '/ip_masq_ftp/ { print $1 }'`" = ip_masq_ftp ]; then 
   insmod /lib/modules/`uname -r`/ipv4/ip_masq_ftp.o
  fi
fi

# Bruges til IRC så fil overførelse virker.
if [ -f /lib/modules/`uname -r`/ipv4/ip_masq_irc.o ]; then
   irc="yes"
  if ! [ "`cat /proc/modules | awk '/ip_masq_irc/ { print $1 }'`" = ip_masq_irc ]; then 
   insmod /lib/modules/`uname -r`/ipv4/ip_masq_irc.o
  fi
fi

# Bruges til Quake over internettet
if [ -f /lib/modules/`uname -r`/ipv4/ip_masq_quake.o ]; then
   quake="yes"
  if ! [ "`cat /proc/modules | awk '/ip_masq_quake/ { print $1 }'`" = ip_masq_quake ]; then 
   insmod /lib/modules/`uname -r`/ipv4/ip_masq_quake.o
  fi
fi

# Bruges så UDP virker med Real Audio
if [ -f /lib/modules/`uname -r`/ipv4/ip_masq_raudio.o ]; then
   raudio="yes"
  if ! [ "`cat /proc/modules | awk '/ip_masq_raudio/ { print $1 }'`" = ip_masq_raudio ]; then 
   insmod /lib/modules/`uname -r`/ipv4/ip_masq_raudio.o
  fi
fi

# Bruges til live video over internettet
#if [ -f /lib/modules/`uname -r`/ipv4/ip_masq_vdolive.o ]; then
#   vdolive="yes"
#  if ! [ "`cat /proc/modules | awk '/ip_masq_vdolive/ { print $1 }'`" = ip_masq_vdolive ]; then 
#   insmod /lib/modules/`uname -r`/ipv4/ip_masq_vdolive.o
#  fi
#fi

# Bruges til ICQ
if [ -f /lib/modules/`uname -r`/ipv4/ip_masq_icq.o ]; then
   icq="yes"
  if ! [ "`cat /proc/modules | awk '/ip_masq_icq/ { print $1 }'`" = ip_masq_icq ]; then 
   insmod /lib/modules/`uname -r`/ipv4/ip_masq_icq.o
  fi
fi

# IP-adresse som siger den har local loopbacks IP-adresse skal nægtes og logges
ipchains -A input -s 127.0.0.1/32 -i $EXTIF -l -j DENY

# IP-adresse som siger den har EXTIP IP-adresse skal nægtes og logges
ipchains -A input -s $EXTIP -i $EXTIF -l -j DENY

# IP-adresse som siger den har en IP-adresse i det "private" og multicast områdeskal nægtes og logges.
ipchains -A input -s 10.0.0.0/8 -i $EXTIF -l -j DENY
ipchains -A input -s 172.16.0.0/12 -i $EXTIF -l -j DENY
ipchains -A input -s 192.168.0.0/16 -i $EXTIF -l -j DENY
ipchains -A input -s 224.0.0.0/4 -i $EXTIF -l -j DENY
ipchains -A input -s 240.0.0.0/5 -i $EXTIF -l -j DENY

# Acceptere DHCP retur trafik ind hvis man ikke har fast IP-adresse
if [ "`echo $DHCP | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
  ipchains -A input -i $EXTIF -p udp -s $ANYIP 67 -d 255.255.255.255/0 68 -j ACCEPT
fi 

# Acceptere DHCP retur trafik ud hvis man ikke har fast IP-adresse
if [ "`echo $DHCP | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
  ipchains -A output -i $EXTIF -p udp -s 255.255.255.255/0 68 -d $ANYIP 67 -j ACCEPT
fi 

# Acceptere DHCP trafik ind og ud af $INTIF hvis man kører en DHCP server
# på dørvogtermaskinen.
if [ "`ps -C dhcpd | grep dhcpd | awk ' { print $4 }'`" = dhcpd ]; then
  ipchains -A input -i $INTIF -p udp -s 255.255.255.255/0 68 -d $ANYIP 67 -j ACCEPT
  ipchains -A output -i $INTIF -p udp -s $ANYIP 67 -d 255.255.255.255/0 68 -j ACCEPT
fi

# Internt LAN ind til dørvogter er tilladt
ipchains -A input -s $INTLAN -i $INTIF -j ACCEPT

# Alt retur trafik ud af dørvogteren til internt LAN er tilladt 
ipchains -A output -d $INTLAN -i $INTIF -j ACCEPT

# Alt trafik som bliver forwarded videre til det eksterne netkort skal MASQ
ipchains -A forward -s $INTLAN -i $EXTIF -j MASQ

# Tillad kun TCP retur trafik.
ipchains -A input -i $EXTIF ! -y -p tcp -s $ANYIP -d $EXTIP 55000:65535 -j ACCEPT

# Tillad ALT UDP trafik til portene 55000 til 65535, der er INGEN garanti for
# at dette er retur trafik til ens dørvogter eller en forbindelse til en tjeneste
if [ "`echo $UDPINOK | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
   ipchains -A input -i $EXTIF -s $ANYIP -d $EXTIP 55000:65535 -p udp -j ACCEPT
fi

# Tillad kun trafik ud fra EXTIF fra EXTIP IP-adresse.
ipchains -A output -i $EXTIF -p tcp -s $EXTIP 55000:65535 -d 0/0 -j ACCEPT
ipchains -A output -i $EXTIF -p udp -s $EXTIP 55000:65535 -d 0/0 -j ACCEPT

# Afvis Auth trafik ind.
ipchains -A input -i $EXTIF -p tcp -s $ANYIP 1024:65535 -d $EXTIP 113 -j REJECT

# Tillad kun DNS retur trafik fra DNS servere der står i /etc/resolv.conf
if ! [ "$DNS1" = "" ]; then
   if ! [ "`echo $UDPINOK | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
    ipchains -A input -i $EXTIF -p udp -s $DNS1 53 -d $EXTIP 55000:65535 -j ACCEPT
   fi
fi    

if ! [ "$DNS2" = "" ]; then
   if ! [ "`echo $UDPINOK | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
    ipchains -A input -i $EXTIF -p udp -s $DNS3 53 -d $EXTIP 55000:65535 -j ACCEPT
   fi
fi    

if ! [ "$DNS3" = "" ]; then
   if ! [ "`echo $UDPINOK | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
    ipchains -A input -i $EXTIF -p udp -s $DNS3 53 -d $EXTIP 55000:65535 -j ACCEPT
   fi
fi    

# Acceptere aktivt FTP-data fra internettet til dørvogter hvis FTP-modul er indlæst
if [ "`cat /proc/modules | awk '/ip_masq_ftp/ { print $1 }'`" = ip_masq_ftp ]; then
    ipchains -A input -i $EXTIF -p tcp -s $ANYIP 20 -d $EXTIP 55000:65535 -y -j ACCEPT
fi

# Acceptere ICQ trafik fra internettet til dørvogter hvis ICQ-modul er indlæst
if [ "`cat /proc/modules | awk '/ip_masq_icq/ { print $1 }'`" = ip_masq_icq ]; then
   if ! [ "`echo $UDPINOK | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
    ipchains -A input -i $EXTIF -p udp -s $ANYIP 4000 -d $EXTIP 55000:65535 -j ACCEPT
   fi
fi

# Acceptere Real Audio-trafik fra internettet til dørvogter hvis RAUDIO-modul er indlæst
if [ "`cat /proc/modules | awk '/ip_masq_raudio/ { print $1 }'`" = ip_masq_raudio ]; then
   if ! [ "`echo $UDPINOK | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
    ipchains -A input -i $EXTIF -p udp -s $ANYIP 6970:7170 -d $EXTIP 55000:65535 -j ACCEPT
   fi
fi

# Acceptere CUSEEME-trafik fra internettet til dørvogter hvis CUSEEME-modul er indlæst
if [ "`cat /proc/modules | awk '/ip_masq_cuseeme/ { print $1 }'`" = ip_masq_cuseeme ]; then
   if ! [ "`echo $UDPINOK | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
    ipchains -A input -i $EXTIF -p udp -s $ANYIP 7648:7649 -d $EXTIP 55000:65535 -j ACCEPT
    ipchains -A input -i $EXTIF -p udp -s $ANYIP 24032 -d $EXTIP 55000:65535 -j ACCEPT    
   fi
fi

# Acceptere QUAKE-trafik fra internettet til dørvogter hvis QUAKE-modul er indlæst
if [ "`cat /proc/modules | awk '/ip_masq_quake/ { print $1 }'`" = ip_masq_quake ]; then
   if ! [ "`echo $UDPINOK | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
    ipchains -A input -i $EXTIF -p udp -s $ANYIP 26000 -d $EXTIP 55000:65535 -j ACCEPT
    ipchains -A input -i $EXTIF -p udp -s $ANYIP 1025:1200 -d $EXTIP 55000:65535 -j ACCEPT    
   fi
fi

# Tillad source-quench, echo-request, fragmentation-neeeded, parameter-problem 
# port-unreachable og time-exceeded ICMP trafik ud.
ipchains -A output -i $EXTIF -s $EXTIP echo-request -p icmp -j ACCEPT
ipchains -A output -i $EXTIF -s $EXTIP source-quench -p icmp -j ACCEPT
ipchains -A output -i $EXTIF -s $EXTIP time-exceeded -p icmp -j ACCEPT
ipchains -A output -i $EXTIF -s $EXTIP parameter-problem -p icmp -j ACCEPT
ipchains -A output -i $EXTIF -s $EXTIP fragmentation-needed -p icmp -j ACCEPT
ipchains -A output -i $EXTIF -s $EXTIP port-unreachable -p icmp -j ACCEPT

# Tillad source-quench, echo-reply, destination-unreachable, parameter-problem 
# og time-exceeded ICMP trafik ind.
ipchains -A input -i $EXTIF -s $ANYIP echo-reply -p icmp -j ACCEPT
ipchains -A input -i $EXTIF -s $ANYIP source-quench -p icmp -j ACCEPT
ipchains -A input -i $EXTIF -s $ANYIP time-exceeded -p icmp -j ACCEPT
ipchains -A input -i $EXTIF -s $ANYIP parameter-problem -p icmp -j ACCEPT
ipchains -A input -i $EXTIF -s $ANYIP destination-unreachable -p icmp -j ACCEPT


# Tillad ALT UDP trafik til portene 55000 til 65535, der er INGEN garanti for
# at dette er returtrafik til ens dørvogter eller en forbindelse til en tjeneste
ipchains -A input -i $EXTIF -s $ANYIP -d $EXTIP 55000:65535 -p udp -j ACCEPT


# Hvis /etc/firewall.debug findes, så logges alle INPUT og OUTPUT pakker som ikke
# accepteres, derved kan man via /var/log/messages se hvad der eventuelt skal
# åbnes for.
if [ -f /etc/firewall.debug ]; then
  ipchains -A input -l
  ipchains -A output -l
fi

# Hvis /etc/firewall.debug findes, så vises de variable og de ting som
# programmet selv finder ud af.
if [ -f /etc/firewall.debug ]; then
 if [ "`echo $DHCP | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
  echo "Du får dynamisk IP tildelt fra din ISP til dit interface $EXTIF"
 fi
  echo "Dit interface ud mod internettet er: $EXTIF"
  echo "IP-adressen på dit interface $EXTIF ud mod internettet er: $EXTIP"
  echo "Dit interface ud mod dit LAN er: $INTIF"
  echo "IP-adressen og netmasken på dit LAN interface er: $INTLAN"
 if ! [ "$DNS1" = "" ]; then
   if ! [ "`echo $UDPINOK | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
    echo "Din 1. DNS server i resolv.conf er: $DNS1"
   fi
 fi
 if ! [ "$DNS2" = "" ]; then
   if ! [ "`echo $UDPINOK | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
    echo "Din 2. DNS server i resolv.conf er: $DNS2"
   fi
 fi
 if ! [ "$DNS3" = "" ]; then
   if ! [ "`echo $UDPINOK | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
    echo "Din 3. DNS server i resolv.conf er: $DNS3"
   fi
 fi
 if [ "`echo $UDPINOK | tr '[A-Z]' '[a-z]'`" = "yes" ]; then
  echo "ALT UDP trafik til portene 55000:65535 er tilladt !!"
 fi
 if [ "`ps -C dhcpd | grep dhcpd | awk ' { print $4 }'`" = dhcpd ]; then
  echo "Du kører en DHCP server og der er lavet INPUT og OUTPUT regler for dette."
 fi
  echo "IP MASQ modulerne bliver loadet i kataloget:" /lib/modules/`uname -r`/ipv4/
 if [ "$FTP" = "yes" ]; then
  echo "IP MASQ: FTP modul er installeret."
 else
  echo "IP MASQ: FTP modul er ikke installeret."
 fi
 if [ "$CUSEEME" = "yes" ]; then
  echo "IP MASQ: CUSEEME modul er installeret."
 else
  echo "IP MASQ: CUSEEME modul er ikke installeret."
 fi
 if [ "$ICQ" = "yes" ]; then
  echo "IP MASQ: ICQ modul er installeret."
 else
  echo "IP MASQ: ICQ modul er ikke installeret."
 fi
 if [ "$IRC" = "yes" ]; then
  echo "IP MASQ: IRC modul er installeret."
 else
  echo "IP MASQ: IRC modul er ikke installeret."
 fi
 if [ "$QUAKE" = "yes" ]; then
  echo "IP MASQ: QUAKE modul er installeret."
 else
  echo "IP MASQ: QUAKE modul er ikke installeret."
 fi
 if [ "$RAUDIO" = "yes" ]; then
  echo "IP MASQ: RAUDIO modul er installeret."
 else
  echo "IP MASQ: RAUDIO modul er ikke installeret."
 fi
 if [ "$VDOLIVE" = "yes" ]; then
  echo "IP MASQ: VDOLIVE modul er installeret."
 else
  echo "IP MASQ: VDOLIVE modul er ikke installeret."
 fi
  echo "Hvis nogen af disse omlysninger er forkerte skal du rette dem i programmet."
fi
</programlisting>

<para>
Den eneste variabel man som regel skal ændre er EXTIF som er ens
interface ud mod internettet. Denne variabel vil hvis man har analogt
modem normalt være ppp0, hvis man har ISDN modem ippp0 og hvis man har
LAN router være eth0 eller eth1. 
INTIF er det interface som er ud mod ens lokale netværk og vil som
regel være eth0 eller eth1. Hvis man har modem og ikke har en statisk
IP-adresse skal variablen DHCP sættes til yes.
Hvis man har en LAN router skal denne variabel ikke sættes. Den sidste
variabel er UDPINOK som tillader ALT UDP trafik ind til dørvogteren på
portene 55000 til 65535. Denne variabel er ikke sat som standard og
skal kun sættes hvis man har et program der benytter UDP som ikke
virker med programmet og man ikke selv kan finde ud af at lave en
dørvogterregel til det. Hvis UDPINOK sættes til yes, vil det betyde at
der er et hul i dørvogteren.  Som standard er EXTIF sat til ppp0,
INTLAN sat til eth0, DHCP sat til yes og UDPINOK ikke sat.
</para>

<para>
Man skal være opmærksom på at ting som kører via UDP protokollen som
standard ikke tillades ind som retur trafik og man skal derfor selv
lave en regel for det. Til de moduler der startes, som benytter UDP
som transport protokol, eksempelvis ICQ, vil der i programmet automatisk
blive lavet en dørvogterregel, så ICQ retur trafik ind er tilladt. Da
al trafik ud bliver afvist og al trafik ind bliver nægtet, skal man
selv sætte regler op, hvis man eksempelvis har en web server stående,
så folk udefra kan få forbindelse med den. Hvis man ønsker at lave en
forbindelse til en tjeneste som benytter UDP som transportprotokol,
skal man indføre en af disse linjer i opsætningen:
</para>

<programlisting>
ipchains -A input -i $EXTIF -p udp -s host/255.255.255.255 port \
   -d $EXTIP 55000:65535 -j ACCEPT
</programlisting>
 
<para>
eller
</para>

<programlisting>
ipchains -A input -i $EXTIF -p udp -s 0.0.0.0/0.0.0.0 port \
  -d $EXTIP 55000:65535 -j ACCEPT
</programlisting>

<para>
Parameteren "host" i første linje er lig med en IP-adresse og port er
lig med den port som tjenesten kører på. Første linje betyder at du
accepterer trafik fra IP-adressen "host" og som har porten
"port". Anden linje betyder at du acceptere trafik fra hvilken som
helst IP-adresse som har porten "port".
</para>

<para>
Hvis man vil give folk lov til at få forbindelse med min web
server skal man skrive dette:
</para>

<programlisting>
ipchains -A input -i $EXTIF -p tcp -s 0.0.0.0/0.0.0.0 1024:65535 \
  -d $EXTIP 80 -j ACCEPT
ipchains -A output -i $EXTIF -p tcp -s $EXTIP 80 \
  -d 0.0.0.0/0.0.0.0 1024:65535 -j ACCEPT
</programlisting>

 <para>
  Dørvogteropsætningen skal gemmes i <filename>/etc/firewall</filename> og der
  skal man skrive <command>chmod 700 /etc/firewall</command>, så
  systemadministratoren er den eneste der kan læse, skrive og køre opsætningen.
 </para>
</sect2>

<sect2 id="firewall-initscript">
<title>INIT-program til dørvogteropsætning</title>

<para>
 Med dette program kan man blandt andet starte, stoppe, få en status om
 de regler der er i dørvogteren og mere.  For at få programmet startet 
 hver gang man genstarter sin Linux-maskine skal programmet lægges under
<filename>/etc/rc.d/init.d/</filename> og der skal man skrive
<command>chmod 700 /etc/rc.d/init.d/firewall</command>. Herefter
skrives <command>chkconfig --add firewall</command> (med dobbelt
minus), og til sidst <command>chkconfig --level 3 firewall
on</command> (med dobbelt minus). Dette betyder, at dørvogteropsætningen
bliver kørt hver gang Linux startes i runlevel 3.  Dette skal dog kun
gøres hvis man har en LAN router eller har en statisk IP-adresse. Da
man på dette tidspunkt i opstarten af linux ikke har lavet et opkald
til sin internetudbyder, kan programmet ikke finde IP-adressen på ens
interface.  Hvis man benytter et modem skal man i stedet, hvis man
kører med Red Hat, indsættes <command>/etc/rc.d/init.t/firewall
start</command> nederst i filen
<filename>/etc/ppp/ip-up.local</filename> og så stadig benytte INIT
programmet. Hvis man ønsker at se hvilke variable og ting som programmet
selv har fundet ud af, kan man skrive
<filename>/etc/rc.d/init.d/firewall</filename> debug. For at se de
muligheder man har skriver man
<filename>/etc/rc.d/init.d/firewall</filename>.
</para>

<programlisting>
#!/bin/sh
# chkconfig: 35 20 80
# description: Dørvogterinitialiseringsprogram til at starte 
#	       og stoppe dørvogter (fra Linux-bog).
# Lavet af:    Peter Enoch
export path=/sbin:/bin:/usr/bin

fw=`cat /proc/net/ip_fwchains`

. /etc/rc.d/init.d/functions

if ! [ -f /etc/firewall ]; then
     echo "Kan ikke finde dørvogteropsætning i /etc !!"
     exit 0
fi

case "$1" in
 start)
            action "Dørvogter startes: " /etc/firewall
    ;;

 stop)
         if ! [ "$FW" = "" ]; then
    	    action "Dørvogter stoppes: " \
	      ipchains -F; \
	      ipchains -P input ACCEPT; \
	      ipchains -P forward ACCEPT; \
	      ipchains -P output ACCEPT; \
	      ipchains -X; \
	      rmmod ip_masq_ftp 2>/dev/null; \
	      rmmod ip_masq_icq 2>/dev/null; \
	      rmmod ip_masq_raudio 2>/dev/null; \
	      rmmod ip_masq_vdolive 2>/dev/null; \
	      rmmod ip_masq_quake 2>/dev/null; \
	      rmmod ip_masq_irc 2>/dev/null; \
	      rmmod ip_masq_cuseeme 2>/dev/null
	else
	    echo -n "Dørvogter er ikke startet !!"
	    failure "Dørvogter er ikke startet !!"
	    echo
    fi
    ;;

 restart)
        if ! [ "$FW" = "" ]; then
	    $0 stop
	    $0 start
	else
	    echo -n "Dørvogter stoppes: "
	    failure "Dørvogter stoppes: "
	    echo
	    $0 start
    fi
    ;;

 gem)
	 rm -f /etc/firewall.bak        
	 echo -n "Dørvogteropsætning gemmes i /etc/firewall.bak"
	 ipchains-save > /etc/firewall.bak 2>/dev/null && \
	   success "Dørvogteropsætning gemmes i /etc/firewall.bak" || \
	   failure "Dørvogteropsætning gemmes i /etc/firewall.bak"
	   echo
    ;;
        
 status)
	ipchains -L -n --line-numbers | less
    ;;

 masq)
	ipchains -L -M -n --line-numbers | less
    ;;

 panic)
	 action "INPUT,FORWARD og OUTPUT kæden sættes til DENY: " \
	   ipchains -F; \
	   ipchains -P input DENY; \
	   ipchains -P forward DENY; \
	   ipchains -P output DENY
    ;;

 debug)
            echo > /etc/firewall.debug
            /etc/firewall
	    rm -f /etc/firewall.debug
    ;;

 *)
	 clear
         echo "Start:   med firewall start, startes dørvogteren" \
	   "i /etc."
	 echo "Stop:    med firewall stop, stoppes dørvogteren" \
	   "i /etc."
	 echo "Restart: med firewall restart, stoppes dørvogteren" \
	   "først, derefter bliver"
	 echo "         det startet igen."
	 echo "Gem:     med firewall gem, gemmes alle regler i dørvogteren" \
	   "i /etc/firewall.bak."
	 echo "         Bemærk at /etc/firewall.bak bliver" \
	   "slettet hver gang denne køres."
	 echo "Status:  med firewall status, vises alle dørvogterregler der" \
	   "er på maskinen."
	 echo "Masq:    med firewall masq, vises alle masquerading forbindelser." \
	   "Dvs. man kan "
	 echo "         se hvor ens lokale maskiner har oprettet en forbindelse til."
	 echo "Panic:   med firewall panic, sættes alle standard kæderne," \
	   "dvs. input, forward"
	 echo "	 og output til deny og alle nuværende regler bliver slettet."
	 echo "Debug:   med firewall debug, startes dørvogteren og man får" \
	   "status"
	 echo "         over hvad de forskellige variable er sat til og hvad programmet"
	 echo "         har fundet af informationer."

	 echo "/etc/rc.d/init.d/firewall { start|stop|restart|gem|status|masq|panic|debug }"
	exit 1
esac

exit 0
</programlisting>

<para>
Dette program kan hentes fra <ulink url="http://&linuxbogurl;/firewall">&linuxbogurl;/firewall</ulink>.
</para>
</sect2>


<sect2 id="firewall-IPMASQADM">
<title>Adgang til interne maskiner med IPMASQADM</title>

<para>
Hvis man skal have adgang til sine maskiner bag en dørvogter, der kører
med private adresser, kan man benytte ipmasqadm og have modulet
portfw. Ipmasqadm er ikke med som standard i gængse
Linux-distributioner.
</para>

<para>
IPMASQADM portfw syntakser: <command>ipmasqadm portfw -a -P PROTO -L LADDR LPORT -R RADDR RPORT -p PREF</command>
</para>

<itemizedlist mark="bullet" spacing="compact">
<listitem><para><command>-a</command> Indsæt ny regel for ipmasqadm.</para></listitem>
<listitem><para><command>-f</command> Slet alle regler i listen.</para></listitem>
<listitem><para><command>-l</command> Vis alle regler i listen.</para></listitem>
<listitem><para><command>-l -n</command> 
Vis alle regler i listen uden at lave et reverse lookup.</para></listitem>
<listitem><para><command>-p PREF</command> Prioritet, er som standard 10.</para></listitem>
<listitem><para><command>-P PROTO</command> PROTO kan være tcp eller udp.</para></listitem>
<listitem><para><command>LADDR</command> Den IP-adresse som modtager de pakker som skal sendes videre til intern maskine.</para></listitem>
<listitem><para><command>LPORT</command> Den port der lyttes på.</para></listitem>
<listitem><para><command>RADDR</command> Den interne IP-adresse som skal modtage pakkerne.</para></listitem>
<listitem><para><command>RPORT</command> Den port som den interne maskine lytter på.</para></listitem>
</itemizedlist>

<para>
Hvis man eksempelvis vil sende alt web trafik på port 80 til den interne maskine, der hedder 10.10.10.10:
</para>

<programlisting>
ipmasqadm portfw -a -P tcp -L 192.192.192.192 80 -R 10.10.10.10 80
</programlisting>
</sect2>
</sect1>
</chapter>



