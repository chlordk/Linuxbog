<!-- $Id$ -->
<chapter id="java-dev-env">
<title>Udviklingsmiljø</title>
<indexterm><primary></primary></indexterm>

<sect1 id="java-dev-env-indledning">
<title>Indledning</title>

<para>
Et professionelt udviklingsmiljø består af værktøjer, der helt eller
delvist kan løse nedenstående opaver.
</para>

<itemizedlist mark="bullet">
<listitem>
  <para>Redigering af kildekode</para>
</listitem>
<listitem>
  <para>Oversættelse af kildekode</para>
</listitem>
<listitem>
  <para>Konfigurationsstyring</para>
</listitem>
<listitem>
  <para>Debugging</para>
</listitem>
<listitem>
  <para>Logning</para>
</listitem>
<listitem>
  <para>Profilering <!-- Hvem kender et godt dansk ord til profiling? /jk --></para>
</listitem>
<listitem>
  <para>Dokumentation</para>
</listitem>
<listitem>
  <para>Versionsstyring</para>
</listitem>
<listitem>
  <para>Test</para>
</listitem>
</itemizedlist>

<para>
De næste mange afsnit vil gå i dybden med en af disse opgaver og give bud på
værktøjer, der er nyttige i den sammenhæng.
</para>

</sect1>

<sect1 id="java-dev-env-editor">
<title>Redigering af kildekode</title>

<para>
TODO
</para>

<para>
Emacs, VI, IDE værktøjer, ...
</para>

</sect1>

<sect1 id="java-dev-env-compiler">
<title>Oversættelse af kildekode</title>

<para>
TODO
</para>

<para>
javac
</para>

</sect1>

<sect1 id="java-dev-env-configuration">
<title>Konfigurationsstyring</title>

<para>
Når du skal til at lave større og mere komplekse softwaresystemer,
så vil du opdage at de består af mange forskellige delkomponenter.
Delkomponenter vil i de fleste tilfælde være softwaremoduler med
bestemte versionsnumre, men det kan også være brugervejledninger
eller datafiler, som er knyttet til det pågældende softwaresystem.
</para>

<para>
Den proces at sammensætte komponenter så de udgør et softwaresystem kaldes
for <emphasis>konfigurering</emphasis> og kan være en omfattende og ret så
kedelig arbejdsopgave at udføre manuelt når man skal holde styr på 117
forskellige filer med bestemte versionsnumre og deres indbyrdes afhængigheder.
</para>

<para>
Heldigvis findes der værktøjer som er skræddersyet til konfigureringsstyring
og vi vil i dette afsnit beskrive et værktøj, der er møntet specielt mod
konfigurering af Java-softwaresystemer.
</para>

<sect2 id="java-dev-env-configuration-ant">
<title>Ant</title>

<para>
TODO...generelt om ant
</para>

<sect3 id="java-dev-env-configuration-dir-layout">
<title>Typisk bibliotekslayout</title>

<para>
TODO...skriv om motivationen for nedenstående layout /jk
</para>

<screen>
projektnavn              Al projektrelateret data
projektnavn/src          Kildetekst, ressourcefiler og billeder
projektnavn/log          Logfiler
projektnavn/docs         Al dokumentation
projektnavn/docs/api     JavaDoc-genereret HTML af din kode
projektnavn/build        Oversatte class-filer, ressourcefiler og billeder
projektnavn/dist         Binær distribution af softwaresystemet inkl. manualer osv.
projektnavn/lib          Eksterne jar-filer, som anvendes i projektet
projektnavn/test/src     Kildetekst relateret til test af softwaresystemet
projektnavn/test/report  Testrapporter
</screen>

</sect3>

<sect3>
<title>Konfigurationsfil</title>

<para>
TODO...lav build.xml der matcher ovenstående biblioteksstruktur i funktionalitet
</para>

</sect3>

</sect2>

</sect1>

<sect1 id="java-dev-env-debugging">
<title>Debugging</title>

<para>
TODO
</para>

<para>
jdb
</para>

</sect1>

<sect1 id="java-dev-env-logging">
<title>Logning</title>

<para>
TODO
</para>

<para>
log4j, JDK log api (JSR47)
</para>

<para>
JSR47 vs. log4j (take two). http://jakarta.apache.org/log4j/docs/critique2.html
</para>

</sect1>

<sect1 id="java-dev-env-profiling">
<title>Profilering</title>

<para>
TODO
</para>

<para>
java -Xprof JavaProgram
</para>

</sect1>

<sect1 id="java-dev-env-documentation">
<title>Dokumentation</title>

<para>
TODO
</para>

<para>
javadoc, uml værktøjer, ...
</para>

</sect1>

<sect1 id="java-dev-env-version-control">
<title>Versionsstyring</title>

<para>
TODO
</para>

<para>
CVS. http://www.sslug.dk/linuxbog/program/bog/vaerktoej.html
</para>

</sect1>

<sect1 id="java-dev-env-test">
<title>Test</title>

<para>
TODO
</para>

<para>
JUnit
</para>

</sect1>

</chapter>
