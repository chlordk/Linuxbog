<chapter>
  <title>Introduktion</title>

<sect1>
  <title>xxx</title>

<para>
Indhold:
</para>

<itemizedlist mark="bullet">
  <listitem>

<para>

Programmering
</para>

</listitem>

  <listitem>

<para>
Fordele og ulemper ved Java
</para>

</listitem>

  <listitem>

<para>
Værktøjer til at programmere i Java
</para>

</listitem>
</itemizedlist>

<para>
Hvis du har lyst til at komme i gang med at programmere, kan du
springe over dette kapitel.
</para>

<sect2>
  <title>Programmering</title>

<para>
Alle programmer, som f.eks. tekstbehandlingsprogram, regneark,
e-post, tegneprogram, spil, webserver består af nogle data
(f.eks. hjælpefiler og konfigurationsfiler) og en samling
instruktioner til computeren.
</para>

<para>
Hver instruktion er meget simpel, og computeren udfører dem
ubetinget, uanset om det er smart eller ej. En computer kan udføre
instruktionerne ekstremt hurtigt (over 1 milliard instruktioner per
sekund), og det kan få computeren til at virke smart, selvom
instruktionerne er simple.
</para>

<sect3>
  <title>Styresystemet</title>

<para>
Styresystemet er det program, som styrer computeren og tillader
brugeren at bruge andre programmer. Af styresystemer kan nævnes
Linux, DOS, Windows, MacOS, OS/2, UNIX.
</para>

<para>
Styresystemet styrer computerens ressourcer: hukommelse og
eksterne enheder: harddisken, printere og netværksadgang.
Det tilbyder tjenester til programmerne, f.eks. muligheden for
en grafisk brugergrænseflade.
</para>

<para>
Et program kan normalt kun køre på et styresystem.
Javaprogrammer kan dog køre på flere styresystemer, og
de bruges derfor bl.a. som programmer, der automatisk hentes ned til
brugerens web-browser og køres der (kaldet appletter eller
miniprogrammer).
</para>
</sect3>    <!--   Styresystemet -->

<sect3>
  <title>Hvorfor lære at programmere?</title>

<para>
Det er sjovt og spændende og kan være en kilde til
kreativitet og leg at skabe sine egne programmer. Man kan bedre
forestille sig nye løsninger og produkter, og man får
bedre kendskab til computeres formåen og begrænsninger.
</para>

<para>
Desuden er det et håndværk, der er efterspurgt blandt
IT-virksomheder og mange andre. Ved hjælp af programmering kan
du løse problemer, og du er dermed ikke mere afhængig
af, at andre laver et program, der opfylder dine behov.
</para>

<para>
Programmering er en af datalogiens helt basale discipliner, og
selv om man ikke arbejder som programmør, kan kendskab til
programmering være en stor fordel i mange beslægtede
fag.
</para>

<para>
Java er et sprog, der har stor udbredelse i industrien og i
akademiske kredse. Det er kraftfuldt og relativt let lært.
Hvis du lærer Java, har du et godt fundament til at lære
andre programmeringssprog.
</para>
</sect3>    <!--   Hvorfor lære at programmere? -->

<sect3>
  <title>Et simpelt program</title>

<para>
For at computeren kan arbejde skal det have nogle instruktioner,
som det kan følge slavisk. For at lægge to tal fra
brugeren sammen kunne man forestille sig følgende opskrift:
</para>

<screen>
  1   Skriv &quot;Indtast første tal&quot; på skærm
  2   Læs tal fra tastaturet
  3   Gem tal i lagerplads A
  4   Skriv &quot;Indtast andet tal&quot; på skærm
  5   Læs tal fra tastaturet
  6   Gem tal i lagerplads B
  7   Læg indhold af lagerplads A og indhold af lagerplads B sammen
  8   Gem resultat i lagerplads C
  9   Skriv &quot;Summen er:&quot; på skærm
  10  Skriv indhold af lagerplads C på skærm
</screen>


<para>
Et program minder lidt om en kogebogsopskrift, som computeren
følger punkt for punkt ovenfra og ned. Hvert punkt (eller
instruktion eller kommando) gøres færdigt, før
der gås til næste punkt.
</para>
</sect3>    <!--   Et simpelt program -->

<sect3>
  <title>Hvordan lærer man at programmere</title>

<para>
Man lærer ikke at programmere ved at læse en bog. Har
man derfor ikke tid til at øve sig, spilder man bare sin tid.
For de fleste kræver det en stor arbejdsindsats at lære
at programmere, og for alle tager det lang tid, før de
bliver rigtig dygtige til det.
</para>

<blockquote><para>Der er kun &eacute;n måde at
lære at programmere på: &Oslash;v dig</para></blockquote>

<para>
Der er blevet lavet forskning, der underbygger dette. P.M. Cheney
konkluderer,
at den eneste betydende faktor i produktiviteten for programmører
er: Erfaring. Han fandt i øvrigt forskelle i
produktiviteten på en faktor 25.
</para>
</sect3>    <!--   Hvordan lærer man at programmere -->
</sect2>    <!--   Programmering -->

<sect2>
  <title>Fordele og ulemper ved Java</title>

<para>
Java er et initiativ til at skabe et programmeringssprog, der kan
køre på flere styresystemer. Det er udviklet af Sun
Microsystems, der i 1991 arbejdede med at designe et
programmeringssprog, der var velegnet til at skrive programmer
til fremtidens telefoner, fjernsyn, opvaskemaskiner og andre
elektroniske apparater. Sådanne programmer skal være
meget kompakte (begrænset hukommelseslager) og fejlsikre
(risikoen for, at apparatet ikke virker skal være
minimal).
</para>

<para>
Med udviklingen af internettet blev Java samtidigt meget udbredt,
fordi teknologien bl.a. tillader, at små programmer kan lægges
ind i en hjemmeside (se kapitlet om appletter).
</para>

<para>
Det har på kort tid udviklet sig til at være
fremherskende på grund af dets egenskaber. Java er et
enkelt, objektorienteret, robust, netværksorienteret,
platformuafhængigt, sikkert, fortolket, højtydende,
flertrådet og dynamisk sprog.
</para>

<sect3>
  <title>Enkelt, objektorienteret og robust</title>

<para>
Java er i forhold til andre programmeringssprog et ret enkelt
sprog, og det er forholdsvis nemt at programmere (specielt for C++ og
C-programmører). Mange af de muligheder for at lave fatale
fejl, der eksisterer i andre programmeringssprog, er fjernet i Java.
</para>

<para>
Samtidig kommer det med over 1000 foruddefinerede objekt-typer,
som kan udføre næsten enhver tænkelig opgave.
Præcist hvad &quot;objektorienteret&quot; betyder handler denne
bog om.
</para>

<para>
Java er også robust; under afviklingen af et program checkes
det, at handlingerne er tilladelige, og opstår der en
fejl, såsom en ønsket fil ikke kan findes, erklærer
Java, at der er opstået en undtagelse. I mange andre sprog vil
sådanne uventede fejl føre til, at programmet
stopper. I Java kan disse undtagelser fanges og håndteres, så
programmet alligevel kan køre videre.
</para>
</sect3>    <!--   Enkelt, objektorienteret og robust -->

<sect3>
  <title>Netværksorienteret, platformuafhængigt og
sikkert</title>

<para>
Java er platformuafhængigt. Det vil sige, at samme program
umiddelbart kan udføres på mange forskellige
styresystemer, f.eks. UNIX, Linux, Mac og Windows,  og
processor-typer f.eks. Intel IA32, PowerPC og Alpha.
</para>

<para>
Java har indbygget alskens netværkskommunikation (se
kapitlet om netværk) og bruges meget på internettet, da
javaprogrammer kan køre på næsten alle platforme.
Samtidig er Javaprogrammer så kompakte, at de nemt kan
indlejres i en hjemmeside.
</para>

<para>
Et sikkerhedssystem tjekker al programkode og sørger for,
at bl.a. hjemmesider med Java-appletter ikke kan gøre ting, de
ikke har lov til (f.eks. læse eller ændre i brugerens
filer), uden at brugeren har givet lov til det.
</para>
</sect3>    <!--   Netværksorienteret, platformuafhængigt og
sikkert -->

<sect3>
  <title>Fortolket, højtydende, flertrådet og dynamisk</title>

<para>
Kildeteksten oversættes til en standardiseret
platformuafhængig kode (kaldet bytekode), som derefter udføres
af en javafortolker på det pågældende styresystem.
Derved opnås, at man kun behøver at oversætte sin
kildetekst &eacute;n gang. Javafortolkeren er en såkaldt
virtuel maskine, der konverterer instruktionerne i bytekoden til
instruktioner, som styresystemet kan forstå.
</para>

<para>
De nuværende fortolkere tillader javaprogrammer at blive
udført næsten lige så hurtigt, som hvis de var
blevet oversat direkte til det pågældende styresystem.
</para>

<para>
Java er designet til at understøtte flere samtidige
programudførselspunkter (kaldet tråde), og en
programudførsel kan blive fordelt over flere CPU'er  (se
kapitlet om flertrådet programmering).
</para>

<para>
Java kan dynamisk (i et kørende program) indlæse
ekstra programkode fra netværket og udføre den, når
det er nødvendigt, og der er indbygget mekanismer til at lade
programmer på forskellige maskiner dele dataobjekter (se
eksempelvis kapitlet om RMI).
</para>

<para>
Disse egenskaber gør, at Java også har vundet stor
udbredelse i serversystemer de seneste år.
</para>
</sect3>    <!--   Fortolket, højtydende, flertrådet og dynamisk -->

<sect3>
  <title>Stor opbakning</title>

<para>
Java understøttes af næsten alle større
softwarefirmaer, f.eks. IBM, Oracle, Borland, Netscape.
</para>

<para>
Softwaregiganten Microsoft er en undtagelse. Den blev i efteråret
2000 kendt skyldig ved domstolen i USA for ulovligt at misbruge sin
monopollignende magt på PC-markedet for at skade bl.a. Java.
Microsoft er ikke interesseret i, at programmerne kan udføres
under andre styresystemer end Windows. De har lavet deres egen udgave
af Java, der kun virker under Windows, og har (uden større
held) forsøgt at lokke programmører til at bruge den.
</para>
</sect3>    <!--   Stor opbakning -->

<sect3>
  <title>Svagheder ved Java</title>

<para>
Java har også en del kritikere, især blandt de, hvis
forretningsmodel eller område er truet af Java.  Ikke desto
mindre er der nogle gode pointer iblandt:
</para>

<itemizedlist mark="bullet">
  <listitem>

<para>

Java kræver hukommelse (RAM). Store Javaprogrammer kan
  kræve så meget, at de har problemer med at køre
  på mindre kontor-PC'ere.
</para>

</listitem>

  <listitem>

<para>
Java skal installeres på en computer, før den
  kan afvikle javaprogrammer. Hvis man vil distribuere sit program,
  skal man således pakke en version af Java med.
</para>

</listitem>

  <listitem>

<para>
Sun Microsystems ejer Java, og nogle frygter, at det vil
  udvikle sig til et monopol som med Microsoft. Indtil videre har de
  dog opført sig eksemplarisk og bl.a. frigivet hele
  kildeteksten til Java, og derudover findes der andre uafhængige
  udgaver af Java.
</para>

</listitem>

  <listitem>

<para>
Java satser på at være platformuafhængigt,
  men der er alligevel små forskelle på de forskellige
  platforme. Dette gælder specielt ved programmering af grafiske
  brugergrænseflader. Det kræver erfaring og test at
  sikre sig, at ens program virker tilfredsstillende på
  flere platforme. Dette er ikke kun et Java-relateret problem,
  designere af hjemmesider har tilsvarende problemer. Java gør
  det nemmere at skrive platformuafhængige programmer, men
  det løser ikke alle problemer for programmøren.
</para>

</listitem>
</itemizedlist>
</sect3>    <!--   Svagheder ved Java -->
</sect2>    <!--   Fordele og ulemper ved Java -->

<sect2>
  <title>Programmeringsværktøjer til Java</title>

<para>
Under programudviklingen har man brug for arbejdsredskaber, der
kan hjælpe en med:
</para>

<itemizedlist mark="bullet">
  <listitem>

<para>

Redigering af kildetekster.
</para>

</listitem>

  <listitem>

<para>
Oversættelse.
</para>

</listitem>

  <listitem>

<para>
Kørsel og fejlfinding.
</para>

</listitem>
</itemizedlist>


<sect3>
  <title>Sun JDK</title>

<para>
Den mest skrabede løsning, man kan vælge at redigere
kildeteksterne i, er et ikke-Java-orienteret program som for eksempel
Notesblok under Windows eller kedit eller emacs under Linux.
</para>

<para>
Til oversættelse og kørsel kan man installere et
Java-udviklingskit udgivet af Sun, f.eks. JDK1.3 (Java Development
Kit version 1.3). Det kan hentes gratis på
<ulink url="http://www.javasoft.com/">http://www.javasoft.com</ulink> til et
væld af styresystemer.
</para>

<para>
JDK'en bruges fra kommandolinien (f.eks. i et DOS-vindue). De
vigtigste kommandoer er <emphasis>javac</emphasis>, der oversætter en
kildetekstfil til bytekode, og <emphasis>java</emphasis>, der udfører en
bytekode-fil.
</para>
</sect3>    <!--   Sun JDK -->

<sect3>
  <title>Borland JBuilder</title>

<para>
Der findes en række mere avancerede programmeringsværktøjer,
hvor vi anbefaler JBuilder fra Borland, som er et af de mest
populære. JBuilder er skrevet i Java og kører på
både Macintosh, Windows, Linux og Sun Solaris. Det anbefales at
have 128 MB RAM.
</para>

<figure>
<title>Java</title>

<graphic fileref="Nordfalk315326.&magic;" scale="60"></graphic>
</figure>

<para>
En basisversion af JBuilder kan hentes gratis fra
<ulink url="http://www.borland.com/jbuilder/">http://www.borland.com/jbuilder/</ulink>.
&Oslash;nsker man adgang til de mere avancerede funktioner skal
programmet købes.
</para>

<para>
JBuilder er opbygget med en menulinie øverst, der
indeholder tilgang til filhåndtering, projektstyring og alle
nødvendige værktøjer, hvoraf de vigtigste er
&quot;Run&quot; og &quot;Debug&quot;. &quot;Run&quot; oversætter
først kildeteksten og starter derefter fortolkeren. Uddata kan
ses i den nederste ramme. &quot;Debug&quot; (der findes under &quot;Run&quot;)
bruges til fejlfinding af programmer og giver mulighed for at udføre
programkoden trinvist.
</para>

<para>
Når man udvikler i JBuilder, er det baseret på
projekter. Projekterne indeholder en liste over kildetekst-filerne
samt, hvis det ønskes, projektinformation (lagret som
HTML-dokument).
</para>

<para>
Projektet (her oop.jpr) kan ses i den venstre ramme. Den højre
ramme indeholder kildeteksten på et faneblad. På de
andre faneblade er bl.a. designværktøj til grafiske
brugergrænseflader, dokumentationsvisning og
versionskontrol.
</para>
</sect3>    <!--   Borland JBuilder -->

<sect3>
  <title>Oracle JDeveloper</title>

<figure>
<title>Java</title>

<graphic fileref="Nordfalk315327.&magic;" scale="60"></graphic>
</figure>
<para>Oracle
udgiver JDeveloper, som er en udgave af JBuilder, hvor Oracle har
integreret sit eget database-produkt. JDeveloper er lidt mere
indviklet at bruge, idet projekter er samlet i arbejdsområder,
en facilitet, man sjældent har brug for som almindelig
udvikler.
</para>

<para>
JDeveloper kræver 128 MB RAM og kører så vidt
vides kun under Windows NT. Det kan købes af Oracle, men
bruger man i forvejen Oracles produkter, er der sandsynlighed for, at
man har fået leveret JDeveloper med i pakken.
</para>
</sect3>    <!--   Oracle JDeveloper -->

<sect3>
  <title>Sun Forte for Java</title>

<figure>
<title>Java</title>

<graphic fileref="Nordfalk315328.&magic;" scale="60"></graphic>
</figure>
<para>Sun
udgiver sit eget udviklingsmiljø, også skrevet i Java,
til Windows, Linux og Sun Solaris. Gratisversionen, der kan hentes på
<ulink url="http://www.sun.com/forte/">http://www.sun.com/forte/</ulink>,
har flere funktioner til at udvikle grafiske brugergrænseflader
end JBuilders basisversion.
</para>

<para>
Hvilken en, der er bedst, afhænger nok af, hvem man spørger,
men Forte virker efter forfatterens mening mindre gennemført
end JBuilder. JBuilder fylder mere på disken, men har
betydeligt mere hjælp, både til begynderen og den
erfarne.
</para>
</sect3>    <!--   Sun Forte for Java -->

<sect3>
  <title>IBM VisualAge for Java</title>

<figure>
<title>Java</title>

<graphic fileref="Nordfalk315329.&magic;" scale="60"></graphic>
</figure>
<para>Ligesom
Sun har IBM sit eget udviklingsmiljø til bl.a. Java, og en
gammel udgave af miljøet kan hentes gratis på IBMs
hjemmeside til bl.a. Linux (skærmbilledet viser VisualAge for
Java under Linux). Gratisversionen kræver kun 32 MB RAM. De
nyere udgaver er mere krævende (128 MB RAM).
</para>
</sect3>    <!--   IBM VisualAge for Java -->

<sect3>
  <title>Andre</title>

<para>
Der findes mange andre udviklingsmiljøer til Java, bl.a.
Visual Caf&eacute;, Simplicity og Microsofts Visual J++. De
fleste findes i en prøveudgave, der kan hentes gratis fra
internettet, og som har alle nødvendige faciliteter til at
lave mindre programmer.
</para>

<para>
Artiklen
  hedder 'Effects of Individual Characteristics, Organizational
  Factors and Task Characteristics on Computer Programmer
  Productivity and Job Satisfaction' og kan findes i Information
  and Management, 7, 1984.
</para>
</sect3>    <!--   Andre -->
</sect2>    <!--   Programmeringsværktøjer til Java -->
</sect1> 
</chapter>    <!--   Introduktion -->

