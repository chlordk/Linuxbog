# Makefile for "alle" bogen.
# $Id$
# Peter Toft <pto@sslug.dk> 
# Mads Bondo Dydensborg <madsdyd@challenge.dk>


################################################################################
# Inkluder alle Makefile.local der findes
################################################################################
-include $(wildcard $(addprefix ../,$(addsuffix /Makefile.local,$(SUBDIRSALLE))))


################################################################################
# Diverse variable sættes
################################################################################

#  Lokalt katalog (fuld sti)
locdirname=$(shell pwd)

# Kort navn
# MBD: Jeg fatter ikke helt det med targetshortname, 
targetshortname=$(notdir $(locdirname))

# Med linux- foran
targetname=linuxbog-$(notdir $(locdirname))

# version
version:=$(shell grep -A2 "<listitem>" apprevhist.sgml | head -n 2 | grep Version | sed 's/.*Version//' | cut -d' ' -f2 > version.sgml; cat version.sgml)

# Base navnet for pakker, mv
basenavn:=$(targetname)-$(version)

# dato
dato:=$(shell date +%d/%m-%Y> dato.sgml; cat dato.sgml)	

# Liste over underkataloger - navneforskel pga. automake og sed.
SUBDIRSALLE=@SUBDIRSALLE@

# Liste af filer der ændres automatisk
# TODO: burde det ikke afhænge af SUBDIRSALLE? 
# Hmm. Bog.sml burde også laves fra subdirs
badfiles = $(wildcard $(addprefix ../*/,dato.sgml magic.sgml stikord.sgml ophavsret.sgml bogoversigt.sgml version.sgml))

# Her er en liste over alle sgml-filer 
totalsgmlfiler = $(wildcard $(addprefix ../,$(addsuffix /*.sgml,$(SUBDIRSALLE))))

# Og, så en liste over dem der skal checkes for om de er ændret
sgmlfiler = $(filter-out $(badfiles),$(totalsgmlfiler))

# Og her sætter vi up til at inkludere auto. Bemærk =, ikke :=
dep_sgml_filer=$(alle_auto_sgml_filer) $(sgmlfiler)

################################################################################
# De egentlige targets
################################################################################

################################################################################
.PHONY : test
test:
	@echo alle_auto_sgml_filer = $(alle_auto_sgml_filer)
	@echo sgmlfiler            = $(sgmlfiler)
	@echo dep_sgml_filer       = $(dep_sgml_filer)

################################################################################
# her er det der skal laves
.PHONY : all
all: html  pakhtml sgml palmpilot

################################################################################

# Hmm. Jeg har ingen ide om hvad det her laver... Ser ud som om det
# bare skriver noget ud?
.PHONY : statusfiles
statusfiles:
	@for dir in $(SUBDIRSALLE); do \
		echo -n "$$dir "; \
		(cd ../$$dir;grep -A2 "<listitem>" apprevhist.sgml | head -n 2 | tail -n 1 | cut -d' ' -f2 > version.sgml; echo -n "`cat version.sgml`"); \
		(cd ../$$dir;date +%d/%m-%Y> dato.sgml; echo " (`cat dato.sgml`)"); \
	done;

################################################################################
# Pak SGML_filerne sammen
################################################################################
# Det her target giver ikke rigtigt nogen mening.
.PHONY : sgml
sgml:
	@echo "Overspringer sgml"

################################################################################
# Byg Palm Pilot udgaven
################################################################################
# Laver en zip fil, kræver alle/index.html
.PHONY : palmpilot
if BUILD_PALM
palmpilot_navn:=$(basenavn).palm.zip
palmpilot:	$(palmpilot_navn)
$(palmpilot_navn):	html
	@echo ".........................................."
	@echo "Target $(targetshortname):palmpilot"
	@echo ".........................................."
	rm -f $(palmpilot_navn)
	rm -f PalmBuildDir/*.prc PalmBuildDir/*.pdb
	mkdir -p PalmBuildDir
	cp palm/* PalmBuildDir || true
	cp palm-faelles/* PalmBuildDir || true
	(cd PalmBuildDir && plucker-build -V 0  -P . -f $(targetname) `pwd`/home.html)
	zip $(palmpilot_navn) PalmBuildDir/*.prc PalmBuildDir/*.pdb PalmBuildDir/*txt
else !BUILD_PALM
palmpilot:
	@echo "Overspringer palmpilot"
endif !BUILD_PALM


################################################################################
# Pak HTML-filer ned
################################################################################
if BUILD_PAKHTML
pakhtml:	$(basenavn)-html.tar.gz $(basenavn)-htmlub.tar.gz $(basenavn)-png.tar.gz $(basenavn)-html.zip 

$(basenavn)-html.tar.gz :	html
	tar hczf $(basenavn)-html.tar.gz $(targetshortname)/*

$(basenavn)-htmlub.tar.gz :	html
	tar hczf $(basenavn)-htmlub.tar.gz $(targetshortname)/*.html $(targetshortname)/*.css

$(basenavn)-png.tar.gz :	html
	tar hczf $(basenavn)-png.tar.gz $(targetshortname)/*.png

$(basenavn)-html.zip :	html
	zip $(basenavn)-html.zip $(targetshortname)/*
else !BUILD_PAKHTML
	@echo "Overspringer pakhtml"
endif !BUILD_PAKHTML


################################################################################
# Byg HTML-filerne
################################################################################
.PHONY : html
if BUILD_HTML
html: statusfiles $(targetshortname)

$(targetshortname): alle/index.html

alle/index.html: $(dep_sgml_filer) bog.sgml
#	echo $(sgmlfiler)
	@echo "Target er HTML i" $(targetshortname)/$targetshortname
	rm -rf stikord.sgml magic.sgml bog alle
	echo '<!ENTITY magic "png">' > magic.sgml
	collateindex.pl -s Symboler -x -t Stikordsregister -g -i stikord -N -o stikord.sgml
	jw -V %use-id-as-filename% -V html-index -f docbook -b html -o bog bog.sgml
	collateindex.pl -s Symboler -x -t Stikordsregister -g -i stikord  -o stikord.sgml bog/HTML.index
	rm -rf bog/
	db2html -V %use-id-as-filename% bog.sgml
if USE_SOFTLINKS
	for dir in $(SUBDIRSALLE); do \
		(cd bog && ln -sf ../../$$dir/images/*.png .) \
	done;
else !USE_SOFTLINKS
	for dir in $(SUBDIRSALLE); do \
		cp ../$$dir/images/*.png bog; \
	done;
endif !USE_SOFTLINKS
	cp linuxbog.css bog
	ln -s bog alle
	echo %define buildname $(targetshortname) > bog/$(targetname).spec
	echo Name: linuxbog-$(targetshortname) >> bog/$(targetname).spec
	echo Summary: `grep -A2 "<title>" ../friheden/indhold.sgml | head -n 1 | cut -d '>' -f 2 | cut -d '<' -f 1` >> bog/$(targetname).spec
	echo Release: 1mdk >>  bog/$(targetname).spec
	cat ../linuxbog.spec >> bog/$(targetname).spec
if HAVE_PERL_IMAGE_SIZE
	(cd bog;perl ../misc/insertimagesize)
else !HAVE_PERL_IMAGE_SIZE
	@echo "Du bør installere Perl-modulet Image:Size"
endif !HAVE_PERL_IMAGE_SIZE
# Bygge idx filerne
	(echo "Bygger idx filer" && cd bog && tr "\n" " " < stikord.html | ../fix_stikord.html.pl | ../splitindex.pl)
if HAVE_TIDY
	(cd bog;tidy -latin1 -f err.txt -imu *html;rm -f err.txt)
if ADD_SUBMITBOX
	(cd bog && ../../addsubmitbox)
endif ADD_SUBMITBOX
else !HAVE_TIDY
	@echo "Du bør installere tidy"
endif !HAVE_TIDY
else !BUILD_HTML
	@echo "Overspring html"
endif !BUILD_HTML

################################################################################
# Byg PDF filen
################################################################################

if BUILD_PDF
pdf: $(targetname)-pdf-$(version).zip
$(targetname)-pdf-$(version).zip: $(sgmlfiler) bog.sgml
	@echo ".........................................."
	@echo "Target $(targetshortname):pdf"
	@echo ".........................................."
	@echo '<!ENTITY magic "png">' > magic.sgml
	collateindex.pl  -s Symboler -t Stikordsregister -g -i stikord -N -o stikord.sgml
	rm -rf tempdir
	mkdir tempdir
	cp *.{sgml,xml} tempdir
	(cd tempdir && ln -s ../images/*png .)
	(cd tempdir && jw -V html-index -V nochunks -f docbook -b html -o bog bog.sgml)
	(cd tempdir && collateindex.pl -s Symboler -t Stikordsregister -g -i stikord  -o stikord.sgml bog/HTML.index)
	(cd tempdir && echo "Running db2pdf 1/2" && db2pdf bog.sgml; true)
	(cd tempdir && echo "Running db2pdf 2/2" && db2pdf bog.sgml; true)

	mv tempdir/bog.pdf $(targetname)-$(version).pdf
	pdfinfo $(targetname)-$(version).pdf | grep Pages: | cut -d':' -f2 > sideantal.txt
	rm -rf tempdir
	@echo "Done PDF (pdf)"
	@echo ""
endif BUILD_PDF

################################################################################
# CLEAN targets
################################################################################

# Vi har tre forskellige slags clean targets.
# clean: targets fjernes, men autogenererede bliver ikke fjernet.
# distclean: clean til distribution, dvs. filer kopieret af toplevel configure
# må ikke fjernes, men autogenererede sgml filer må godt.
# reallyclean: Alt fjernes, helt ned til cvs nærmest

# TODO: dato.sgml, version.sgml, stikord.sgml, magic.sgml

################################################################################
# Target og diverse filer fjernes. Autogenererede filer beholdes
.PHONY : clean
clean:
	@echo clean $(targetshortname)
	rm -rf DBTOHTML_OUTPUT_DIR* bog.junk bog stikord.sgml PdfBuildDir bogps bogpdf $(targetname)* sideantal.txt *~ .#*[0-9] $(targetshortname)

################################################################################
#
# distclean-local - hook til automake.
# Cleaner så det passer til en dist
# TODO: Fixme
distclean-local:	clean
	rm -rf magic.sgml stikord.sgml autom4te.cache 

################################################################################
# Alt fjernes, stort set ned til cvs
.PHONY : reallyclean
reallyclean:	clean distclean
	rm -Rf dato.sgml version.sgml bogoversigt.sgml ophavsret.sgml linuxbog.css linuxbog.spec misc aclocal.m4 bootstrap configure configure.ac install-sh Makefile.am Makefile.in missing mkinstalldirs palm-faelles bog.sgml

