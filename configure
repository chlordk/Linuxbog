#!/bin/bash

# Dette script bootstrapper/konfigurer det der skal til for at lave linuxbøgerne

# Af Mads Bondo Dydensborg, madsdyd@challenge.dk, september 2003.
# Tilføjelser om samling-bogen af Henrik Christian Grove <grove@sslug.dk>
#  oktober/november 2003

# Standard bøger at medtage
#SUBDIRS="admin applikationer c dokumentation forsker friheden itplatform java kontorbruger program signatur sikkerhed unix web wm"
SUBDIRS="distro itplatform friheden unix kontorbruger applikationer wm admin sikkerhed program web python c java dokumentation"
SAMLING=
URL=www.linuxbog.dk

################################################################################
#
# Brug
brug() {
    echo "Brug: ./configure [OPTIONS] [-- SUBDIROPTIONS]"
    echo
    echo "Hvor OPTIONS kan være een eller flere af "
    echo "  -h, --help             Viser denne hjælp og afslutter"
    echo "  -m, --med \"BØGER\"      Bestemmer hvilke bøger der medtages, hvor BØGER"
    echo "                         er en liste af bøger. Kombiner:"
    echo "                         \"$SUBDIRS\""
    echo "  -s, --med-samling      Medtag samling-bogen (samlingen af de byggede bøger)"
    echo "  -u, --bogurl URL       Hvilken url bøgerne skal bruge. [cvs.linuxbog.dk]"
    echo "  --splitstikord         Splitter HTML stikord til en fil med hvert forbogstav"
    echo
    echo "Hvor SUBDIROPTIONS kan være"
    echo "      --disable-softlink  Bruger kopering af billeder for HTML targets"
    echo "      --enable-submitbox  Tilføjer en submit boks, når der bygges på tyge"
    echo "Eksempel: ./configure --med \"friheden applikationer\" -- --disable-softlink";
}

################################################################################
#
# hjaelp
hjaelp() {
    echo "\`configure' opsætter hvilke af \"Linux - friheden til at vælge bøgerne\" der skal"
    echo "laves på dit system."
    echo
    brug
    exit
}


################################################################################
#
# Check for argumenter

# Originale argumenter gemmes til Makefile
ORG_ARGS=
for arg ; do ORG_ARGS="$ORG_ARGS \"$arg\"" ; done

# Note that we use `"$@"' to let each command-line parameter expand to a
# separate word. The quotes around `$@' are essential!
# We need TEMP as the `eval set --' would nuke the return value of getopt.
TEMP=`getopt -o hmsu: --long help,med:,med-samling,splitstikord,bogurl: -n "$0" -- "$@"`

if [ $? != 0 ] ; then brug ; exit 1 ; fi

# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

while true ; do
    case "$1" in
	-s|--med-samling) SAMLING=samling ; shift ;;
	-h|--help) hjaelp; shift ;;
	-m|--med) SUBDIRS=$2 ; shift 2 ;;
	-u|--bogurl) URL=$2 ; shift 2 ;;
	--splitstikord) SPLITHTML=1 ; shift ;;
	--) shift ; break ;;
	*) echo "Internal error!" ; exit 1 ;;
    esac
done

# Opsaml ekstra argumenter til bøger
EXTRA_ARG=
for arg ; do
    EXTRA_ARG="$EXTRA_ARG $arg" ;
done
#echo "EXTRA_ARG: $EXTRA_ARG"
echo '<?php' > configureoptions.php
echo '/* Oprettet ved kørsel af "configure" */' >> configureoptions.php
echo '$configureoptions = "' $EXTRA_ARG '";' >> configureoptions.php
echo '?>' >> configureoptions.php


################################################################################
#
# Check at Makefile.in findes.
if test ! -e Makefile.in ; then
    echo "Fejl: Kunne ikke finde Makefile.in"
    echo "Vær venlig at køre dette script fra roden af Linux bøgernes kildetekst"
    exit 2;
fi


################################################################################
#
# Rent faktisk gøre noget.

# Status til bruger
if test "x$SAMLING" != "x" ; then
  echo "*** Opsætter samling bogen"
else
  echo "*** Opsætter ikke samling bogen"
fi

# Lav Makefile
sed -e "s/@SUBDIRS@/$SUBDIRS/" \
    -e "s/@SAMLING@/$SAMLING/" \
    -e "s/@CONFIGUREARGS@/$ORG_ARGS/" \
    -e "s/@Makefile.in@/RET IKKE I DENNE FIL - AUTOGENERERET FRA Makefile.in/" \
    < Makefile.in > Makefile

# Faelles filer
for dir in $SUBDIRS ; do
    echo "*** Installerer fælles filer i $dir"
    cp --update faelles-filer/*.css $dir
    cp --update faelles-filer/*.sgml $dir
    cp --update faelles-filer/addsubmitbox $dir
    chmod u+x $dir/addsubmitbox
    echo "<!ENTITY linuxbogurl \"$URL\">" > $dir/linuxbogurl.sgml || exit;
done
if test "x$SAMLING" != "x" ; then
    echo "*** Installerer fælles filer i $SAMLING"
#    cp --update faelles-filer/*.sgml $SAMLING
# Det her er smålamt, ophavsret.sgml skal ikke bruges til noget men
# configure.ac.subdir insisterer på at den skal være der
    cp --update faelles-filer/ophavsret.sgml $SAMLING
#    echo "<!ENTITY linuxbogurl \"$URL\">" > $SAMLING/linuxbogurl.sgml || exit;
fi

# Byggerelaterede filer
for dir in $SUBDIRS; do
    echo "*** Kører bootstrap i $dir"
    cp --update bootstrap.subdir $dir/bootstrap
    cp --update Makefile.subdir $dir/Makefile.am
    cp --update configure.ac.subdir $dir/configure.ac
    cp --update linuxbog.spec $dir/linuxbog.spec
    ( cd $dir && ./bootstrap )
done
# grove: Gad vide hvor meget af dette der er nødvendigt?
if test "x$SAMLING" != "x" ; then
    echo "*** Kører bootstrap i $SAMLING"
    cp --update bootstrap.subdir $SAMLING/bootstrap
    sed "s/@SUBDIRSSAMLING@/$SUBDIRS/" < Makefile.samling > $SAMLING/Makefile.am
    cp --update configure.ac.subdir $SAMLING/configure.ac
    cp --update linuxbog.spec $SAMLING/linuxbog.spec
#    mkdir -p $SAMLING/misc
#    cp --update misc/insertimagesize $SAMLING/misc/
    cd $SAMLING && ./bootstrap && cd .. || exit ;
#    cd $SAMLING && ./make.bog.sgml.pl $SUBDIRS > bog.sgml && cd .. || exit ;
#    cd $SAMLING && ./make.bog.2pdf.pl $SUBDIRS > bog.2pdf.sgml && cd .. || exit ;
fi

# Så køres ./configure i hvert subdir.
for dir in $SUBDIRS; do
    echo "*** Kører configure i $dir"
    cd $dir && ./configure $EXTRA_ARG && cd .. || exit ;
done
if test "x$SAMLING" != "x" ; then
    echo "*** Kører configure i $SAMLING"
    cd $SAMLING && ./configure $EXTRA_ARG && cd .. || exit ;
fi

echo "*** Du kan nu køre f.eks. make all, make dist eller make html"
