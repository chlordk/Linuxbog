<chapter id="sikkerhed-introduktion">
<title>Introduktion til sikkerhed</title>
<indexterm><primary>Sikkerhed</primary></indexterm>

<sect1 id="usikkert-net">
<title>Hvorfor er netværk usikkert?</title>
<para>
Din maskine har ofte en del netværksservices åbne på forskellige "porte",
når du har adgang til internettet. En port er ikke en fysisk port, men en 
logisk indgang til din maskine via netværksenheden (modem eller 
netværkskort). Disse "åbne porte" benyttes til at udføre 
netværkskommunikation, hvis maskinen tilbyder netværksservices som f.eks. ftp.
Men de kan også misbruges, så uautoriserede
personer kan komme ind på din computer via nettet. Dette kan ske, hvis der 
er fejl i netværksprogrammer (services, firewall og styresystem), eller hvis 
du lader dem 
stå helt åbne uden nogen form for adgangskontrol. Det kan også ske selvom 
du har adgangkontrol, hvis folk har mulighed for at opsnappe dit brugernavn 
og password via nettet.
Ofte kan man direkte samle brugernavne og passwords op på nettet ved at 
bruge et "sniffer" program, som lytter til trafikken på et givent sted.
</para>

<para>
Dette er bare en forsmag på de emner, vi vil komme nærmere ind på i de
kommende kapitler. Se også 
<ulink url="http://securityfocus.com/infocus/1539">http://securityfocus.com/infocus/1539</ulink> om samme emne.
</para>

<sect2 id="linux-usikkert">
<title>Er Linux et usikkert system?</title>
<indexterm><primary>Sikkerhed</primary><secondary>Linux</secondary></indexterm>

<para>
Nogen har anklaget Linux for at være et meget usikkert system, idet alle 
kan læse kildeteksten. Når man kan læse kildeteksten til f.eks. 
netværksprogrammer og se, hvordan de fungerer, er det nemt finde 
eventuelle fejl.
Disse kan bruges til at lave angreb på Linux-maskiner. Dette er delvis sandt! 
<emphasis>Men</emphasis> alligevel ikke. Vi ser på hvorfor.
</para>

<para>
For at knække sikkerheden på et UNIX-system, skal man enten
<emphasis>kende</emphasis> en fejl eller
<emphasis>lede efter</emphasis> fejl i systemet herunder systemopsætning 
og netværksprogrammer.

For en kommerciel leverandør er en fejl ofte et prestigetab, og derfor er 
det måske ikke alle fejl, som bliver offentligt kendt. Hvis ingen kendte
de fejl, der er i de lukkede systemer, ville alt være godt. Men ofte
bliver fejl i lukkede systemer opdaget og kendt.
Det kan skyldes at nogen udefra opdager fejlen ved et tilfælde, eller måske 
leder de bevidst efter fejl - eller at nogen indefra lækker information  
eller taler over sig. Så ender fejlen måske på en hjemmeside
eller som en artikel i en avis. Så har du problemet: Hvis den, der vil bryde 
ind, kender fejlen, og du som systemadministrator ikke kender og tager højde 
for den, kan han komme ind på dit system. 
</para>

<para>
Det er nok nærmest umuligt at gardere sig imod at en sikkerhedsbrist 
bliver offentligt kendt. 
</para>

<para>
Ud over kendte sikkerhedshuller kan den, der vil bryde ind, selv lede efter
fejl. I et lukket system er det langt sværere at lede efter fejl end i 
åbent system som Linux, 
fordi man ikke har kildeteksten. Men en måde at finde sikkerhedsfejl på, 
er at prøve kendte sikkerhedshuller af på nye maskinopsætninger - men med 
ændringer svarende til nye ideer. Nogle gange sker det så, at der er
bid. Et system er ikke sikret imod indbrud, bare fordi kildeteksten er 
lukket.
</para>

<para>
Erfaring viser, at nogle af de helt store firmaer er meget ringe til
at oplyse om sikkerhedsfejl - de skal helst negligeres eller
skjules. Sikkerhedsbristerne bliver ofte hurtigt annonceret på internettet,
mens firmaerne tit bruger lang tid på at lukke sikkerhedshullet
ordentligt. I al den tid fra annoncering til rettelse er maskinerne åbne 
for mulige sikkerhedsangreb.
</para> 

<para>
I Open Source-verdenen vender man alle disse problemstillinger på hovedet. For det første
findes al relevant kode på internettet til offentlig beskuelse. Så nok
er der mennesker, som kan læse og bryde sikkerheden for andre, men
Open Source-verdenen er indrettet, så der er en meget stor prestige i at
finde og specielt lappe sikkerhedshuller. Derfor vil folk, der
finder fejl, oftest fortælle offentligt om de fundne fejl fremfor at
gemme informationen. Det kan selvfølgelig også være, at man i stedet
vælger at udnytte informationen til at bryde ind på andres systemer. 
Så kan det være, at det er et af de første "ofre", som rapporterer fejlen. 
Man vil så fokusere på hvilken service, der gav sikkerhedshullet, som 
man så lukker (eller giver speciel opmærksomhed gennem overvågning, 
hvis man ikke kan lukke servicen f.eks. webserveren for en internet-butik). 
I Open Source-verdenen indleder man så  en klapjagt for at få fjernet 
problemet og 
udgive nye versioner af de berørte programmer. Det bliver en slags "trofæ" 
at komme først med den korrekte rettelse. Normalt er man nede på dage 
og ofte timer, fra en sikkerhedsfejl er rapporteret, til den er fundet 
og rettet, hvilket er markant mindre end på nogen af de andre lukkede 
systemer.
</para>

<para>
Alt dette lyder meget rosenrødt, men hvis din Linux-maskine har en
kendt sikkerhedsbrist, og maskinen er på et usikkert netværk såsom
internettet, så er der er en pris at betale.
Du <emphasis>skal</emphasis> opdatere din maskine, når der er fundet
sikkerhedsbrister, og den tilsvarende sikkerhedsrettelse er
offentliggjort. Ellers har du reelt set nul sikkerhed!  Alle kan jo se
hvad, der er galt i din kode - det har jo været diskuteret på internettet, 
så man har kunnet lave rettelsen. På 
<ulink
url="http://ftp2.de.freebsd.org/pub/misc/www.rootshell.com/">
rootshell på freebsd.org </ulink> er der en lang række
henvisninger til artikler og software. Det er ofte beskrivelse af
problemets omfang og karakter og anvisninger på udnyttelse og
reparation.
</para>

<para>
Det typiske forløb for en systemadministrator i forbindelse med 
opdagelsen af et sikkerhedsbrist vil være:
</para>

<itemizedlist mark="bullet">
<listitem><para>
Sikkerhedsbristen bliver annonceret
</para></listitem>

<listitem><para>
Man lukker for den service, som bristen tilhører. Hvis det ikke er 
muligt iværksættes ekstra overvågning af servicen samt de filer, som 
kan påvirkes af sikkerhedsbristen.
</para></listitem>

<listitem><para>
Annoncering af rettelse.
</para></listitem>

<listitem><para>
Installation af rettelsen.
</para></listitem>

<listitem><para>
Starte servicen igen eller stoppe den ekstra overvågning.
</para></listitem>
</itemizedlist>

</sect2>

<sect2 id="angrebs-typer">
<title>Hvilke angreb kan jeg blive udsat for</title>
<para>
Der er flere forskellige typer angreb, der kan ramme din maskine. Der
er forskellige metoder, en angriber kan benytte sig af, og som man kan gøre
noget for at beskytte sig imod. Der er også forskel på, hvilken type
adgang en angriber får til dit system, og hvor alvorlige konsekvenser
et vellykket angreb har for dig. 
</para>

<para>
Lad os først se på, hvordan en angriber kan bære sig ad med at få adgang
til dit system.
</para>

<itemizedlist mark="bullet">
<listitem><para>
<emphasis>Exploits</emphasis>
<indexterm><primary>Exploits</primary></indexterm>

Det mest almindelige er at gå efter nogle netværksservice-programmer, 
der er fundet fejl i. Disse fejl udnyttes ofte for at få fuld adgang
til maskinen (Se nedenfor og <xref linkend="root-access"/>). Som 
tidligere nævnt skal man holde øje med annoncerede sikkerhedsfejl,
og få opdateret de anfægtede programmer. Vi vil i <xref
linkend="services"/> se på hvordan du minimerer disse problemer.
</para>


</listitem>

<listitem><para>
<emphasis>Password angreb</emphasis>
<indexterm><primary>Password angreb</primary></indexterm>
Den klassiske måde at komme ind på et system på er at få fat i et
brugernavn og password (helst root passwordet). 

<itemizedlist mark="bullet">
<listitem><para>
<emphasis>Packet sniffing</emphasis>
<indexterm><primary>Packet sniffing</primary></indexterm>
Man kan opsnappe brugernavne og passwords, hvis disse sendes i klar, 
ukrypteret form over nettet - se "man-in-the-middle angreb" herunder. 
Vi kommer desuden tilbage til
emnet i <xref linkend="remote-login"/>.
</para></listitem>

<listitem><para>
<emphasis>Brute force</emphasis>
<indexterm><primary>Brute force</primary></indexterm>
Man kan knække et svagt password med rå computerkraft. Se
<xref linkend="root-access"/>.
</para></listitem>

<listitem><para>
<emphasis>Social engineering angreb</emphasis>
<indexterm><primary>Social engineering angreb</primary></indexterm>
Ofte kan en angriber slutte sig til ting ud fra sin viden om menneskelig
adfærd. F.eks. at en bruger vil benytte det samme passwords til mange ting
for at slippe for at huske så mange passwords. Så har man et password fra
en telnet session, man har overvåget, kan det sikkert bruges 
i andre henseender.</para></listitem>
</itemizedlist>
</para></listitem>

<listitem><para><emphasis>Man-in-the-middle angreb</emphasis>
<indexterm><primary>Man-in-the-middle angreb</primary></indexterm>
Her er tale om at angriberen befinder sig et sted på netværket, hvor dine
data-pakker kommer forbi. F.eks. hos din internet-udbyder eller på dit 
lokalnetværk. Eller i princippet et vilkårligt sted på internettet, 
hvor dine pakker kommer forbi.
</para></listitem>

<listitem>

<itemizedlist mark="bullet">
<listitem><para><emphasis>Packet sniffing</emphasis>
Det mest almindelige man-in-the-middle angreb er, at angriberen kigger på 
dine data-pakker for at opsnappe information. Det kan f.eks.være 
brugernavne og passwords, som sendes i klar tekst over nettet, eller dine 
firmahemmeligheder, hvis du sender dem afsted ukrypteret.
</para></listitem>

<listitem><para><emphasis>Session hijacking</emphasis>
<indexterm><primary>Session hijacking</primary></indexterm>
En anden type man-in-the-middle angreb er, at en angriber går ind og 
overtager en igangværende session f.eks. en telnet-session. Dette er
i praksis meget vanskeligt på internettet, da det enten kræver at
target-maskinen bruger forudsigelige tcp-sekvensnumre, eller at man
kan aflytte trafikken. Det første er ikke muligt i Linux, og hvis man
kan det andet, er det meget nemmere blot at sniffe brugernavn og
password.
</para></listitem>
</itemizedlist>
</listitem>

<listitem><para><emphasis>IP spoofing</emphasis>
<indexterm><primary>IP spoofing</primary></indexterm>
IP Spoofing går ud på at få systemet til at tro, at angriberens computer 
er en autoriseret computer, der har lovlig adgang. Dvs. at angriberens 
computer udgiver sig for at være en autoriseret host ved at bruge 
dennes IP-adresse. Dette kan bruges til at indsætte angriberens data i 
en datastrøm. Hvis angriberen ønsker at opnå tovejskommunikation, hvor 
han modtager de pakker, der er tiltænkt den, han udgiver sig for, er det 
sværere, idet han også skal ind og ændre routing-tabellerne. 
Uanset dette, så kan IP spoofing gøre analyse af angreb til en 
umulig opgave.
</para></listitem>

<listitem><para><emphasis>Trojanske heste</emphasis>
<indexterm><primary>Trojanske heste</primary></indexterm>
En "trojansk hest" er et program, som indeholder skjult funktionalitet. Et 
velkendt program på dit system kan se helt uskyldigt ud og udføre sin 
normale funktion. Programmet kan imidlertid være modificeret, så det 
ud over sine normale opgaver f.eks. sender navne og passwords til en fast 
modtager eller lader ukendte personer logge ind på maskinen uden, 
at dette skrives i systemets logfiler. 
"Trojanske heste" kan være programmer efterladt af en angriber, der har 
været inde på dit system. De kan skjule hans spor og lette hans adgang 
næste gang via bagdøre (<emphasis>back-doors</emphasis>). Det kan 
imidlertid også være programmer, 
du selv har hentet ned og installeret. Du tror, du installerer et 
almindeligt program, men i virkeligheden er det en modificeret udgave, 
du har fået fat i. Heldigvis medfører traditionen med 
<ulink url="http://www.opensource.org">Open Source</ulink> 
programmer, at vi har
adgang til kildeteksten, og at man i praksis ikke kan skjule disse problemer
for os. Henter du binære programmer ned (såsom RPM-pakker), så bør
dette kun ske fra betroede steder, hvor du kan regne med at der bliver
holdt styr på sikkerheden - men det er altid en risiko, du må løbe. 
Ydermere findes der PGP-nøglesignaturer i alle RPM-pakker, som man
kan bruge til at kontrollere, hvem der har lavet den enkelte pakke.
Heldigvis er problemerne i Open Source-verdenen meget små i forhold
til det niveau, som Windows-verdenen er udsat for med virus i programmer 
og selv i Word-dokumenter. Et velkendt eksempel på en trojansk hest fra 
Windows verdenen er "Back Orifice". Hvis det først er installeret, giver 
det folk udefra fuld kontrol over den inficerede maskine via
internettet. 
</para></listitem>
</itemizedlist>


<para>
Vi har nu set på forskellige metoder, en angriber kan bruge til at få
adgang til dit system. Men hvad kan han bruge det til?  Lad os dele
angrebene op efter resultatet - hvad opnår vedkommende, og hvor
farligt er det for dig.
</para>

<itemizedlist mark="bullet">
<listitem>
<para><emphasis>Læseadgang</emphasis>
Angriberen kan stjæle (kopiere) dine data. Dette er alvorligt, hvis du 
har hemmelige data, som kan udnyttes af andre på en måde, der skader dig.
Læseadgang kan f.eks. opnås ved packet sniffing - hvis der er værdifuld
information i pakkerne. Man kan beskytte sig ved at kryptere sine data.
Læseadgang kan også opnås ved IP spoofing, hvis angriberen f.eks. giver 
din maskine besked om at videresende et vigtigt 
brev til ham. Endelig kan det opnås, hvis angriberen opnår login på
dit system f.eks. ved at have skaffet sig et brugernavn og tilhørende 
password. Har man login på maskinen, kan man naturligvis også skrive men
kun i de filer, der er adgang til for den bruger, man er logget ind som.
Hvis man er logget ind som root, er det i praksis alle filer.
</para></listitem>

<listitem>
<para><emphasis>Skriveadgang</emphasis> Ud over at dine data kan blive
stjålet, kan du risikere, at de er ændret, og at dit system er
modificeret. Dette er meget alvorligt. Dit system er
kompromitteret. Er dette tilfældet, skal man være
<emphasis>ekstremt</emphasis> forsigtig med systemet, da man typiske ikke
ved hvor meget som er ændret. 
</para>

<para>
Skriveadgang kan opnås, hvis angriberen opnår login på systemet. Han kan
modificere de data, som det anvendte brugernavn har adgang til. Hvis
han er inde som root, har han fuld adgang til at ødelægge eller modificere
dit system. Root-adgang kan opnås ved opsnappe eller knække root passwordet
eller ved at udnytte et sikkerhedshul i en netværksservice f.eks. Sendmail.
En angriber kan også opnå skriveadgang til dit system ved IP spoofing - 
hvis man kan ændre indholdet af pakker, der bliver sendt over nettet, uden
at modtageren opdager det, så har man effektivt forfalskede data. Det kunne
også være kommandoer til systemet. Har en angriber først haft skriveadgang 
til dit system, skal du være meget forsigtig. Du ved ikke hvilke data, der er
ændret - måske er de programmer, du kontrollerer dit system med, selv 
modificeret, og du kan ikke regne med dem længere. Du ved måske ikke med 
sikkerhed, hvornår han første gang har været inde, og dine backups kan være 
inficeret et stykke tid tilbage. Vi kommer tilbage til, hvad du skal gøre 
for at opdage et indbrud i <xref linkend="filtjek"/>. 
Har en angriber lokket dig til at installere en trojansk hest, er det også
en slags skriveadgang - dit system er modificeret.
Den eneste sikre kur er geninstallation af hele systemet.
</para></listitem>
</itemizedlist>

<sect3 id="proof-of-concept">
<title>Remote og local exploit</title>

<para>
Når der findes en fejl i et program kan der ofte laves et lille
program der demonstrerer effekten af fejlen. Disse programmer
kaldes ofte for proof-of-concept kode. Crackeren kan bruge samme
metode til at lave et exploit program, d.v.s. et program, som
udnytter fejlen, sårbarheden.
</para>

<para>
Disse exploit programmer kan fungere via netværk eller afvikles
lokalt. Ideen med lokale programmer er typisk at få flere
rettigheder på systemet (privilege escalation). Derfor skal
programmer som Apache webserveren afvikles med så få privilegier 
som muligt. Så skal der være to sårbarheder for at få magt over
maskinen, - en for at få adgang til maskinen, og en lokal
sårbarhed, som kan give root privilegier.
</para>
</sect3>

<sect3 id="DOS">
<title>Denial of Service angreb</title>
<indexterm><primary>DOS</primary></indexterm>
<indexterm><primary>Denial of service angreb</primary></indexterm>



<!-- dax: TODO: Find bedre formuleringer, gerne kortere /-->

<para>
Ude-af-drift angreb (eng. Denial of Service - DoS) har til formål
at få din maskine til at holde op med gøre det, den er sat til.
Crackeren prøver at forhindre maskinen i at yde den service den
skal ved at overbelaste nettet eller maskinens netsoftware. Ofte
medfører den slags overbelastning at systemerne crasher.  Dette
er knap så alvorligt som et reelt indbrud på systemet, men kan
alligevel godt koste meget tid og mange penge.  Eksempler på DoS
angreb er <emphasis>Pentium F00F-fejlen</emphasis>,
<emphasis>ping of death</emphasis> og
<emphasis>teardrop</emphasis>, som får maskinen til at låse.
Disse fejl er rettet i nyere Linux-systemer.
</para>

<para>
Man kan ikke lokalt i en virksomhed beskytte sig mod almindelig,
lovlig, men massivt overbelastende og unyttig traffik til en
bestemt server og man ser derfor virksomheder, som opsætter
alternative web-sites med nye IP-numre/navne som kan overtage
arbejdet mens der køres DoS mod virksomhederne. Andet er der ikke
at gøre.
</para>
</sect3>

<sect3 id="syn-flood">
<title>Syn flooding og Ping flooding</title>
<indexterm><primary>Syn flooding</primary></indexterm>
<indexterm><primary>Ping flooding</primary></indexterm>

<para>
Ved <emphasis>SYN flooding</emphasis> og <emphasis>Ping
flooding</emphasis> udsættes maskinen for en voldsom belastning fra en
eller flere angribere med at svare på netværksforespørglser, og det er
ikke muligt at bruge andre netværksservices på grund af
overbelastning.
</para>
</sect3>

<sect3 id="smurf">
<title>Smurfing</title>
<indexterm><primary>Smurfing</primary></indexterm>

<para>
Ved <emphasis>smurfing</emphasis> er det netværket, der
overbelastes. Disse problemer kan der dæmmes op for ved fornuftig
router-opsætning. Der er også angreb, hvor der uploades meget
store mængder data til en anonym ftp konto, hvor formålet er at få
diske til at løbe fulde. Disse problemer kan der dæmmes op for med
disk-kvoter og/eller smart partitionering (eller at upload af filer
disables).</para>

<para>
Fra den mere muntre ende kan vi lige vise lidt om DoS angreb fra 
User Friendly strippen den 7/8 99 <ulink url="http://www.userfriendly.org/cartoons/archives/99aug/19990807.html">http://www.userfriendly.org/cartoons/archives/99aug/19990807.html</ulink>.
</para>

<figure id="uf000914-fig" float="1">
<title>User Friendly</title>
<graphic fileref="uf000914.&magic;"  scale="40"></graphic>
</figure>  
</sect3>

</sect2>

</sect1>

<sect1 id="sikkerhed-paa-mit-system">
<title>Har mit system sikkerhedsproblemer?</title>

<para>
Nu skal vi se på, hvor meget du udsætter din maskine for, når du 
tilslutter den til internettet. Vi tager udgangspunkt i en Linux-maskine, 
som har en netværksopkobling enten via modem eller fast forbindelse. 
Det er reelt ikke så vigtigt, at det er en Linux-maskine - alle 
systemer med netværk har samme karakteristiske træk. 
</para>

<para>
Lad os inddele verden efter  
</para>

<itemizedlist mark="bullet">
<listitem><para>"On and off" :
Opkobling sker med modem og f.eks. PPP. Der hentes post og
surfes minimalt på internettet.
<indexterm><primary>Risiko</primary>
<secondary>On and off</secondary></indexterm>
</para>

<para>Du har ikke så meget at frygte, selvom du måske ikke har styr på
din sikkerhed på maskinen.  Når du laver en modem-opkobling til
internettet, får du tildelt en IP-adresse, dvs. en adresse, som alle kan
tilgå din maskine på. Men den adresse er forskellig fra gang til gang
når du laver opkobling. Derfor bliver det i praksis umuligt at afsøge 
din maskines sikkerhedshuller fra en anden maskine, før du igen har
lukket forbindelsen. Der er dog oplagt, at den risiko, du løber,
svarer nøje til den tid du er koblet på internettet.
</para>


</listitem>

<listitem><para>"Seriøs surfing": Opkobling sker med modem og f.eks. PPP. Der
hentes post jævnligt, og der surfes en del. Denne situation kan
også gælde for en maskine, som via automatiske services laver
internetopkobling for et helt lokalnet. Til Linux er det
ofte "diald", som bruges til dette.
<indexterm><primary>Risiko</primary>
<secondary>seriøs surfing</secondary></indexterm>

</para>
<para>
Du er tilkoblet internettet i længere tid ad gangen men stadig med 
forskellig IP-adresse hver gang, så du er ikke helt nem at finde.
Men i modsætning til "On and off" brugeren er du på så lang tid, 
at der godt kan
laves skanning på din maskine. Hvis der findes en usikker service,
kan den måske give oplysninger om svagheder i dit system, og dermed
kan din netværkssikkerhed rammes. Du bør tænke på hvilke åbninger, 
der er i dit system. Du bør lære noget om grundlæggende
netværkssikkerhed. Læs f.eks. resten af artiklerne i denne serie.
</para>

</listitem>

<listitem><para>"Fast opkobling": Maskinen har fast opkobling til internettet 
via ethernet-, ISDN-, ADSL- eller anden forbindelse.
<indexterm><primary>Risiko</primary><secondary>Fast opkobling</secondary></indexterm>

</para>
<para>
Du kan skannes fra en enhver maskine på internettet medmindre der er
firewalls eller såkaldte proxy-servere imellem. Du kan ikke
overvåge alt 24 timer i døgnet. Maskinen efterlades. Du må tjekke
dine log filer! Slå overflødige netværksservices fra og begræns adgangen
til dem, der er tilbage. Du bør lære noget om sikkerhed. Læs f.eks. som en
start de kommende artikler i denne serie. På internettet er der 
masser af yderligere information, og der findes gode bøger om emnet.
</para>
</listitem>
</itemizedlist>


<para>
Lad os antage, at din maskine har direkte adgang til internettet uden 
firewall eller anden beskyttelse. Vi vil nu se på, hvorfor 
din maskine kan være udsat, og hvordan andre finder ud af, at du har en
maskine på nettet. At det netop er din maskine, som er udset til et
angreb, kan skyldes mange ting: Tilfældigheder, at du anses
for at ligge inde med interessante data, eller at du ikke har
vedligeholdt din Linux-maskine og fået lukket de kendte sikkerhedshuller. 
</para>

<para>
En angriber har flere måder at finde din maskine på. En er f.eks.
at studere brevhovederne i dine breve. En anden er at hente listen
over hostnavnene i dit domæne vha. DNS (navneservere). En mere
direkte måde er at bruge ping.
</para>

<para>
En angriber kan derefter spørge din maskine, hvilke services den 
tilbyder, og måske finde et sikkerhedshul. Som eksempel kan vi tage ssh,
som tilbydes på port 22. Med telnet kan man logge ind på port 22 og få
versionsnummeret på ssh. I det følgende eksempel finder vi ud af, at det 
er ssh version 1.2.27, der kører. Kan angriberen f.eks. på internettet finde 
en beskrivelse af en sikkerhedsfejl i den version af ssh, kan han udnytte
dette til at angribe dit system med.
</para>

<screen>
<prompt>[robin@sherwood robin]$</prompt> <userinput>telnet bohr 22</userinput>
Trying 172.17.0.3...
Connected to bohr
Escape character is '^]'.
SSH-1.5-1.2.27                          
</screen>

<para>
Normalt er det nødvendigt, at din maskine har nogle af 
de mange netværksservices kørende, da de bruges til at kommunikere med 
andre maskiner via netværk. Ofte kan de fleste af dem dog slås fra, se 
<xref linkend="services"/>.
</para>

<para>
I stedet for at en angriber manuelt skal gennemse alle dine porte for mulige
huller, kan han gøre det nemmere og meget hurtigere ved at installere 
programmer såsom nmap. Nmap kan hentes på 
<ulink url="http://www.insecure.org/nmap">http://www.insecure.org/nmap</ulink>.
Med nmap kan man dels se hvilke maskiner, der er i live,
men også hvilke porte, der er åbne. Nedenstående eksempel viser, at
maskinen "bohr" har (alt for) mange porte åbne. 
<indexterm><primary>nmap</primary></indexterm>
<indexterm><primary>porte</primary></indexterm>
</para>

<screen>
<prompt>[robin@sherwood robin]$</prompt> <userinput>nmap bohr</userinput>
Starting nmap V. 2.12 by Fyodor (fyodor@dhp.com, www.insecure.org/nmap/)
Interesting ports on bohr.herne.dk (172.17.0.3):
Port    State       Protocol  Service
21      open        tcp        ftp
22      open        tcp        ssh
23      open        tcp        telnet
25      open        tcp        smtp
79      open        tcp        finger         
80      open        tcp        http
98      open        tcp        linuxconf
111     open        tcp        sunrpc
113     open        tcp        auth
513     open        tcp        login
514     open        tcp        shell
515     open        tcp        printer
6000    open        tcp        X11             

Nmap run completed -- 1 IP address (1 host up) scanned in 2 seconds       
</screen>

<para>
Eksemplet med nmap svarer til, hvad man udefra kan se om maskinen. Har
man adgang til maskinen, så kan "netstat -a" også være interessant,
idet kommandoen viser alle de netværksforbindelser, som er etableret,
samt de ventende serverprogrammer. Et forkortet output af "netstat -a"
kan være følgende, hvor man kan se, at en telnet-session fra sherwood
til bohr er igang, og serverprogrammerne ssh, sendmail (smtp),
telnet og ftp er klar.
</para>

<programlisting>
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address   Foreign Address        State      
tcp        0      0 bohr:telnet sherwood.herne.dk:1074 ESTABLISHED
tcp        0      0 *:ssh           *:*                    LISTEN      
tcp        0      0 *:smtp          *:*                    LISTEN      
tcp        0      0 *:telnet        *:*                    LISTEN      
tcp        0      0 *:ftp           *:*                    LISTEN      
</programlisting>

<para>
Du kan læse mere om NMAP på <ulink url="http://www.itworld.com/Sec/2202/LWD010404vcontrol1/">http://www.itworld.com/Sec/2202/LWD010404vcontrol1/</ulink>
og <ulink url="http://www.insecure.org/nmap/nmap_doc.html">http://www.insecure.org/nmap/nmap_doc.html</ulink>.
</para>


<para>
<indexterm><primary>cheops</primary></indexterm> Man kan også have
interesse i at bruge det grafiske program cheops, som findes på 
<ulink url="ftp://ftp.marko.net/pub/cheops/RPMS/">ftp://ftp.marko.net/pub/cheops/RPMS/</ulink>.
Programmet er skrevet sådan, at det grafisk viser hvilke maskiner, som
er i live, og evt. overvåger, at de forbliver i live. Cheops er nok
primært beregnet til at give systemadministratoren et hurtigt overblik
over netværket, men det kan også bruges til at udse sig svage
maskiner, som kan angribes. På følgende billede er vist, hvordan
cheops ud fra et domænenavn selv finder ud af, at der er seks maskiner
i live. Det vises grafisk hvilket operativsystem, der anvendes på hver
af dem. Fra venstre mod højre: SGI IRIX, Linux, HP/UX, HP/UX, Windows
og endelig en speciel maskine.  </para>

<figure id="cheops-fig" float="1">
<title>Cheops</title>
<graphic fileref="cheops.&magic;"  scale="40"></graphic>
</figure>  

<para>
Flytter man musen ned på ikonet for maskinen, får man flere oplysninger
om den ofte også versionsnumre, og man kan yderligere direkte skanne
maskinen for alle oplysninger. Man kan ofte se alt for meget - især når 
folk ikke har deres sikkerhed i orden.
</para>

<figure id="cheops2-fig" float="1">
<title>Cheops</title>
<graphic fileref="cheops2.&magic;"  scale="40"></graphic>
</figure>  

<para>
Det er altså nemt at trække informationer ud af en ubeskyttet maskine.
</para>
</sect1>

<sect1 id="sikring-af-min-maskine">
<title>Hvordan sikrer jeg min maskine?</title>
<indexterm><primary>Sikring af maskine</primary></indexterm>

<para>
Hold din maskine ajour med sikkerhedsrettelser. 
Du kan følge med på diverse postlister/nyhedsgrupper om sikkerhed, 
og websider - se mere i <xref linkend="sikkerhedsreferencer"/>.  
Ofte kan man hurtigt efter en fejl er opdaget, hente rettelsen 
fra internettet.
</para>

<para>
Mange peger på Linux, som et system der er meget tidskrævende at holde 
opdateret, fordi der kommer så mange opdateringer til Linux og de 
services, man ofte kører. Men mange af disse opdateringer er netop 
rettelser, som lukker sikkerhedshuller. Samme sikkerhedshuller findes 
ofte også til andre systemer, men de bliver ikke lukket ligeså hurtigt, 
hvis de overhovedet bliver det. Den ekstra tid du skal bruge på 
sikkerhedsopdatering er altså blot en sikring af dit system, som ikke 
er muligt i samme omfang for mange andre systemer. Desuden er det også 
lettere at finde sikkerhedsopdateringer til Linux og andre Open 
Source-systemer, da disse ganske bramfrit annonceres på internettet.
</para>

<para>
Når du henter en sikkerhedsopdatering, så tænk lige på om den
kommer fra et sted, du stoler på - den kunne i princippet være
falsk. Det er den sikkert ikke, men nøjes alligevel med at hente
fra "officielle" steder. Den første lektie, du skal lære, hvis du vil
have et sikkert computersystem, er at være en lille smule paranoid.
:-) Der er intet på nettet, der er helt sikkert.
</para>

<sect2 id="honey-pot">
<title>Honeypot - lær at forsvare dig før det koster</title>
<indexterm><primary>Honeypot</primary></indexterm>
<indexterm><primary>DHP</primary></indexterm>
<para>
På <ulink
url="http://www.honeynet.org/">http://www.honeynet.org/</ulink>
forfølges en interessant tankegang. Man sætter en "honeypot",
dvs. en krukke med lækker honning, op, og derefter studeres de
bier som går i lag med honningen. I netværks-sammenhæng opsætter
man en computer, som ikke har nogen data af værdi, men med det
setup man har tænkt sig at køre sidenhen. I en periode lader man
crackere angribe maskinen og holder meget øje med den, så man kan
se, hvad der sker. Erfaringerne deles og diskuteres gerne med
andre, og erfaringerne bruges til at lave endnu mere sikre
maskiner.
</para>

</sect2>

</sect1>

<sect1 id="sikkerhedsreferencer">
<title>Referencer</title>

<para>Gode steder at starte</para>

  <itemizedlist mark="bullet">
    <listitem><para>Linux Administrator's Security Guide (LASG) by Kurt Seifried.
        Denne bog er guld værd - og kan findes på 
        <ulink url="http://seifried.org/lasg/">http://seifried.org/lasg/</ulink>.
    </para></listitem>
    <listitem><para>Linux Security HOWTO - 
        <ulink url="http://sunsite.auc.dk/ldp/HOWTO/Security-HOWTO.html">http://sunsite.auc.dk/ldp/HOWTO/Security-HOWTO.html</ulink>
    </para></listitem>
  </itemizedlist>

<para>
Annonceringer af fejl i flere af de kendte Linux-distributioner:
</para>

  <itemizedlist mark="bullet">

    <listitem>
     <indexterm><primary>Sikkerhed</primary><secondary>Debian</secondary></indexterm>
     <para><emphasis>Debian</emphasis> 
       <ulink url="http://www.debian.org/security/">http://www.debian.org/security/</ulink>
       Lister sikkerhedsrelaterede fejl i Debian.
    </para></listitem>
    <listitem>
      <indexterm><primary>Sikkerhed</primary><secondary>SuSE</secondary></indexterm>
      <para><emphasis>SuSE</emphasis> 
       <ulink url="http://www.suse.de/security/index.html">http://www.suse.de/security/index.html</ulink>
       har liste over sikkerhedsfejl i SuSE.
    </para></listitem>
    <listitem>
     <indexterm><primary>Sikkerhed</primary><secondary>Red Hat</secondary></indexterm>
     <para><emphasis>Red Hat</emphasis> 
       <ulink url="http://www.redhat.com/support/errata">http://www.redhat.com/support/errata</ulink>
       Generel indgang til fejllisterne for Red Hats produkter. 
    </para></listitem>
  </itemizedlist>

<para>Steder som ellers bør eller kan følges</para>
  <itemizedlist mark="bullet">
    <listitem><para> <ulink url="http://www.cert.org/"> Cert.org </ulink>
      er et center for internet sikkerheds-ekspertise, som drives
      af Carnegie Mellon universitetet. Deres <ulink
      url="http://www.us-cert.gov/cas/techalerts/index.html">
      alarm (eller alert) arkiv
      (http://www.us-cert.gov/cas/techalerts/index.html)
      </ulink> viser nyeste såvel som
      gamle sikkerhedshuller i gængse systemer.
    </para></listitem>
    <listitem><para>Bugtraq <ulink url="http://www.securityfocus.com">http://www.securityfocus.com</ulink>
      bør du følge med på for at læse om de nyeste afsløringer af 
      sikkerhedsbrister (exploits).
    </para></listitem>
    <listitem><para>Root Shell <ulink url="http://ftp2.de.freebsd.org/pub/misc/www.rootshell.com/">http://www.rootshell.com</ulink>
      har alt indenfor diskussion af sikkerhed.
    </para></listitem>
    <listitem><para>Linux Today <ulink url="http://linuxtoday.com">http://linuxtoday.com</ulink> bringer
      også sikkerhedsbrister frem sammen med andre nyheder. Det er muligt 
      at tilpasse hvilke nyheder man får f.eks. nyheder om sikkerhed.
    </para></listitem>
    <listitem><para><ulink url="http://www.securityportal.com/">http://www.securityportal.com/</ulink>
      er et andet interessant sted for folk, som interesserer sig for sikkerhed.
    </para></listitem>
    <listitem><para>Linux Security WWW - 
        <ulink url="http://www.aoy.net/Linux/Security">http://www.aoy.net/Linux/Security</ulink>,
        med mange Linux-relaterede sikkerhedsannonceringer, FAQs og links.
    </para></listitem>
    <listitem><para>Linux Security Home Page - 
        <ulink url="http://www.ecst.csuchico.edu/~jtmurphy/">http://www.ecst.csuchico.edu/~jtmurphy/</ulink>
    </para></listitem>
    <listitem><para>Reptile's Linux Security Page - 
        <ulink url="http://www.reptile.net/linux">http://www.reptile.net/linux</ulink>
    </para></listitem>
    <listitem><para>Infilsec Vulnerability Engine - 
        <ulink url="http://www.infilsec.com/vulnerabilities/">http://www.infilsec.com/vulnerabilities/</ulink>
        - generelt om sikkerhed.
    </para></listitem>
    <listitem><para>Munitions - <ulink url="http://munitions.polkaroo.net/">http://munitions.polkaroo.net/</ulink>
        - stor samling af viden og programmer om kryptering af data 
          og netværkstrafik til Linux.
    </para></listitem>
  </itemizedlist>
</sect1>
</chapter>



