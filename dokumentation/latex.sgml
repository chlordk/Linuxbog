<chapter id="latex">
<title>Latex</title>
<para>
Dette afsnit er ment som en introduktion til LaTeX. Der kræves ingen
forudsætninger ud over at du skal kunne bruge en computer. LaTeX
minder i de grundlæggende <emphasis>principper</emphasis> om HTML, så
kender du lidt til dét, får du ingen problemer (ellers kan det sagtens
læres!).
</para>

<para>
Gennem eksempler og små øvelser kommer du igang med at bruge LaTeX og
bliver forhåbentligt hurtigt fortrolig med de grundlæggende elementer
i systemet. Har du ikke LaTeX på din computer, bliver det også
gennemgået hvordan du får det... det er <emphasis>gratis</emphasis>
;-)
</para>

<para>
Målgruppen for denne artikkel er absolut nybegyndere af LaTeX, der
bare gerne vil igang. Alle kan være med og du behøver ikke være en ørn
til Linux for at kunne lave noget <emphasis>professionelt</emphasis> i
LaTeX.
</para>

<para>
<emphasis>Rigtig god fornøjelse!</emphasis>
</para>


<sect1 id="latex-indledning">
<title>Latex indledning</title>

<para>
LaTeX udtales {[latek]} og er et kommandobasseret system til at
opsætte bøger, rapporter, artikler, noder, matematiske formler, grafer
og meget mere. Mange mene sikkert, at fx Microsoft Word eller Corel
Wordperfect også godt kan gøre dette, men dertil er svarret et klart
''jahee \ldots '' :-)
</para>

<para>
Programmer som fx MS Word er bygget op, så det du har på skærmen, får
du ud på printeren. Disse programmer kaldes tit
WhayYouSeeIsWhatYouGet-programmer (WYSIWYG). Dette kan
<emphasis>både</emphasis> være en fordel, og en ulempe. Fordelen er
klar, hvis man ikke er så tryg ved at bruge en computer, eller hvis
det altid er meget små ting man skal have skrevet ned. Men lige så
snart teksterne bliver lidt længere og en lille smule mere avanceret,
kan der opstå problemer med WYSIWYG-programmerne.
</para>

<para>
Du har sikkert flere gange, under Windows, fået en blå skærm frem på
skærmen, uden at du egentligt har gjort noget galt, eller ''programmet
har udført en ulovlig handling'' og det du har skrevet bare er
væk\ldots Der kan nævnes mange mere eller mindre spøjse ting, der kan
gå galt, og fejlene har mange årsager. Det kommer man ikke ud for med
LaTeX. Når du skriver LaTeX er det hele ren tekst, dokumenterne fylder
derfor ikke en brøkdel af hvad fx MS Word's gør - og skriver du det
tilmed under Linux er dine data så sikre som de nu kan blive - husk
dog stadig at gemme - der kan jo komme strømafbrydelse ;-)
</para>

<para>
Er man flere, der arbejder på et dokument/rapport, sparer man tid ved
at sætte sig ind i LaTeX. Her kan man nemlig dele et dokument op i
lige så mange filer man vil. Det gør, at man kan skrive mange på én
gang, uden at skulle tænke på om de andre gemmer oven i, og man
midster sin tekst. Envidere skal man ikke sidde og fedte med
indholdsfortegnelsen, for at få den til at passe, rette alle
henvisninger til sidst, lave hele litteraturlisten fra starten - og
mange mange andre ting!
</para>

<para>
Jeg har først stiftet rigtigt bekendskab med LaTeX efter jeg er
startet på Aalborg Universitet, men kan se nu, at hvis jeg havde kendt
til LaTeX da jeg gik i gymnasiet, havde det sparet mig en god portion
tid - specielt til historieopgaven i 2.g og den store skriftelige
opgave i 3.g.
</para>

<para>
Faktisk havde mine venner og jeg snakket om ''det der'' LaTeX, men der
var ingen af os som havde prøvet at bruge det. Jeg søgte lidt på
internettet, og fandt også lidt, men ikke rigtigt noget man kunne
bruge til noget - Specielt var det noget med nogle pakker som man
skulle ''hente ind'' - dét lød avanceret, så LaTeX fik lov til at
ligge.
</para>

<para>
Da jeg startede på AAU fandt jeg så ud af at en studerende engang
hvade skrevet lidt om LaTeX. Jeg printede det hele ud og læste
det. Dér var også en for-skrevet ''preamble'' med ''de der'' pakker -
så man ikke skulle starte fra grunden. Jeg har brugt Linux i et par
år, så det var ikke noget problem at få det compilet og printet ud.
</para>

<para>
LaTeX har to ulemper, som jeg ser det: Det ene er at det man bliver
nødt til at sætte sig ned og læse en time (fx dette) for at lære
det. Den anden er at man for at se det compilede dokument skal have et
program som kan vise .dvi-filerne - sidstnævnte er mest et problem,
hvis man skriver noget i LaTeX til folk der kun kan bruge Windows.
</para>

<para>
Denne bog tager kun det mest basale med, for bare at komme igang! Ting
der ikke er uddybet, kan undersøges nærmere i ''The Not So Short
Introduction to LaTeX'', som kan hentes gratis på nettet.
</para>
</sect1>

<sect1 id="grundlaeggende-latex">
<title>Grundlæggende LaTeX</title>

<para>
LaTeX er et alternativ til de gengse
tekstbehandlingsprogrammer. Faktisk kan du selv vælge hvilket program
du vil skrive LaTeX´i, for det hele skal gemmes som en ren
tekst. Dvs. identisk med hvad du får, hvis du gemmer noget du har
skrevet i notesblokken i Windows. At LaTeX skal være ren tekst,
udelukker ikke, at du kan skrive det i fx Word, hvis du ikke har andre
alternativer, men bemærk: Det kan <emphasis>ikke</emphasis> anbefales!
En del af ideen med at bruge LaTeX er jo at man slipper for alle
Word's spidsfindigheder og dets evne til at rode tingene sammen - dét
med at skrive i Word var kun et ekstremt eksempel!
</para>

<para>
Følgende et citat fra en af mine underviser på AAU:
</para>

<para>
<emphasis>Microsoft Word er et rigtig godt program... specielt hvis man vil have plads på sin harddisk - så kan man jo slette det!</emphasis>
</para>

<para>
LaTeX-dokumentet er som sagt ren tekst. Denne kan betragtes som
kildekoden til fx et program. LaTeX-dokumentet skal compiles, for man
får et resultat.
</para>

<para>
Der findes LaTeX-distributioner både til Windows, MacOs, Unix/Linux.
</para>
</sect1>


<sect1 id="latex-basale-kommandoer">
<title>Basale kommandoer</title>
</para>

<para>
I ethvert LaTeX dokument har du brug for en række kommandoer. Alt
efter hvad dit dokument omhandler, er disse mere eller mindre
avancerede. Generelt er alle kommandoer man bruger i LaTeX logiske, og
efter at have brugt LaTeX et stykke tid, vil du sjældent skulle hen og
slå en ny kommando op - du kan simpelthen gætte dig til den.
</para>

<para>
I det følgende er der en række kommandoer, som du vil komme til at
bruge i dine dokumenter. De kommer i en rækkefølge, som jeg har
snønnet, du vil stifte bekendskab med dem.
</para>

<para>
\begin{description}
	\item $\backslash$input\{preamble.tex\} \\
	Preamble.tex er et dokument hvor hele tekstens {\bf opsætning} er defineret - input svarer til at du faktisk selv har skrevet teksten i starten af dokumentet (hvilket du sagtens kan). Fordelen ved at bruge $\backslash$input er, at preamble.tex er rimelig avanceret i starten, og du på denne måde kan bruge en ''standard-formatering'' til dine dokumenter. Dette betyder {\bf ikke} at alle dine dokumenter skal være ens udseende!\\
	Der er et eksempel på en preamble.tex til en rapport på side \pageref{preamble}. Det kan virke uoverskueligt nu, men når man bliver fortrolig med LaTeX, finder man ud af hvad de forskellige pakker kan (specielt hvis der er noget man ikke kan, og skal have fundet en pakke, der har en bestemt funktion).
\end{description}
</para>

<para>

\begin{description}
	\item $\backslash$begin\{document\} \\
	Fortæller at her fra {\bf begynder} dokumentet. Kommandoen er påkrævet, og skal befinde sig efter preamble.
\end{description}
</para>

<para>

\begin{description}
	\item $\backslash$end\{document\} \\
	Fortæller at her {\bf slutter} dokumentet. Kommandoen er påkrævet, og skal befinde sig som det sidste i dokumentet!
\end{description}
</para>

<para>

\begin{description}
	\item $\backslash$tableofcontents \\
	Denne kommando opretter en {\bf indholdsfortegnelse} af hele dit dokument. For at indholdsfortegnelsen faktisk indeholder noget skal du huske at {\bf compile TO gange}. Du kan placere den hvor du vil.
\end{description}
</para>

<para>

\begin{description}
	\item $\backslash$chapter\{Kapitelnavn\} \\
	Angiver at her starter et kapitel med som hedder 'Kapitelnavn' \\
	Bemærk at LaTeX selv holder styr på hvilket nummer du er kommet til!
\end{description}
</para>

<para>

\begin{description}
	\item $\backslash$section\{Underoverskrift\} \\
	Denne kommando laver en mindre underoverskrift for kapitlet. Det gør teksten nem at læse, når man deler den op i små bider.
\end{description}
</para>

<para>

\begin{description}
	\item $\backslash$subsection\{Under-underoverskrift\} \\
	Til små ting og noter.\\
	Har du brug for det, kan du også få en subsubsection.
\end{description}
</para>

<para>
% ------------------ ENVIROMENTS -------------------
</para>

<para>
\section{Enviroments}
</para>

<para>
Enviromenter er nogle kommandoer, som man begynder - bruger nogle underkommandoer - og ender. Et eksempel herpå er fx punktopstilling. Dette enviroment hedder ''itemize''. Her kommer nogle eksempler på forskellige punktopstillinger:
</para>

<para>
\begin{description}
	\item $\backslash$begin\{itemize\} \\
	Begynder at bruge punktopstilling.
\end{description}
</para>

<para>

\begin{description}
	\item $\backslash$item Punkt-tekst \\
	Herved kommer der en sort prik som punkt. Vil man hellere have fx en bindestreg, skriver man $\backslash$item[-], du kan selv bestemme!
\end{description}
</para>

<para>

\begin{description}
	\item $\backslash$end\{itemize\} \\
	Stopper for brugen af punktopstilling.
\end{description}
</para>

<para>
Vil du gerne have nummereret punktopstilling hedder enviromentet ''enumerate''. LaTeX holder selvfølgelig selv styr på hvilke numre de forskellige punkter har, du skal bare sætte dem i den rigtige rækkefølge. Du kan sagtens have flere enviromenter inden i hinanden, så du fx har punkt 1, med underpunkterne a, b og c.
</para>

<para>
Andre enviromenter, som er gode at kende:
\begin{itemize}
	\item description (ved brug af $\backslash$item får man hængende indrykning)
	\item center
	\item equation
	\item table
	\item se flere i ''The Not So Short Introduction to LaTeX''
\end{itemize}
</para>

<para>
% ------------------ FORMATERING --------------------------
</para>

<para>
\section{Formatering}
</para>

<para>
\begin{description}
	\item \{$\backslash$bf Fed tekst\}
	Dette gør teksten inden for tuborg-klammerne fed. Bemærk at tuborgen står {\bf før} $\backslash$bf
\end{description}
</para>

<para>

\begin{description}
	\item \{$\backslash$it Kursiv tekst\} \\
	Dette gør teksten inden for tuborg-klammerne kursiv. Bemærk at tuborgen står {\bf før} $\backslash$it
\end{description}
</para>

<para>
Der findes forskellige andre kommandoer til formatering - se listen neden under. En huskeregel for det med hvor tuborg-klammerne skal stå er, at når det har noget med formatering at gøre, skal den være før kommandoen, ellers skal den være efter.
</para>

<para>
Husk at du ikke skal formatere overskrifter så som chapter, section, og subsection - det er allerede forudbestemt i preamble.tex!
</para>


<itemizedlist mark="bullet">
<listitem>
 <para>
\textt
 </para>
</listitem>
<listitem>
 <para>
\small
 </para>
</listitem>
<listitem>
 <para>
\Large
 </para>
</listitem>
<listitem> 
 <para>
\Huge
 </para>
</listitem>
</itemizedlist>
</sect1>

<sect1 id=latex-henvisninger">
<title>Henvisninger</title>


<para>
\begin{description}
	\item $\backslash$footnote\{Fodnotetekst\} \\
	Behøver man at skrive at du blot skal skrive fodnoten, og så holder LaTeX styr på dem.
\end{description}
</para>

<para>

\begin{description}
	\item $\backslash$label\{Mærke-navn\} \\
	Tildeler et bestemt sted et navn, som er usynlig i teksten, men som gør at man kan henvise til den senere (eller før) - se næste kommando. Hvis du bruger label inden for equation-enviromentet bliver ''formlen'' navngivet med et ''formel-nummer''.
\end{description}
</para>

<para>

\begin{description}
	\item $\backslash$ref\{Mærkenavn\} \\
	Henviser til section-nummeret \\
	Eks: ''Jvf. ($\backslash$ref\{Mærkenavn\})'' kunne fx give ''Jvf. (5.3)''.
\end{description}
</para>

<para>

\begin{description}
	\item $\backslash$pageref\{Mærkenavn\} \\
	Henviser til side-nummeret \\
	Eks: ''Jvf. side $\backslash$ref\{Mærkenavn\}'' kunne fx give ''Jvf. side 21''.
\end{description}
</para>

<para>
\begin{description}
	\item $\backslash$cite\{litteraturhenvisnings-label\} \\
	Hvis du i litteraturlisten har angivet labels til alle dine kilder, kan du henvise til dem med denne kommando og du får så et
	nummer.
\end{description}
</para>

</sect1>


<sect1 id="latex-billeder">
<title>Billeder</title>

<para>
Der findes mange måder at sætte billeder ind i dokumenterne på, men
min anbefaling, er at konvertere alt til eps, og sætte dem ind med
følgende stykke ''kode'':
</para>

<screen>
\begin\{figure\}{[!h]}
\begin\{center\}
\includegraphics{[width=0.8$\backslash$textwidth]}\{billede.eps\}
\end\{center\}
\caption\{$\backslash$label\{billed-label\}Billedtekst.\}
\end\{figure\}
</screen>

<para>
{[!h]} sørger for at billedet kommer til at sidde dér hvor det er sat
ind i teksten. Det kan udelades, og så vil LaTeX flytte lidt rundt på
billederne, de altid sidder øverst på en side. Det ser bedst ud, man
har man mange billeder, hvor der evt. er en længere tekst der skal
passe til hver er {[!h]} en nødvendighed.
</para>


<sect2 id="Xfig">
<title>Xfig</title>

<para>
Skal du tegne dine egne billeder, kan du med fordel anvende programmet Xfig. Det kan gemme i LaTeX-format og postscript (m.fl.), hvilket resulterer i nogle <emphasis>meget</emphasis> skarpe og flotte figurer. Programmet kræver lige som LaTeX lidt tid at sætte sig ind i - men det er {\bf tiden værd!!}
</para>
</sect2>
</sect1>


<sect1 id="latex-specialtegn">
<title>Specialtegn</title>

<para>
Hvis man vil kommentere noget i teksten, som ikke skal compiles kan
man bruge et \%. Det er godt til at holde styr på hvor man er i
teksten ved at fx ''kommentere'' en linie hvor man skriver fx alle
overskrifterne - så de er lettere at få øje på når man bladre gennem
kilden.
</para>

<para>
Hvis man skal bruge \%-tegnet skal man foran skrive et $\backslash$ foran. \\
Skal man skrive et $\backslash$ skal man skrive \$$\backslash$backslash\$.
</para>

<para>
$-tegnene bruges til at markere at man skrive matematiske kommandoer,
hvor det markere start og stop for matematisk område ... uden noget
med <command>begin</command> eller <command>end</command>!
</para>

<para>
Andre tegn som man ikke kan skrive direkte er fx: \&amp; \{ \} (der er flere!). Du skal bare sætte et \ foran, så virker det.
</para>

<para>
Noget helt andet er et hash-tegn ($\sharp$): Det har noget med
matematik at gøre og vi skriver derfor \$$\backslash$sharp\$ \\
Firkantede parenteser skrives som: $\backslash$lbrack og
$\backslash$rbrack \\
</para>

<para>
Skal du bruge de fitkantede paranteser hedder de $\backslash$lbrack og $\backslash$rbrack. Er der tale om en hel sætning som skal i firkantede paranteser, kan du nøjes med at sætte en tuborg uden om klammerne.
</para>

<para>
De forskellige pile skrives som retningen på pilen. Stort begyndelsesbogstav laver en ''dobbeltpil'', fx er \$$\backslash$Leftrightarrow\$ et ensbetydendemed-tegn ($\Leftrightarrow$) (\$-tegnene skal med fordi det er en matematik-kommando). 
</para>

<para>
LaTeX-logoerne laver du med \{$\backslash$LaTeX\}.
</para>

<para>
Gåseøjn: Du skal ikke bruge shift+2 - men lave to apostroffer ved siden af hinanden!
</para>

</sect1>


<sect1 id="latex-grafik">
<title>Grafik</title>

<para>
\begin{description}
	\item $\backslash$epsfig\{file=filnavn,hight=højde,width=bredde\} \\
	Filformatet skal være Encapsulated PostScript format (.eps-filer).
\end{description}
</para>

<para>

\begin{description}
	\item $\backslash$caption\{Teksten til billedet eller tabellen\} \\
	Bruges til henvisninger for billeder og tabeller - kapitelnummer.tabel-/billednummer (i dette kapitel).
\end{description}
</para>


<para>
\section{System i kommandoerne}
I starten hvor jeg brugte LaTeX skrev jeg under Windows og compilede under Linux. Til at skrive i brugte jeg programmet TextPad, som kommer fra www.textpad.com. Det er et genialt program, som man kan få til at farve LaTeX-kommandoerne. Er du hardcore skriver du i Emacs med det samme (der er i det hele taget 1000 gode grunde til at skrive under Linux - du kan fx have dvi-dokumentet åbent hele tiden, som automatisk bliver opdateret (dén slags kan man godt glemme alt om i Windows). Standardgenvejen til at compile LaTeX i Emacs er C-c C-f.
</para>

<para> 
Selv om LaTeX kommandoerne er farvet, kan det godt virke lidt
uoverskueligt at finde rundt i teksten, hvis man fx leder efter et
bestemt afsnit som man vil rette i. Der er to løsninger på dette
problem. Det ene er, at man i teksten lige over et kapitel laver en
''kommenteret'' linie, hvor overskriften for kapitlet også står - den
er noget nemmere at få øje på.  </para>

<screen>
{\bf Eksempel:} \\
\begin{verbatim}
% ------------------ GRUNDLÆGGENDE LATEX ------------------ 
\chapter{Grundlæggende LaTeX}
\end{verbatim}
</screen>

\section{{\TeX}-dokumentet}

<para>
Opstillingen af teksten kan du gøre efter dit eget hoved - hvordan du ny synes det er behageligt. Fx synes nogle at det er dejligt at indrygge teksten med en tabulator omkring en kommando, men det er jo en smagssag, for det er nemlig lige meget, hvordan du skriver din tekst. LaTeX opfører sig på det område lige som HTML. Lange ophold kun give ét når dokumentet er compilet.
</para>

<para>
Mht. opstillingen af afsnit kommer der automatisk et nyt når du har en eller flere tomme linier i teksten. Et ''tvunget'' linieskift - altså hvor linien ikke er skrevet til ende, men man vil starte på en ny, skal man skrive $\backslash$$\backslash$ efter linien.
</para>

<para>
% ------------------ PREAMBLE -------------------------

\chapter{Preamble}\label{preamble}
\section{Standard}

{\bf Eksempel:}
<screen>
$\backslash$typeout\{- START ----------------------------------- Preamble.tex --\} \\
$\backslash$documentclass\lbrack10pt,oneside,a4paper,danish\rbrack\{report\} \\
$\backslash$usepackage\lbrack danish\rbrack\{babel\} \\
$\backslash$usepackage\lbrack latin1\rbrack\{inputenc\} \\
$\backslash$usepackage\{t1enc\} \\
$\backslash$usepackage\lbrack xdvi\rbrack\{epsfig\} \\
$\backslash$usepackage\{ifthen\} \\
$\backslash$usepackage\{latexsym\} \\
$\backslash$usepackage\{theorem\} \\
$\backslash$usepackage\{varioref\} \\
$\backslash$usepackage\{epic\} \\
$\backslash$usepackage\{eepic\} \\

$\backslash$usepackage\{multicol\} \\

$\backslash$usepackage\{fancyhdr\} \\
$\backslash$usepackage\{float\} \\
$\backslash$usepackage\{makeidx\}

$\backslash$evensidemargin = -1.0cm \\
$\backslash$oddsidemargin  =  2.0cm

$\backslash$makeindex

$\backslash$parskip        =    1ex \\
$\backslash$parindent      =    0em \\
$\backslash$baselineskip   =    2ex

$\backslash$pagestyle\{fancy\} \label{fancy}

$\backslash$typeout\{- SLUT ----------------------------------- Preamble.tex --\}
</screen>

\section{Ekstra-indstillinger}

<para>
Alt hvad der <emphasis>ikke</emphasis> står inden for document-sektionen, kan faktisk skrives i preamble. Det kunne fx være:
</para>

<para>
$\backslash$author\{Ditfornavn Ditefternavn\} \\
$\backslash$date\{$\backslash$today\} (today gør at den automatisk skriver compile-datoen, men du kan også bare selv skrive den, hvis den gerne skal ligge fast)
</para>

<para>
Ved at have dette til at stå i preamble, behøver du kun oven over skrive $\backslash$title\{Titlen på dit værk\} <emphasis>over</emphasis> $\backslash$begin\{document\}. Herefter tilføjer du lige <emphasis>efter</emphasis> $\backslash$maketitle, hvilket giver dig en titelside. Vi du gerne have en mere avanceret side, kan det også lade sig gøre, da der er et enviroment, som hedder titlepage.
</para>

<para>
NB! Fordi du har author og date til at stå behøver du jo ikke at bruge maketitle, men det er en mulighed.
</para>

<para>
Vil du have streger under overskrifterne kan du skrive: \\
$\backslash$underlineheadings
</para>

<para>
\section{Ikke-rapport}
</para>

<para>
En anden god ting ved preamble er at selv om en ting står der <emphasis>to</emphasis> gange er det den sidste der gælder. Hvis du så fx skal lave en side, eller et brev for den sags skyld, kan du bare øverst (inden dokumentet begynder): \\
$\backslash$pagestyle\{empty\} \\
Pagestyke er egenteligt kun et udtryk for hvordan sidehoved og -fødder ser ud og skal man ikke have dem, fx fordi der ikke skal være nogle kapitler eller sections, kan man bare skrive empty. Jvf. pagestyle (\ref{fancy}) er fancy en standard i LaTeX - altså nogle for-indstillinger. Du kan sagtens eksperimentere med at lave dine egne indstillinger. Det kræver jo naturligt nok nogle flere linier.
</para>

<para>

% ------------ AFSLUTTENDE BEMÆRKNINGER ----------------------
</para>

<para>
\chapter{Afsluttende bemærkninger}
Om jeg så havde haft alverdens papir til rådighed bliver jeg aldrig færdig med at fortælle om LaTeX. Det skyldes (som jeg håber du har fornemmet indtil nu) at kombinationsmulighederne er ganske ufattelige, og jeg som følge deraf naturligvis ikke kender til dem alle, og igen ikke har skrevet om dem. Jeg håber dog at du har fået noget ud af denne lille introduktion. Har du det har du gjort mig glad! :-)
</para>

<para>
Der er skrevet meget litterator om LaTeX, men intet for helt
nybegyndere på dansk, derfor denne bog. Har du nu fået blod på tanden,
synes jeg bestemt, at du skal videre. Her er en række bøger, som jeg
har haft nytte af igennem tiden:
</para>

<para>
\begin{itemize}
</para>

<para>
	\item The Not So Short Introduction To {\LaTeXe}, af Tobias Oetiker m.fl.\\
		Dette er en gratis bog, som du kan finde på internettet. Jeg vil anbefale dig at hente den hjem og printe den ud, for der er
		et godt stikordsregister bag i. Du kan finde den på adressen
		http://www.sunsite.auc.dk/ftp/pub/tex/ctan/info/lshort/english/lshort.ps
</para>

<para>
	\item The LaTeX Graphics Companion, af Michel Goossens m.fl. \\
		Denne bog indeholder alt hvad der har med grafik at gøre, hvad enten det er billeder, grafer, noder, streger, kurver, figurer
		- simpelt hen alt. Koster lige under 500,- kr.
</para>

<para>
	\item The LaTeX Companion, af ??? m.fl. \\
		Denne bog indeholder alt hvad der har med ''normale'' dokumenter at gøre. Der bliver henvist til den, fra Oetiker og fra selve
		compileren af LaTeX, hvis du har lavet en fejl. Kuster lige under 500,- kr.
</para>

<para>
	\item The LaTeX Web Companion, af ??? m.fl. \\
		Denne bog handler om hvordan man integrerer sine kundskaber i LaTeX på internettet. Den er ret ny, og rimeligt spændende.
		Koster ligeledes lige under 500,- kr.
</para>

<para>
\end{itemize}
</para>
</sect1>
</chapter>
